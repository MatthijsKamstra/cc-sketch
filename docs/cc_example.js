// Generated by Haxe 4.3.2
(function ($global) { "use strict";
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = "EReg";
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = "HxOverrides";
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.now = function() {
	return Date.now();
};
var Lambda = function() { };
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = "Lambda";
Lambda.has = function(it,elt) {
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		if(x1 == elt) {
			return true;
		}
	}
	return false;
};
Lambda.exists = function(it,f) {
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		if(f(x1)) {
			return true;
		}
	}
	return false;
};
var Main = function() {
	this.ccTypeArray = [art_CC100,art_TestExport,art_ZipTest,art_CCLoader,art_TestGo];
	var _gthis = this;
	window.document.addEventListener("DOMContentLoaded",function(event) {
		$global.console.log("" + cc_model_constants_App.NAME + " :: build: " + cc_model_constants_App.BUILD);
		_gthis.setupCC();
		_gthis.setupNav();
	});
};
$hxClasses["Main"] = Main;
Main.__name__ = "Main";
Main.main = function() {
	var app = new Main();
};
Main.prototype = {
	setupCC: function() {
		var ctx = Sketch.create("creative_code_mck");
		this.hash = $global.location.hash;
		this.hash = StringTools.replace(this.hash,"#","");
		var name = "art." + this.hash;
		var clazz = $hxClasses[name];
		if(clazz == null) {
			clazz = this.ccTypeArray[this.ccTypeArray.length - 1];
		}
		this.count = this.ccTypeArray.indexOf(clazz);
		var cc = Type.createInstance(clazz,[ctx]);
		this.changeHash();
	}
	,setupNav: function() {
		var _gthis = this;
		window.addEventListener("hashchange",function() {
			$global.location.reload();
		},false);
		window.addEventListener("keydown",function(e) {
			switch(e.key) {
			case "ArrowDown":
				_gthis.count = 0;
				break;
			case "ArrowLeft":
				_gthis.count--;
				break;
			case "ArrowRight":
				_gthis.count++;
				break;
			case "ArrowUp":
				_gthis.count = _gthis.ccTypeArray.length - 1;
				break;
			}
			_gthis.changeHash();
		},false);
	}
	,changeHash: function() {
		var c = this.ccTypeArray[this.count];
		var tmp = c.__name__;
		$global.location.hash = StringTools.replace(tmp,"art.","");
	}
	,__class__: Main
};
Math.__name__ = "Math";
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = "Reflect";
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + field];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[field] = value;
	}
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
var SketchOption = function() {
	this._dpi = 72;
	this._padding = 20;
	this._scale = false;
	this._type = "canvas";
	this._container = window.document.body;
	this._autopause = true;
	this._autostart = true;
	this._autoclear = true;
	this._fullscreen = true;
};
$hxClasses["SketchOption"] = SketchOption;
SketchOption.__name__ = "SketchOption";
SketchOption.prototype = {
	get_width: function() {
		return this._width;
	}
	,set_width: function(value) {
		this._fullscreen = false;
		if(this._height == null) {
			this._height = value;
		}
		return this._width = value;
	}
	,get_height: function() {
		return this._height;
	}
	,set_height: function(value) {
		this._fullscreen = false;
		if(this._width == null) {
			this._width = value;
		}
		return this._height = value;
	}
	,get_fullscreen: function() {
		return this._fullscreen;
	}
	,set_fullscreen: function(value) {
		return this._fullscreen = value;
	}
	,get_autoclear: function() {
		return this._autoclear;
	}
	,set_autoclear: function(value) {
		return this._autostart = value;
	}
	,get_autostart: function() {
		return this._autostart;
	}
	,set_autostart: function(value) {
		return this._autostart = value;
	}
	,get_autopause: function() {
		return this._autopause;
	}
	,set_autopause: function(value) {
		return this._autopause = value;
	}
	,get_container: function() {
		return this._container;
	}
	,set_container: function(value) {
		return this._container = value;
	}
	,get_type: function() {
		return this._type;
	}
	,set_type: function(value) {
		return this._type = value;
	}
	,get_scale: function() {
		return this._scale;
	}
	,set_scale: function(value) {
		return this._scale = value;
	}
	,get_padding: function() {
		return this._padding;
	}
	,set_padding: function(value) {
		return this._padding = value;
	}
	,get_dpi: function() {
		return this._dpi;
	}
	,set_dpi: function(value) {
		return this._dpi = value;
	}
	,__class__: SketchOption
	,__properties__: {set_dpi:"set_dpi",get_dpi:"get_dpi",set_padding:"set_padding",get_padding:"get_padding",set_scale:"set_scale",get_scale:"get_scale",set_type:"set_type",get_type:"get_type",set_container:"set_container",get_container:"get_container",set_autopause:"set_autopause",get_autopause:"get_autopause",set_autostart:"set_autostart",get_autostart:"get_autostart",set_autoclear:"set_autoclear",get_autoclear:"get_autoclear",set_fullscreen:"set_fullscreen",get_fullscreen:"get_fullscreen",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width"}
};
var Sketch = function() {
	this.document = window.document;
	this.window = window;
};
$hxClasses["Sketch"] = Sketch;
Sketch.__name__ = "Sketch";
Sketch.create = function(name,opt) {
	if(opt != null) {
		Sketch.option = opt;
	}
	if(Sketch.option.get_type() == "canvas") {
		return new Sketch().createCanvas(name);
	} else {
		return new Sketch().createGLCanvas(name);
	}
};
Sketch.createHiddenCanvas = function(name,option,isDebug) {
	if(isDebug == null) {
		isDebug = false;
	}
	if(option == null) {
		option = new SketchOption();
	}
	var body = window.document.querySelector("body");
	var canvas = window.document.createElement("canvas");
	body.appendChild(canvas);
	var __w = Math.min(Global.w * 0.50,option.get_width());
	canvas.setAttribute("id","hiddencanvas-" + name);
	canvas.style.position = "absolute";
	canvas.style.left = "0px";
	canvas.style.top = "0px";
	canvas.style.border = "1px solid pink";
	canvas.style.width = "" + __w + "px";
	canvas.width = option.get_width();
	canvas.height = option.get_height();
	if(!isDebug) {
		var tmp = option.get_width();
		canvas.style.left = -(tmp * 1.5) + "px";
	}
	var ctx = canvas.getContext("2d");
	return ctx;
};
Sketch.prototype = {
	createCanvas: function(name) {
		var body = this.document.querySelector("body");
		if(this.document.getElementById("canvas-wrapper") != null) {
			var element = this.document.getElementById("canvas-wrapper");
			element.parentNode.removeChild(element);
			this.window.addEventListener(Global.RESIZE,null,false);
			this.window.addEventListener(Global.MOUSE_MOVE,null,false);
			this.window.addEventListener(Global.MOUSE_DOWN,null,false);
			this.window.addEventListener(Global.MOUSE_UP,null,false);
			this.window.addEventListener(Global.KEY_DOWN,null,false);
		}
		var container = this.document.createElement("div");
		container.setAttribute("id","canvas-wrapper");
		container.className = "canvas-wrapper-container";
		this.canvas = this.document.createElement("canvas");
		this.canvas.setAttribute("id",name);
		body.appendChild(container);
		container.appendChild(this.canvas);
		this.ctx = this.canvas.getContext("2d");
		new Sketch().init(this.ctx);
		this.onResizeHandler();
		this.window.addEventListener(Global.RESIZE,$bind(this,this.onResizeHandler),false);
		return this.ctx;
	}
	,createGLCanvas: function(name) {
		return null;
	}
	,checkForId: function(id) {
		return true;
	}
	,onResizeHandler: function() {
		var c = this.document.getElementsByTagName("canvas");
		if(Sketch.option == null) {
			return;
		}
		if(Sketch.option.get_fullscreen()) {
			Global.w = this.window.innerWidth;
			Global.h = this.window.innerHeight;
			Sketch.option.set_width(Global.w);
			Sketch.option.set_height(Global.h);
		} else {
			Global.w = Sketch.option.get_width();
			Global.h = Sketch.option.get_height();
		}
		var _g = 0;
		var _g1 = c.length;
		while(_g < _g1) {
			var i = _g++;
			var _c = c[i];
			if(Sketch.option.get_scale()) {
				var padding = Sketch.option.get_padding();
				var scaleX = (this.window.innerWidth - 2 * padding) / Global.w;
				var scaleY = (this.window.innerHeight - 2 * padding) / Global.h;
				var scale = Math.min(scaleX,scaleY);
				var tmp = "" + Sketch.option.get_width() * scale;
				_c.style.width = tmp + "px";
				var tmp1 = "" + Sketch.option.get_height() * scale;
				_c.style.height = tmp1 + "px";
			}
			if(_c.id.indexOf("hiddencanvas-") != -1) {
				continue;
			}
			_c.width = Global.w;
			_c.height = Global.h;
		}
		$global.console.log("RESIZE :: w=" + Global.w + " , h=" + Global.h);
	}
	,init: function(ctx) {
		var _gthis = this;
		this.window.addEventListener(Global.MOUSE_MOVE,function(e) {
			Global.mouseX = e.clientX;
			Global.mouseY = e.clientY;
			Global.mouseMoved = true;
		});
		this.window.addEventListener(Global.MOUSE_DOWN,function(e) {
			Global.mouseDown = true;
		});
		this.window.addEventListener(Global.MOUSE_UP,function(e) {
			Global.mouseDown = false;
		});
		this.window.addEventListener(Global.KEY_DOWN,function(e) {
			if(e.metaKey == true && e.key == "r") {
				haxe_Log.trace("cmd + r",{ fileName : "src/Sketch.hx", lineNumber : 198, className : "Sketch", methodName : "init"});
				$global.location.reload();
			}
			if(e.metaKey == true && e.key == "s" && e.shiftKey == false) {
				e.preventDefault();
				e.stopPropagation();
				haxe_Log.trace("cmd + s",{ fileName : "src/Sketch.hx", lineNumber : 204, className : "Sketch", methodName : "init"});
				cc_tool_ExportFile.downloadImageBg(ctx,true);
			}
			if(e.metaKey == true && e.key == "s" && e.shiftKey == true) {
				e.preventDefault();
				e.stopPropagation();
				haxe_Log.trace("cmd + shift + s",{ fileName : "src/Sketch.hx", lineNumber : 210, className : "Sketch", methodName : "init"});
				cc_tool_ExportFile.downloadImage(ctx,false);
			}
			if(e.metaKey == true && (e.code == "KeyS" && e.altKey == true)) {
				e.preventDefault();
				e.stopPropagation();
				haxe_Log.trace("cmd + alt + s",{ fileName : "src/Sketch.hx", lineNumber : 216, className : "Sketch", methodName : "init"});
				cc_tool_ExportFile.onBase64Handler(ctx,true);
			}
			if(e.metaKey == true && e.key == "f") {
				if(!Global.isFullscreen) {
					_gthis.openFullscreen();
					Global.isFullscreen = true;
				} else {
					_gthis.closeFullscreen();
					Global.isFullscreen = false;
				}
			}
		},false);
	}
	,openFullscreen: function() {
		var elem = this.document.documentElement;
		if(elem.requestFullscreen != null) {
			elem.requestFullscreen();
		} else if(elem.mozRequestFullScreen) {
			elem.mozRequestFullScreen();
		} else if(elem.webkitRequestFullscreen) {
			elem.webkitRequestFullscreen();
		} else if(elem.msRequestFullscreen) {
			elem.msRequestFullscreen();
		}
	}
	,closeFullscreen: function() {
		if(this.document.exitFullscreen != null) {
			this.document.exitFullscreen();
		} else if(this.document.mozCancelFullScreen) {
			this.document.mozCancelFullScreen();
		} else if(this.document.webkitExitFullscreen) {
			this.document.webkitExitFullscreen();
		} else if(this.document.msExitFullscreen) {
			this.document.msExitFullscreen();
		}
	}
	,__class__: Sketch
};
var SketchBase = function(ctx) {
	this.dpiScale = 1;
	this.isDebug = false;
	this.isDrawActive = true;
	if(this.isDebug) {
		haxe_Log.trace("START :: " + this.toString(),{ fileName : "src/Sketch.hx", lineNumber : 515, className : "SketchBase", methodName : "new"});
	}
	if(ctx == null) {
		var option = new SketchOption();
		option.set_width(1080);
		option.set_autostart(true);
		option.set_padding(10);
		option.set_scale(true);
		ctx = Sketch.create("creative_code_mck",option);
	}
	this.dpiScale = Sketch.option.get_dpi() / 72;
	this.ctx = ctx;
	window.addEventListener(Global.RESIZE,$bind(this,this._reset),false);
	window.addEventListener(Global.KEY_DOWN,$bind(this,this._keyDown),false);
	window.addEventListener(Global.KEY_UP,$bind(this,this._keyUp),false);
	this.setup();
	this._draw();
};
$hxClasses["SketchBase"] = SketchBase;
SketchBase.__name__ = "SketchBase";
SketchBase.prototype = {
	_keyDown: function(e) {
		if(e.key == " ") {
			this.draw();
		}
	}
	,_keyUp: function(e) {
	}
	,_reset: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		this._draw();
	}
	,_draw: function(timestamp) {
		this.draw();
		this.__export();
		if(this.isDrawActive) {
			window.requestAnimationFrame($bind(this,this._draw));
		}
	}
	,setup: function() {
		if(this.isDebug) {
			haxe_Log.trace("SETUP :: " + this.toString() + " -> override public function draw()",{ fileName : "src/Sketch.hx", lineNumber : 578, className : "SketchBase", methodName : "setup"});
		}
	}
	,draw: function() {
		if(this.isDebug) {
			haxe_Log.trace("DRAW :: " + this.toString() + " -> override public function draw()",{ fileName : "src/Sketch.hx", lineNumber : 586, className : "SketchBase", methodName : "draw"});
		}
	}
	,__export: function() {
	}
	,pause: function() {
		this.isDrawActive = !this.isDrawActive;
	}
	,stop: function() {
		this.isDrawActive = false;
	}
	,play: function() {
		this.isDrawActive = true;
		this._draw();
	}
	,start: function() {
		this.play();
	}
	,onKeyDown: function(e) {
	}
	,scaled: function(value) {
		return value * this.dpiScale;
	}
	,scaledInt: function(value) {
		return value * this.dpiScale | 0;
	}
	,get_w2: function() {
		return Global.w / 2;
	}
	,get_h2: function() {
		return Global.h / 2;
	}
	,get_w4: function() {
		return Global.w / 4;
	}
	,get_h4: function() {
		return Global.h / 4;
	}
	,get_w3: function() {
		return Global.w / 3;
	}
	,get_h3: function() {
		return Global.h / 3;
	}
	,toString: function() {
		var c = js_Boot.getClass(this);
		var className = c.__name__;
		return className;
	}
	,__class__: SketchBase
	,__properties__: {get_h3:"get_h3",get_w3:"get_w3",get_h4:"get_h4",get_w4:"get_w4",get_h2:"get_h2",get_w2:"get_w2"}
};
var Global = function() { };
$hxClasses["Global"] = Global;
Global.__name__ = "Global";
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = "Std";
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x);
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = "StringTools";
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.lpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	var buf_b = "";
	l -= s.length;
	while(buf_b.length < l) buf_b += c == null ? "null" : "" + c;
	buf_b += s == null ? "null" : "" + s;
	return buf_b;
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
StringTools.hex = function(n,digits) {
	var s = "";
	var hexChars = "0123456789ABCDEF";
	do {
		s = hexChars.charAt(n & 15) + s;
		n >>>= 4;
	} while(n > 0);
	if(digits != null) {
		while(s.length < digits) s = "0" + s;
	}
	return s;
};
var ValueType = $hxEnums["ValueType"] = { __ename__:true,__constructs__:null
	,TNull: {_hx_name:"TNull",_hx_index:0,__enum__:"ValueType",toString:$estr}
	,TInt: {_hx_name:"TInt",_hx_index:1,__enum__:"ValueType",toString:$estr}
	,TFloat: {_hx_name:"TFloat",_hx_index:2,__enum__:"ValueType",toString:$estr}
	,TBool: {_hx_name:"TBool",_hx_index:3,__enum__:"ValueType",toString:$estr}
	,TObject: {_hx_name:"TObject",_hx_index:4,__enum__:"ValueType",toString:$estr}
	,TFunction: {_hx_name:"TFunction",_hx_index:5,__enum__:"ValueType",toString:$estr}
	,TClass: ($_=function(c) { return {_hx_index:6,c:c,__enum__:"ValueType",toString:$estr}; },$_._hx_name="TClass",$_.__params__ = ["c"],$_)
	,TEnum: ($_=function(e) { return {_hx_index:7,e:e,__enum__:"ValueType",toString:$estr}; },$_._hx_name="TEnum",$_.__params__ = ["e"],$_)
	,TUnknown: {_hx_name:"TUnknown",_hx_index:8,__enum__:"ValueType",toString:$estr}
};
ValueType.__constructs__ = [ValueType.TNull,ValueType.TInt,ValueType.TFloat,ValueType.TBool,ValueType.TObject,ValueType.TFunction,ValueType.TClass,ValueType.TEnum,ValueType.TUnknown];
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = "Type";
Type.createInstance = function(cl,args) {
	var ctor = Function.prototype.bind.apply(cl,[null].concat(args));
	return new (ctor);
};
Type.typeof = function(v) {
	switch(typeof(v)) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum($hxEnums[e]);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
var art_CC100 = function() {
	this._color4 = null;
	this._color3 = null;
	this._color2 = null;
	this._color1 = null;
	this._color0 = null;
	this._cellsize = 150;
	this._radius = 150;
	this.grid = new cc_util_GridUtil();
	this.shapeArray = [];
	this.init();
	SketchBase.call(this,null);
	haxe_Log.trace(new cc_model_constants_Sizes().INSTAGRAM,{ fileName : "src/art/CC100.hx", lineNumber : 32, className : "art.CC100", methodName : "new"});
};
$hxClasses["art.CC100"] = art_CC100;
art_CC100.__name__ = "art.CC100";
art_CC100.__super__ = SketchBase;
art_CC100.prototype = $extend(SketchBase.prototype,{
	init: function() {
		this.dot = this.createShape(100,{ x : Global.w / 2, y : Global.h / 2});
		cc_draw_Text.embedGoogleFont("Oswald:200,300,400,500,600,700",$bind(this,this.onEmbedHandler));
		this.createQuickSettings();
		this.onAnimateHandler(this.dot);
	}
	,onEmbedHandler: function(e) {
		haxe_Log.trace("onEmbedHandler :: " + this.toString() + " -> \"" + e + "\"",{ fileName : "src/art/CC100.hx", lineNumber : 44, className : "art.CC100", methodName : "onEmbedHandler"});
		this.drawShape();
	}
	,createQuickSettings: function() {
		this.panel1 = QuickSettings.create(10,10,"Settings").setGlobalChangeHandler($bind(this,this.drawShape)).addHTML("Reason","Sometimes I need to find the best settings").addTextArea("Quote","text",function(value) {
			haxe_Log.trace(value,{ fileName : "src/art/CC100.hx", lineNumber : 55, className : "art.CC100", methodName : "createQuickSettings"});
		}).addBoolean("All Caps",false,function(value) {
			haxe_Log.trace(value,{ fileName : "src/art/CC100.hx", lineNumber : 56, className : "art.CC100", methodName : "createQuickSettings"});
		}).setKey("h").saveInLocalStorage("store-data-" + this.toString());
	}
	,createShape: function(i,point) {
		var shape = { _id : "" + i, _type : "circle", x : point.x, y : point.y, radius : this._radius};
		return shape;
	}
	,onAnimateHandler: function(obj) {
		var padding = 50;
		var time = cc_util_MathUtil.random(1,2);
		var xpos = cc_util_MathUtil.random(padding,Global.w - 2 * padding);
		var ypos = cc_util_MathUtil.random(padding,Global.h - 2 * padding);
		var Go = new cc_lets_Go(obj,time);
		Go._isFrom = false;
		var _this = Go;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"x")) {
			objValue = Reflect.getProperty(_this._target,"x");
		}
		var _range = { key : "x", from : _this._isFrom ? xpos : objValue, to : !_this._isFrom ? xpos : objValue};
		_this._props.h["x"] = _range;
		if(_this._isFrom) {
			_this.updateProperties(0);
		}
		var _this1 = _this;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"y")) {
			objValue = Reflect.getProperty(_this1._target,"y");
		}
		var _range = { key : "y", from : _this1._isFrom ? ypos : objValue, to : !_this1._isFrom ? ypos : objValue};
		_this1._props.h["y"] = _range;
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this = _this1;
		_this._easing = cc_lets_easing_Sine.get_easeInOut();
		var _this1 = _this;
		_this1._options.onComplete = $bind(this,this.onAnimateHandler);
		_this1._options.onCompleteParams = [obj];
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		if(this.isDebug) {
			cc_util_ShapeUtil.gridField(this.ctx,this.grid);
		}
		var _g = 0;
		var _g1 = this.shapeArray.length;
		while(_g < _g1) {
			var i = _g++;
			var sh = this.shapeArray[i];
		}
		this.ctx.fillStyle = cc_util_ColorUtil.getColourObj(this._color4);
		cc_draw_Text.fillText(this.ctx,"text",Global.w / 2,Global.h / 2,"'Oswald', sans-serif;",160);
		cc_CanvasTools.strokeColourRGB(this.ctx,this._color3);
		cc_CanvasTools.strokeWeight(this.ctx,2);
		cc_CanvasTools.circleStroke(this.ctx,this.dot.x,this.dot.y,20);
	}
	,setup: function() {
		haxe_Log.trace("SETUP :: " + this.toString(),{ fileName : "src/art/CC100.hx", lineNumber : 111, className : "art.CC100", methodName : "setup"});
		var colorArray = cc_util_ColorUtil.niceColor100SortedString[cc_util_MathUtil.randomInt(cc_util_ColorUtil.niceColor100SortedString.length - 1)];
		var int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._color0 = { r : int >> 16 & 255, g : int >> 8 & 255, b : int & 255};
		var int = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		this._color1 = { r : int >> 16 & 255, g : int >> 8 & 255, b : int & 255};
		var int = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		this._color2 = { r : int >> 16 & 255, g : int >> 8 & 255, b : int & 255};
		var int = Std.parseInt(StringTools.replace(colorArray[3],"#","0x"));
		this._color3 = { r : int >> 16 & 255, g : int >> 8 & 255, b : int & 255};
		var int = Std.parseInt(StringTools.replace(colorArray[4],"#","0x"));
		this._color4 = { r : int >> 16 & 255, g : int >> 8 & 255, b : int & 255};
		this.isDebug = true;
		this.grid.setCellSize(this._cellsize);
		this.grid.setIsCenterPoint(true);
		this.shapeArray = [];
		var _g = 0;
		var _g1 = this.grid.array.length;
		while(_g < _g1) {
			var i = _g++;
			this.shapeArray.push(this.createShape(i,this.grid.array[i]));
		}
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_CC100
});
var art_CCLoader = function() {
	this._color4 = null;
	this._color3 = null;
	this._color2 = null;
	this._color1 = null;
	this._color0 = null;
	this._cellsize = 150;
	this._radius = 150;
	this.grid = new cc_util_GridUtil();
	this.shapeArray = [];
	SketchBase.call(this,null);
};
$hxClasses["art.CCLoader"] = art_CCLoader;
art_CCLoader.__name__ = "art.CCLoader";
art_CCLoader.__super__ = SketchBase;
art_CCLoader.prototype = $extend(SketchBase.prototype,{
	setup: function() {
		haxe_Log.trace("SETUP :: " + this.toString(),{ fileName : "src/art/CCLoader.hx", lineNumber : 27, className : "art.CCLoader", methodName : "setup"});
		var loader = new cc_tool_Loader("name");
		var _this = loader;
		var type = null;
		var _type = type == null ? _this.fileType("img/aaron-burden-38410-unsplash.jpg") : type;
		var _obj = { path : "img/aaron-burden-38410-unsplash.jpg", type : _type, func : null};
		if(_this.get__isDebug()) {
			haxe_Log.trace(_obj,{ fileName : "src/cc/tool/Loader.hx", lineNumber : 76, className : "cc.tool.Loader", methodName : "add"});
		}
		_this.get__loadingArray().push(_obj);
		var _this1 = _this;
		var type = null;
		var _type = type == null ? _this1.fileType("img/miguel-ibanez-643801-unsplash.jpg") : type;
		var _obj = { path : "img/miguel-ibanez-643801-unsplash.jpg", type : _type, func : null};
		if(_this1.get__isDebug()) {
			haxe_Log.trace(_obj,{ fileName : "src/cc/tool/Loader.hx", lineNumber : 76, className : "cc.tool.Loader", methodName : "add"});
		}
		_this1.get__loadingArray().push(_obj);
		var _this = _this1;
		var type = null;
		var _type = type == null ? _this.fileType("img/nathan-dumlao-526295-unsplash.jpg") : type;
		var _obj = { path : "img/nathan-dumlao-526295-unsplash.jpg", type : _type, func : null};
		if(_this.get__isDebug()) {
			haxe_Log.trace(_obj,{ fileName : "src/cc/tool/Loader.hx", lineNumber : 76, className : "cc.tool.Loader", methodName : "add"});
		}
		_this.get__loadingArray().push(_obj);
		var _this1 = _this;
		var type = null;
		var _type = type == null ? _this1.fileType("img/foobar.jpg") : type;
		var _obj = { path : "img/foobar.jpg", type : _type, func : null};
		if(_this1.get__isDebug()) {
			haxe_Log.trace(_obj,{ fileName : "src/cc/tool/Loader.hx", lineNumber : 76, className : "cc.tool.Loader", methodName : "add"});
		}
		_this1.get__loadingArray().push(_obj);
		var _this = _this1;
		_this._onComplete = $bind(this,this.onCompleteHandler);
		_this._onCompleteParams = null;
		var _this1 = _this;
		_this1._onUpdate = $bind(this,this.onUpdateHandler);
		_this1._onUpdateParams = null;
		var _this = _this1;
		_this._onProgress = $bind(this,this.onProgressHandler);
		_this._onProgressParams = null;
		var _this1 = _this;
		_this1._onError = $bind(this,this.onErrorHandler);
		_this1._onErrorParams = null;
		var _this = _this1;
		if(_this.get__isDebug()) {
			haxe_Log.trace("start loading",{ fileName : "src/cc/tool/Loader.hx", lineNumber : 121, className : "cc.tool.Loader", methodName : "load"});
		}
		_this.loadingHandler();
	}
	,onCompleteHandler: function(completeArray) {
		haxe_Log.trace("onCompleteHandler: " + completeArray.length,{ fileName : "src/art/CCLoader.hx", lineNumber : 49, className : "art.CCLoader", methodName : "onCompleteHandler"});
	}
	,onUpdateHandler: function(e) {
		haxe_Log.trace("onUpdateHandler: " + e.src,{ fileName : "src/art/CCLoader.hx", lineNumber : 53, className : "art.CCLoader", methodName : "onUpdateHandler"});
	}
	,onProgressHandler: function(e) {
		haxe_Log.trace("onProgressHandler: " + Std.string(e),{ fileName : "src/art/CCLoader.hx", lineNumber : 57, className : "art.CCLoader", methodName : "onProgressHandler"});
	}
	,onErrorHandler: function(e) {
		haxe_Log.trace("onErrorHandler: " + e.src,{ fileName : "src/art/CCLoader.hx", lineNumber : 61, className : "art.CCLoader", methodName : "onErrorHandler"});
	}
	,draw: function() {
	}
	,__class__: art_CCLoader
});
var cc_tool_export_ExportBase = function(ctx) {
	this._isDebug = false;
	this.imageStringArray = [];
	this.export = new cc_tool_export_ExportWrapper(ctx,this.toString());
	this.export.delay(0);
	this.export.recordInSeconds(10);
	this.export.menu(false);
	this.export.type(cc_tool_export_ExportType.NONE);
	this.export.onRecordStart($bind(this,this.onRecordStartHandler));
	this.export.onRecordComplete($bind(this,this.onRecordCompleteHandler));
	this.export.onExportComplete($bind(this,this.onExportCompleteHandler));
	SketchBase.call(this,ctx);
};
$hxClasses["cc.tool.export.ExportBase"] = cc_tool_export_ExportBase;
cc_tool_export_ExportBase.__name__ = "cc.tool.export.ExportBase";
cc_tool_export_ExportBase.__super__ = SketchBase;
cc_tool_export_ExportBase.prototype = $extend(SketchBase.prototype,{
	onRecordStartHandler: function() {
		if(this.export.get__isDebug()) {
			haxe_Log.trace("" + this.toString() + " onRecordStartHandler",{ fileName : "src/cc/tool/export/ExportBase.hx", lineNumber : 46, className : "cc.tool.export.ExportBase", methodName : "onRecordStartHandler"});
		}
	}
	,onRecordCompleteHandler: function() {
		if(this.export.get__isDebug()) {
			haxe_Log.trace("" + this.toString() + " onRecordCompleteHandler",{ fileName : "src/cc/tool/export/ExportBase.hx", lineNumber : 51, className : "cc.tool.export.ExportBase", methodName : "onRecordCompleteHandler"});
		}
		this.stop();
	}
	,onExportCompleteHandler: function() {
		if(this.export.get__isDebug()) {
			haxe_Log.trace("" + this.toString() + " onExportCompleteHandler",{ fileName : "src/cc/tool/export/ExportBase.hx", lineNumber : 57, className : "cc.tool.export.ExportBase", methodName : "onExportCompleteHandler"});
		}
		this.start();
	}
	,debug: function(isDebug) {
		if(isDebug == null) {
			isDebug = false;
		}
		this._isDebug = isDebug;
	}
	,__export: function() {
		this.export.pulse();
	}
	,__class__: cc_tool_export_ExportBase
});
var art_TestExport = function() {
	this._color4 = null;
	this._color3 = null;
	this._color2 = null;
	this._color1 = null;
	this._color0 = null;
	this._cellsize = 150;
	this._radius = 150;
	this.grid = new cc_util_GridUtil();
	this.shapeArray = [];
	var option = new SketchOption();
	option.set_width(1080);
	option.set_autostart(true);
	option.set_padding(10);
	option.set_scale(true);
	this.ctx = Sketch.create("creative_code_mck",option);
	cc_tool_export_ExportBase.call(this,this.ctx);
	this.init();
};
$hxClasses["art.TestExport"] = art_TestExport;
art_TestExport.__name__ = "art.TestExport";
art_TestExport.__super__ = cc_tool_export_ExportBase;
art_TestExport.prototype = $extend(cc_tool_export_ExportBase.prototype,{
	init: function() {
		this.export.delayInSeconds(2);
		this.export.recordInSeconds(2);
		this.export.type(cc_tool_export_ExportType.NODE);
		this.export.isDebug(false);
		this.export.start();
		this.dot = this.createShape(100,{ x : Global.w / 2, y : Global.h / 2});
		this.onAnimateHandler(this.dot);
	}
	,createShape: function(i,point) {
		var shape = { _id : "" + i, _type : "circle", x : point.x, y : point.y, radius : this._radius};
		return shape;
	}
	,onAnimateHandler: function(obj) {
		var padding = 50;
		var time = cc_util_MathUtil.random(1,2);
		var xpos = cc_util_MathUtil.random(padding,Global.w - 2 * padding);
		var ypos = cc_util_MathUtil.random(padding,Global.h - 2 * padding);
		var Go = new cc_lets_Go(obj,time);
		Go._isFrom = false;
		var _this = Go;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"x")) {
			objValue = Reflect.getProperty(_this._target,"x");
		}
		var _range = { key : "x", from : _this._isFrom ? xpos : objValue, to : !_this._isFrom ? xpos : objValue};
		_this._props.h["x"] = _range;
		if(_this._isFrom) {
			_this.updateProperties(0);
		}
		var _this1 = _this;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"y")) {
			objValue = Reflect.getProperty(_this1._target,"y");
		}
		var _range = { key : "y", from : _this1._isFrom ? ypos : objValue, to : !_this1._isFrom ? ypos : objValue};
		_this1._props.h["y"] = _range;
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this = _this1;
		_this._easing = cc_lets_easing_Sine.get_easeInOut();
		var _this1 = _this;
		_this1._options.onComplete = $bind(this,this.onAnimateHandler);
		_this1._options.onCompleteParams = [obj];
	}
	,drawShape: function() {
		if(this.dot == null) {
			return;
		}
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		if(this.isDebug) {
			cc_util_ShapeUtil.gridField(this.ctx,this.grid);
		}
		var _g = 0;
		var _g1 = this.shapeArray.length;
		while(_g < _g1) {
			var i = _g++;
			var sh = this.shapeArray[i];
		}
		var rgb = cc_util_ColorUtil.randomColourObject();
		cc_CanvasTools.strokeColour(this.ctx,rgb.r,rgb.g,rgb.b);
		cc_util_ShapeUtil.xcross(this.ctx,Global.w / 2,Global.h / 2,200);
		cc_CanvasTools.strokeColourRGB(this.ctx,this._color3);
		cc_CanvasTools.strokeWeight(this.ctx,100);
		cc_CanvasTools.circleStroke(this.ctx,this.dot.x,this.dot.y,100);
	}
	,setup: function() {
		haxe_Log.trace("SETUP :: " + this.toString(),{ fileName : "src/art/TestExport.hx", lineNumber : 103, className : "art.TestExport", methodName : "setup"});
		var colorArray = cc_util_ColorUtil.niceColor100SortedString[cc_util_MathUtil.randomInt(cc_util_ColorUtil.niceColor100SortedString.length - 1)];
		var int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._color0 = { r : int >> 16 & 255, g : int >> 8 & 255, b : int & 255};
		var int = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		this._color1 = { r : int >> 16 & 255, g : int >> 8 & 255, b : int & 255};
		var int = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		this._color2 = { r : int >> 16 & 255, g : int >> 8 & 255, b : int & 255};
		var int = Std.parseInt(StringTools.replace(colorArray[3],"#","0x"));
		this._color3 = { r : int >> 16 & 255, g : int >> 8 & 255, b : int & 255};
		var int = Std.parseInt(StringTools.replace(colorArray[4],"#","0x"));
		this._color4 = { r : int >> 16 & 255, g : int >> 8 & 255, b : int & 255};
		this.isDebug = true;
		this.grid.setCellSize(this._cellsize);
		this.grid.setIsCenterPoint(true);
		this.shapeArray = [];
		var _g = 0;
		var _g1 = this.grid.array.length;
		while(_g < _g1) {
			var i = _g++;
			this.shapeArray.push(this.createShape(i,this.grid.array[i]));
		}
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_TestExport
});
var art_TestGo = function() {
	this._radius = 50;
	this.init();
	SketchBase.call(this,null);
};
$hxClasses["art.TestGo"] = art_TestGo;
art_TestGo.__name__ = "art.TestGo";
art_TestGo.__super__ = SketchBase;
art_TestGo.prototype = $extend(SketchBase.prototype,{
	init: function() {
		this.dot = this.createShape(100,{ x : Global.w / 2, y : Global.h / 2});
		this.dot2 = this.createShape(100,{ x : Global.w / 2, y : Global.h / 2});
		this.dot3 = this.createShape(100,{ x : Global.w / 2, y : Global.h / 2});
		var target = this.dot2;
		var x = this.get_w2();
		var y = this.get_h2();
		var wiggleRoom = 50;
		if(wiggleRoom == null) {
			wiggleRoom = 10;
		}
		var _go = new cc_lets_Go(target,1 + Math.random());
		_go._isWiggle = true;
		var max = wiggleRoom;
		var min = -wiggleRoom;
		var value = x + Math.random() * (max - min) + min;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_go._target,"x")) {
			objValue = Reflect.getProperty(_go._target,"x");
		}
		var _range = { key : "x", from : _go._isFrom ? value : objValue, to : !_go._isFrom ? value : objValue};
		_go._props.h["x"] = _range;
		if(_go._isFrom) {
			_go.updateProperties(0);
		}
		var value = y + Math.random() * (max - min) + min;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_go._target,"y")) {
			objValue = Reflect.getProperty(_go._target,"y");
		}
		var _range = { key : "y", from : _go._isFrom ? value : objValue, to : !_go._isFrom ? value : objValue};
		_go._props.h["y"] = _range;
		if(_go._isFrom) {
			_go.updateProperties(0);
		}
		_go._easing = cc_lets_easing_Sine.get_easeInOut();
		_go._options.onComplete = function() {
			var target1 = target;
			var x1 = x;
			var y1 = y;
			var wiggleRoom1 = wiggleRoom;
			if(wiggleRoom1 == null) {
				wiggleRoom1 = 10;
			}
			var _go = new cc_lets_Go(target1,1 + Math.random());
			_go._isWiggle = true;
			var max = wiggleRoom1;
			var min = -wiggleRoom1;
			var value = x1 + Math.random() * (max - min) + min;
			var objValue = 0;
			if(Object.prototype.hasOwnProperty.call(_go._target,"x")) {
				objValue = Reflect.getProperty(_go._target,"x");
			}
			var _range = { key : "x", from : _go._isFrom ? value : objValue, to : !_go._isFrom ? value : objValue};
			_go._props.h["x"] = _range;
			if(_go._isFrom) {
				_go.updateProperties(0);
			}
			var value = y1 + Math.random() * (max - min) + min;
			var objValue = 0;
			if(Object.prototype.hasOwnProperty.call(_go._target,"y")) {
				objValue = Reflect.getProperty(_go._target,"y");
			}
			var _range = { key : "y", from : _go._isFrom ? value : objValue, to : !_go._isFrom ? value : objValue};
			_go._props.h["y"] = _range;
			if(_go._isFrom) {
				_go.updateProperties(0);
			}
			_go._easing = cc_lets_easing_Sine.get_easeInOut();
			_go._options.onComplete = function() {
				cc_lets_Go.wiggle(target1,x1,y1,wiggleRoom1);
			};
			_go._options.onCompleteParams = null;
		};
		_go._options.onCompleteParams = null;
		var target1 = this.dot3;
		var x1 = this.get_w2();
		var y1 = this.get_h2();
		var _go = new cc_lets_Go(target1,1 + Math.random());
		_go._isOrbit = true;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_go._target,"x")) {
			objValue = Reflect.getProperty(_go._target,"x");
		}
		var _range = { key : "x", from : _go._isFrom ? x1 : objValue, to : !_go._isFrom ? x1 : objValue};
		_go._props.h["x"] = _range;
		if(_go._isFrom) {
			_go.updateProperties(0);
		}
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_go._target,"y")) {
			objValue = Reflect.getProperty(_go._target,"y");
		}
		var _range = { key : "y", from : _go._isFrom ? y1 : objValue, to : !_go._isFrom ? y1 : objValue};
		_go._props.h["y"] = _range;
		if(_go._isFrom) {
			_go.updateProperties(0);
		}
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_go._target,"cx")) {
			objValue = Reflect.getProperty(_go._target,"cx");
		}
		var _range = { key : "cx", from : _go._isFrom ? x1 : objValue, to : !_go._isFrom ? x1 : objValue};
		_go._props.h["cx"] = _range;
		if(_go._isFrom) {
			_go.updateProperties(0);
		}
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_go._target,"cy")) {
			objValue = Reflect.getProperty(_go._target,"cy");
		}
		var _range = { key : "cy", from : _go._isFrom ? y1 : objValue, to : !_go._isFrom ? y1 : objValue};
		_go._props.h["cy"] = _range;
		if(_go._isFrom) {
			_go.updateProperties(0);
		}
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_go._target,"radius")) {
			objValue = Reflect.getProperty(_go._target,"radius");
		}
		var _range = { key : "radius", from : _go._isFrom ? 50 : objValue, to : !_go._isFrom ? 50 : objValue};
		_go._props.h["radius"] = _range;
		if(_go._isFrom) {
			_go.updateProperties(0);
		}
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_go._target,"speed")) {
			objValue = Reflect.getProperty(_go._target,"speed");
		}
		var _range = { key : "speed", from : _go._isFrom ? 2 : objValue, to : !_go._isFrom ? 2 : objValue};
		_go._props.h["speed"] = _range;
		if(_go._isFrom) {
			_go.updateProperties(0);
		}
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_go._target,"angle")) {
			objValue = Reflect.getProperty(_go._target,"angle");
		}
		var _range = { key : "angle", from : _go._isFrom ? 2 : objValue, to : !_go._isFrom ? 2 : objValue};
		_go._props.h["angle"] = _range;
		if(_go._isFrom) {
			_go.updateProperties(0);
		}
		target1["cx"] = x1;
		target1["cy"] = y1;
		target1["angle"] = 0;
		target1["speed"] = 2;
		target1["radius"] = 50;
		this.onAnimateHandler(this.dot);
	}
	,createQuickSettings: function() {
		this.panel1 = QuickSettings.create(10,10,"Settings").setGlobalChangeHandler($bind(this,this.drawShape)).addHTML("Reason","Sometimes I need to find the best settings").addTextArea("Quote","text",function(value) {
			haxe_Log.trace(value,{ fileName : "src/art/TestGo.hx", lineNumber : 41, className : "art.TestGo", methodName : "createQuickSettings"});
		}).addBoolean("All Caps",false,function(value) {
			haxe_Log.trace(value,{ fileName : "src/art/TestGo.hx", lineNumber : 42, className : "art.TestGo", methodName : "createQuickSettings"});
		}).setKey("h").saveInLocalStorage("store-data-" + this.toString());
	}
	,createShape: function(i,point) {
		var shape = { _id : "" + i, _type : "circle", x : point.x, y : point.y, radius : this._radius};
		return shape;
	}
	,onAnimateHandler: function(obj) {
		var padding = 50;
		var time = cc_util_MathUtil.random(1,2);
		var xpos = cc_util_MathUtil.random(padding,Global.w - 2 * padding);
		var ypos = cc_util_MathUtil.random(padding,Global.h - 2 * padding);
		var Go = new cc_lets_Go(obj,time);
		Go._isFrom = false;
		var _this = Go;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"x")) {
			objValue = Reflect.getProperty(_this._target,"x");
		}
		var _range = { key : "x", from : _this._isFrom ? xpos : objValue, to : !_this._isFrom ? xpos : objValue};
		_this._props.h["x"] = _range;
		if(_this._isFrom) {
			_this.updateProperties(0);
		}
		var _this1 = _this;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"y")) {
			objValue = Reflect.getProperty(_this1._target,"y");
		}
		var _range = { key : "y", from : _this1._isFrom ? ypos : objValue, to : !_this1._isFrom ? ypos : objValue};
		_this1._props.h["y"] = _range;
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this = _this1;
		_this._arc = 0;
		var _this1 = _this;
		_this1._easing = cc_lets_easing_Sine.get_easeInOut();
		var _this = _this1;
		_this._options.onComplete = $bind(this,this.onAnimateHandler);
		_this._options.onCompleteParams = [obj];
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		cc_CanvasTools.strokeColourRGB(this.ctx,cc_util_ColorUtil.BLACK);
		cc_CanvasTools.strokeWeight(this.ctx,2);
		cc_CanvasTools.circleStroke(this.ctx,this.dot.x,this.dot.y,20);
		cc_CanvasTools.strokeColourRGB(this.ctx,cc_util_ColorUtil.RED);
		cc_CanvasTools.circleStroke(this.ctx,this.dot2.x,this.dot2.y,100);
		cc_CanvasTools.strokeColourRGB(this.ctx,cc_util_ColorUtil.GREEN);
		cc_CanvasTools.circleStroke(this.ctx,this.dot3.x,this.dot3.y,50);
	}
	,setup: function() {
		haxe_Log.trace("SETUP :: " + this.toString(),{ fileName : "src/art/TestGo.hx", lineNumber : 90, className : "art.TestGo", methodName : "setup"});
		this.isDebug = true;
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_TestGo
});
var art_ZipTest = function() {
	this._color4 = null;
	this._color3 = null;
	this._color2 = null;
	this._color1 = null;
	this._color0 = null;
	this._cellsize = 150;
	this._radius = 150;
	this.grid = new cc_util_GridUtil();
	this.shapeArray = [];
	this.init();
	SketchBase.call(this,null);
	haxe_Log.trace(new cc_model_constants_Sizes().INSTAGRAM,{ fileName : "src/art/ZipTest.hx", lineNumber : 26, className : "art.ZipTest", methodName : "new"});
};
$hxClasses["art.ZipTest"] = art_ZipTest;
art_ZipTest.__name__ = "art.ZipTest";
art_ZipTest.__super__ = SketchBase;
art_ZipTest.prototype = $extend(SketchBase.prototype,{
	init: function() {
		this.dot = this.createShape(100,{ x : Global.w / 2, y : Global.h / 2});
		cc_draw_Text.embedGoogleFont("Oswald:200,300,400,500,600,700",$bind(this,this.onEmbedHandler));
		this.createQuickSettings();
		this.onAnimateHandler(this.dot);
	}
	,onEmbedHandler: function(e) {
		haxe_Log.trace("onEmbedHandler :: " + this.toString() + " -> \"" + e + "\"",{ fileName : "src/art/ZipTest.hx", lineNumber : 38, className : "art.ZipTest", methodName : "onEmbedHandler"});
		this.drawShape();
	}
	,createQuickSettings: function() {
		this.panel1 = QuickSettings.create(10,10,"Settings").setGlobalChangeHandler($bind(this,this.drawShape)).addHTML("Reason","Sometimes I need to find the best settings").addTextArea("Quote","text",function(value) {
			haxe_Log.trace(value,{ fileName : "src/art/ZipTest.hx", lineNumber : 49, className : "art.ZipTest", methodName : "createQuickSettings"});
		}).addBoolean("All Caps",false,function(value) {
			haxe_Log.trace(value,{ fileName : "src/art/ZipTest.hx", lineNumber : 50, className : "art.ZipTest", methodName : "createQuickSettings"});
		}).setKey("h").saveInLocalStorage("store-data-" + this.toString());
	}
	,createShape: function(i,point) {
		var shape = { _id : "" + i, _type : "circle", x : point.x, y : point.y, radius : this._radius};
		return shape;
	}
	,onAnimateHandler: function(obj) {
		var padding = 50;
		var time = cc_util_MathUtil.random(1,2);
		var xpos = cc_util_MathUtil.random(padding,Global.w - 2 * padding);
		var ypos = cc_util_MathUtil.random(padding,Global.h - 2 * padding);
		var Go = new cc_lets_Go(obj,time);
		Go._isFrom = false;
		var _this = Go;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"x")) {
			objValue = Reflect.getProperty(_this._target,"x");
		}
		var _range = { key : "x", from : _this._isFrom ? xpos : objValue, to : !_this._isFrom ? xpos : objValue};
		_this._props.h["x"] = _range;
		if(_this._isFrom) {
			_this.updateProperties(0);
		}
		var _this1 = _this;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"y")) {
			objValue = Reflect.getProperty(_this1._target,"y");
		}
		var _range = { key : "y", from : _this1._isFrom ? ypos : objValue, to : !_this1._isFrom ? ypos : objValue};
		_this1._props.h["y"] = _range;
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this = _this1;
		_this._easing = cc_lets_easing_Sine.get_easeInOut();
		var _this1 = _this;
		_this1._options.onComplete = $bind(this,this.onAnimateHandler);
		_this1._options.onCompleteParams = [obj];
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		if(this.isDebug) {
			cc_util_ShapeUtil.gridField(this.ctx,this.grid);
		}
		var _g = 0;
		var _g1 = this.shapeArray.length;
		while(_g < _g1) {
			var i = _g++;
			var sh = this.shapeArray[i];
		}
		this.ctx.fillStyle = cc_util_ColorUtil.getColourObj(this._color4);
		cc_draw_Text.fillText(this.ctx,"text",Global.w / 2,Global.h / 2,"'Oswald', sans-serif;",160);
		cc_CanvasTools.strokeColourRGB(this.ctx,this._color3);
		cc_CanvasTools.strokeWeight(this.ctx,2);
		cc_CanvasTools.circleStroke(this.ctx,this.dot.x,this.dot.y,20);
	}
	,setup: function() {
		haxe_Log.trace("SETUP :: " + this.toString(),{ fileName : "src/art/ZipTest.hx", lineNumber : 105, className : "art.ZipTest", methodName : "setup"});
		var colorArray = cc_util_ColorUtil.niceColor100SortedString[cc_util_MathUtil.randomInt(cc_util_ColorUtil.niceColor100SortedString.length - 1)];
		var int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._color0 = { r : int >> 16 & 255, g : int >> 8 & 255, b : int & 255};
		var int = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		this._color1 = { r : int >> 16 & 255, g : int >> 8 & 255, b : int & 255};
		var int = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		this._color2 = { r : int >> 16 & 255, g : int >> 8 & 255, b : int & 255};
		var int = Std.parseInt(StringTools.replace(colorArray[3],"#","0x"));
		this._color3 = { r : int >> 16 & 255, g : int >> 8 & 255, b : int & 255};
		var int = Std.parseInt(StringTools.replace(colorArray[4],"#","0x"));
		this._color4 = { r : int >> 16 & 255, g : int >> 8 & 255, b : int & 255};
		this.isDebug = true;
		this.grid.setCellSize(this._cellsize);
		this.grid.setIsCenterPoint(true);
		this.shapeArray = [];
		var _g = 0;
		var _g1 = this.grid.array.length;
		while(_g < _g1) {
			var i = _g++;
			this.shapeArray.push(this.createShape(i,this.grid.array[i]));
		}
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_ZipTest
});
var cc_AST = function() { };
$hxClasses["cc.AST"] = cc_AST;
cc_AST.__name__ = "cc.AST";
var cc_CanvasTools = function() { };
$hxClasses["cc.CanvasTools"] = cc_CanvasTools;
cc_CanvasTools.__name__ = "cc.CanvasTools";
cc_CanvasTools.square = function(ctx,x,y,width,height) {
	if(height == null) {
		height = width;
	}
	ctx.fillRect(x,y,width,height);
};
cc_CanvasTools.leftStrokeRect = function(ctx,x,y,width,height) {
	if(height == null) {
		height = width;
	}
	ctx.strokeRect(x,y,width,height);
};
cc_CanvasTools.centreStrokeRect = function(ctx,x,y,width,height) {
	if(height == null) {
		height = width;
	}
	ctx.strokeRect(x - width / 2,y - height / 2,width,height);
};
cc_CanvasTools.rectangleFillStroke = function(ctx,x,y,width,height) {
	if(height == null) {
		height = width;
	}
	ctx.strokeRect(x,y,width,height);
	ctx.fillRect(x,y,width,height);
};
cc_CanvasTools.centreFillRect = function(ctx,x,y,width,height) {
	if(height == null) {
		height = width;
	}
	ctx.fillRect(x - width / 2,y - height / 2,width,height);
};
cc_CanvasTools.roundRect = function(ctx,_x,_y,_width,_height,_radius,_fill,_stroke) {
	if(_stroke == null) {
		_stroke = false;
	}
	if(_fill == null) {
		_fill = true;
	}
	if(_radius == null) {
		_radius = 5;
	}
	_width = Math.abs(_width);
	_height = Math.abs(_height);
	_x -= _width / 2;
	_y -= _height / 2;
	var radius_tl = _radius;
	var radius_tr = _radius;
	var radius_br = _radius;
	var radius_bl = _radius;
	ctx.beginPath();
	ctx.moveTo(_x + radius_tl,_y);
	ctx.lineTo(_x + _width - radius_tr,_y);
	ctx.quadraticCurveTo(_x + _width,_y,_x + _width,_y + radius_tr);
	ctx.lineTo(_x + _width,_y + _height - radius_br);
	ctx.quadraticCurveTo(_x + _width,_y + _height,_x + _width - radius_br,_y + _height);
	ctx.lineTo(_x + radius_bl,_y + _height);
	ctx.quadraticCurveTo(_x,_y + _height,_x,_y + _height - radius_bl);
	ctx.lineTo(_x,_y + radius_tl);
	ctx.quadraticCurveTo(_x,_y,_x + radius_tl,_y);
	ctx.closePath();
	if(_fill) {
		ctx.fill();
	}
	if(_stroke) {
		ctx.stroke();
	}
};
cc_CanvasTools.makeCircle = function(ctx,x,y,radius) {
	ctx.beginPath();
	ctx.arc(x,y,radius,0,Math.PI * 2,true);
};
cc_CanvasTools.circle = function(ctx,x,y,radius) {
	cc_CanvasTools.makeCircle(ctx,x,y,radius);
	ctx.fill();
	ctx.closePath();
};
cc_CanvasTools.circleFillStroke = function(ctx,x,y,radius) {
	cc_CanvasTools.makeCircle(ctx,x,y,radius);
	ctx.fill();
	ctx.stroke();
	ctx.closePath();
};
cc_CanvasTools.circleFill = function(ctx,x,y,radius) {
	cc_CanvasTools.fillCircle(ctx,x,y,radius);
};
cc_CanvasTools.fillCircle = function(ctx,x,y,radius) {
	cc_CanvasTools.makeCircle(ctx,x,y,radius);
	ctx.fill();
	ctx.closePath();
};
cc_CanvasTools.circleStroke = function(ctx,x,y,radius) {
	cc_CanvasTools.strokeCircle(ctx,x,y,radius);
};
cc_CanvasTools.strokeCircle = function(ctx,x,y,radius) {
	cc_CanvasTools.makeCircle(ctx,x,y,radius);
	ctx.stroke();
	ctx.closePath();
};
cc_CanvasTools.strokePolygon = function(ctx,x,y,sides,size) {
	cc_CanvasTools.polygon(ctx,x,y,sides,size);
	ctx.stroke();
};
cc_CanvasTools.fillPolygon = function(ctx,x,y,sides,size) {
	cc_CanvasTools.polygon(ctx,x,y,sides,size);
	ctx.fill();
};
cc_CanvasTools.outlinedPolygon = function(ctx,x,y,_sides,_size,_fill,_stroke) {
	ctx.fillStyle = _fill;
	cc_CanvasTools.fillPolygon(ctx,x,y,_sides,_size);
	ctx.strokeStyle = _stroke;
	cc_CanvasTools.strokePolygon(ctx,x,y,_sides,_size);
};
cc_CanvasTools.polygon = function(ctx,x,y,sides,size) {
	ctx.beginPath();
	ctx.moveTo(x + size * Math.cos(0),y + size * Math.sin(0));
	var _g = 0;
	var _g1 = sides;
	while(_g < _g1) {
		var i = _g++;
		ctx.lineTo(x + size * Math.cos(i * 2 * Math.PI / sides),y + size * Math.sin(i * 2 * Math.PI / sides));
	}
	ctx.closePath();
};
cc_CanvasTools.eellipse = function(ctx,x,y,width,height) {
	ctx.beginPath();
	var i = 0;
	var counter = 0;
	while(i < Math.PI * 2) {
		haxe_Log.trace("" + counter + ". - " + i + " < " + Math.PI * 2,{ fileName : "src/cc/CanvasTools.hx", lineNumber : 196, className : "cc.CanvasTools", methodName : "eellipse"});
		ctx.lineTo(x + Math.cos(i) * width / 2,y + Math.sin(i) * height / 2);
		i += Math.PI / 16;
		++counter;
	}
	ctx.closePath();
};
cc_CanvasTools.ellipseFill = function(ctx,x,y,width,height) {
	cc_CanvasTools.fillEllipse(ctx,x,y,width,height);
};
cc_CanvasTools.fillEllipse = function(ctx,x,y,width,height) {
	ctx.beginPath();
	ctx.ellipse(x,y,width,height,0,0,2 * Math.PI);
	ctx.fill();
};
cc_CanvasTools.ellipseStroke = function(ctx,x,y,width,height) {
	cc_CanvasTools.strokeEllipse(ctx,x,y,width,height);
};
cc_CanvasTools.strokeEllipse = function(ctx,x,y,width,height) {
	ctx.beginPath();
	ctx.ellipse(x,y,width,height,0,0,2 * Math.PI);
	ctx.stroke();
};
cc_CanvasTools.ellipseFillStroke = function(ctx,x,y,width,height) {
	cc_CanvasTools.fillStrokeEllipse(ctx,x,y,width,height);
};
cc_CanvasTools.fillStrokeEllipse = function(ctx,x,y,width,height) {
	ctx.beginPath();
	ctx.ellipse(x,y,width,height,0,0,2 * Math.PI);
	ctx.fill();
	ctx.stroke();
};
cc_CanvasTools.line = function(ctx,x1,y1,x2,y2) {
	ctx.beginPath();
	ctx.moveTo(x1,y1);
	ctx.lineTo(x2,y2);
	ctx.stroke();
	ctx.beginPath();
};
cc_CanvasTools.triangle = function(ctx,x1,y1,x2,y2,x3,y3) {
	ctx.beginPath();
	ctx.moveTo(x1,y1);
	ctx.lineTo(x2,y2);
	ctx.lineTo(x3,y3);
	ctx.lineTo(x1,y1);
	ctx.stroke();
	ctx.closePath();
};
cc_CanvasTools.strokeTriangle = function(ctx,x1,y1,x2,y2,x3,y3) {
	ctx.beginPath();
	ctx.moveTo(x1,y1);
	ctx.lineTo(x2,y2);
	ctx.lineTo(x3,y3);
	ctx.lineTo(x1,y1);
	ctx.stroke();
	ctx.closePath();
};
cc_CanvasTools.fillTriangle = function(ctx,x1,y1,x2,y2,x3,y3) {
	ctx.beginPath();
	ctx.moveTo(x1,y1);
	ctx.lineTo(x2,y2);
	ctx.lineTo(x3,y3);
	ctx.lineTo(x1,y1);
	ctx.fill();
	ctx.closePath();
};
cc_CanvasTools.eqDownFillTriangle = function(ctx,x,y,sz) {
	ctx.translate(x,y);
	ctx.rotate(cc_util_MathUtil.radians(180));
	cc_CanvasTools.fillTriangle(ctx,0,0 - sz,sz,sz / 2,0 - sz,sz / 2);
	ctx.rotate(cc_util_MathUtil.radians(-180));
	ctx.translate(-x,-y);
};
cc_CanvasTools.eqDownTriangle = function(ctx,x,y,sz) {
	ctx.translate(x,y);
	ctx.rotate(cc_util_MathUtil.radians(180));
	cc_CanvasTools.triangle(ctx,0,0 - sz,sz,sz / 2,0 - sz,sz / 2);
	ctx.rotate(cc_util_MathUtil.radians(-180));
	ctx.translate(-x,-y);
};
cc_CanvasTools.eqFillTriangle = function(ctx,x,y,sz) {
	cc_CanvasTools.fillTriangle(ctx,x,y - sz,x + sz,y + sz / 2,x - sz,y + sz / 2);
};
cc_CanvasTools.eqTriangle = function(ctx,x,y,sz) {
	cc_CanvasTools.triangle(ctx,x,y - sz,x + sz,y + sz / 2,x - sz,y + sz / 2);
};
cc_CanvasTools.strokeWeight = function(ctx,inPx) {
	ctx.lineWidth = inPx;
};
cc_CanvasTools.fillColour = function(ctx,r,g,b,a) {
	cc_CanvasTools.colour(ctx,r,g,b,a);
};
cc_CanvasTools.fillColourRGB = function(ctx,rgb,a) {
	cc_CanvasTools.colour(ctx,rgb.r,rgb.g,rgb.b,a);
};
cc_CanvasTools.colour = function(ctx,r,g,b,a) {
	var c = cc_util_ColorUtil.getColour(r,g,b,a);
	ctx.fillStyle = c;
};
cc_CanvasTools.colourObj = function(ctx,rgb,a) {
	var c = cc_util_ColorUtil.getColour(rgb.r,rgb.g,rgb.b,a);
	ctx.fillStyle = c;
};
cc_CanvasTools.colourRGB = function(ctx,rgb,a) {
	var c = cc_util_ColorUtil.getColour(rgb.r,rgb.g,rgb.b,a);
	ctx.fillStyle = c;
};
cc_CanvasTools.shadowColorRGB = function(ctx,rgb,a) {
	var c = cc_util_ColorUtil.getColour(rgb.r,rgb.g,rgb.b,a);
	ctx.shadowColor = c;
};
cc_CanvasTools.shadowSet = function(ctx,rgb,a,blur) {
	if(blur == null) {
		blur = 15;
	}
	if(a == null) {
		a = 1;
	}
	var c = cc_util_ColorUtil.getColour(rgb.r,rgb.g,rgb.b,a);
	ctx.shadowColor = c;
	ctx.shadowBlur = blur;
};
cc_CanvasTools.strokeColourObj = function(ctx,rgb,a) {
	cc_CanvasTools.lineColour(ctx,rgb.r,rgb.g,rgb.b,a);
};
cc_CanvasTools.lineColourRGB = function(ctx,rgb,a) {
	cc_CanvasTools.lineColour(ctx,rgb.r,rgb.g,rgb.b,a);
};
cc_CanvasTools.strokeColourRGB = function(ctx,rgb,a) {
	cc_CanvasTools.lineColour(ctx,rgb.r,rgb.g,rgb.b,a);
};
cc_CanvasTools.strokeColour = function(ctx,r,g,b,a) {
	cc_CanvasTools.lineColour(ctx,r,g,b,a);
};
cc_CanvasTools.lineColour = function(ctx,r,g,b,a) {
	ctx.strokeStyle = cc_util_ColorUtil.getColour(r,g,b,a);
};
cc_CanvasTools.colourName = function(ctx,name) {
	ctx.fillStyle = name;
};
cc_CanvasTools.background = function(ctx,r,g,b,a) {
	if(g == null) {
		ctx.fillStyle = cc_util_ColorUtil.rgb(r,r,r);
	} else if(b == null && a == null) {
		ctx.fillStyle = cc_util_ColorUtil.rgba(r,r,r,g);
	} else if(a == null) {
		ctx.fillStyle = cc_util_ColorUtil.rgb(r,g,b);
	} else {
		ctx.fillStyle = cc_util_ColorUtil.rgba(r,g,b,a);
	}
	ctx.fillRect(0,0,Global.w,Global.h);
};
cc_CanvasTools.backgroundObj = function(ctx,rgb) {
	cc_CanvasTools.background(ctx,rgb.r,rgb.g,rgb.b);
};
cc_CanvasTools.backgroundRGB = function(ctx,rgb) {
	cc_CanvasTools.background(ctx,rgb.r,rgb.g,rgb.b);
};
var cc_draw_Text = function(o,text) {
	this._textBaseline = "alphabetic";
	this._textAlign = "left";
	this._fontWeight = "";
	this._css = "";
	this._font = "Arial";
	this._rotate = 0;
	this._alpha = 1;
	this._radius = 100;
	this._y = 100;
	this._x = 100;
	if(((o) instanceof CanvasRenderingContext2D)) {
		this._ctx = o;
	} else {
		this._sketcher = o;
	}
	this._text = text;
};
$hxClasses["cc.draw.Text"] = cc_draw_Text;
cc_draw_Text.__name__ = "cc.draw.Text";
cc_draw_Text.create = function(o,text) {
	var Text1 = new cc_draw_Text(o,text);
	return Text1;
};
cc_draw_Text.fillText = function(ctx,text,x,y,css,size) {
	if(size == null) {
		size = 20;
	}
	ctx.font = "" + size + "px " + StringTools.replace(css,";","");
	ctx.textAlign = "left";
	ctx.fillText(text,x,y);
};
cc_draw_Text.centerFillText = function(ctx,text,x,y,css,size) {
	if(size == null) {
		size = 20;
	}
	ctx.font = "" + size + "px " + StringTools.replace(css,";","");
	ctx.textAlign = "center";
	ctx.fillText(text,x,y);
};
cc_draw_Text.hackCenterFillText = function(ctx,text,x,y,css) {
	ctx.font = "" + StringTools.replace(css,";","");
	ctx.textAlign = "center";
	ctx.fillText(text,x,y);
};
cc_draw_Text.embedGoogleFont = function(family,callback,callbackArray) {
	var _id = "embededGoogleFonts";
	var _url = "https://fonts.googleapis.com/css?family=";
	var link = window.document.getElementById(_id);
	if(link != null) {
		var temp = StringTools.replace(link.href,_url,"");
		family = temp + "|" + family;
	} else {
		link = window.document.createElement("link");
	}
	if(callbackArray == null) {
		callbackArray = [family];
	}
	link.href = "" + _url + family;
	link.rel = "stylesheet";
	link.id = _id;
	link.onload = function() {
		if(callback != null) {
			callback.apply(callback,callbackArray);
		}
	};
	window.document.head.appendChild(link);
};
cc_draw_Text.prototype = {
	text: function(text) {
		this._text = text;
		return this;
	}
	,id: function(id) {
		this.set__id(id);
		return this;
	}
	,x: function(x) {
		this.set__x(x);
		return this;
	}
	,y: function(y) {
		this.set__y(y);
		return this;
	}
	,pos: function(x,y) {
		this.set__x(x);
		this.set__y(y);
		return this;
	}
	,font: function(font) {
		this._font = StringTools.replace(StringTools.replace(font,";",""),"+"," ");
		return this;
	}
	,css: function(css) {
		this._css = css;
		return this;
	}
	,fontWeight: function(weight) {
		this._fontWeight = weight;
		return this;
	}
	,size: function(px) {
		this.set__size(px);
		if(this.get__leading() == null) {
			this.set__leading(px);
		}
		return this;
	}
	,leading: function(px) {
		this.set__leading(px);
		return this;
	}
	,textAlign: function(pos) {
		this._textAlign = pos;
		return this;
	}
	,leftAlign: function() {
		this._textAlign = "left";
		return this;
	}
	,rightAlign: function() {
		this._textAlign = "right";
		return this;
	}
	,centerAlign: function() {
		this._textAlign = "center";
		return this;
	}
	,topBaseline: function() {
		this._textBaseline = "top";
		return this;
	}
	,middleBaseline: function() {
		this._textBaseline = "middle";
		return this;
	}
	,bottomBaseline: function() {
		this._textBaseline = "bottom";
		return this;
	}
	,textBaseline: function(pos) {
		this._textBaseline = pos;
		return this;
	}
	,rotate: function(degree) {
		this.set__rotate(degree);
		return this;
	}
	,rotateLeft: function() {
		this.set__rotate(-90);
		return this;
	}
	,rotateRight: function() {
		this.set__rotate(90);
		return this;
	}
	,rotateDown: function() {
		this.set__rotate(180);
		return this;
	}
	,color: function(value,alpha) {
		if(alpha == null) {
			alpha = 1;
		}
		this._color = value;
		this.set__alpha(cc_util_MathUtil.clamp(alpha,0,1));
		return this;
	}
	,alpha: function(alpha) {
		this.set__alpha(cc_util_MathUtil.clamp(alpha,0,1));
		return this;
	}
	,visible: function(isVisible) {
		if(isVisible) {
			this.set__alpha(cc_util_MathUtil.clamp(1,0,1));
		} else {
			this.set__alpha(cc_util_MathUtil.clamp(0,0,1));
		}
		return this;
	}
	,draw: function() {
		if(this._ctx != null) {
			var isLines = false;
			this._ctx.save();
			if(this._text.indexOf("\n") != -1) {
				this._lineArray = this._text.split("\n");
				isLines = true;
			}
			var previousColor = this._ctx.fillStyle;
			if(this._color != null) {
				cc_CanvasTools.fillColourRGB(this._ctx,this._color,this.get__alpha());
			} else {
				var tmp = this._ctx;
				var int = Std.parseInt(StringTools.replace(previousColor,"#","0x"));
				var tmp1 = this.get__alpha();
				cc_CanvasTools.fillColourRGB(tmp,{ r : int >> 16 & 255, g : int >> 8 & 255, b : int & 255},tmp1);
			}
			var tmp = "" + this._css + " " + this.get__size() + "px " + this._font;
			this._ctx.font = StringTools.ltrim(tmp);
			this._ctx.textAlign = this._textAlign;
			this._ctx.textBaseline = this._textBaseline;
			this._ctx.translate(this.get__x(),this.get__y());
			this._ctx.rotate(cc_util_MathUtil.radians(this.get__rotate()));
			if(!isLines) {
				this._ctx.fillText(this._text,0,0);
			} else {
				var _g = 0;
				var _g1 = this._lineArray.length;
				while(_g < _g1) {
					var i = _g++;
					var line = this._lineArray[i];
					this._ctx.fillText(line,0,i * this.get__leading());
				}
			}
			this._ctx.restore();
			this._ctx.fillStyle = previousColor;
		}
		return this;
	}
	,drawCanvas: function() {
		var isLines = false;
		this._ctx.save();
		if(this._text.indexOf("\n") != -1) {
			this._lineArray = this._text.split("\n");
			isLines = true;
		}
		var previousColor = this._ctx.fillStyle;
		if(this._color != null) {
			cc_CanvasTools.fillColourRGB(this._ctx,this._color,this.get__alpha());
		} else {
			var tmp = this._ctx;
			var int = Std.parseInt(StringTools.replace(previousColor,"#","0x"));
			var tmp1 = this.get__alpha();
			cc_CanvasTools.fillColourRGB(tmp,{ r : int >> 16 & 255, g : int >> 8 & 255, b : int & 255},tmp1);
		}
		var tmp = "" + this._css + " " + this.get__size() + "px " + this._font;
		this._ctx.font = StringTools.ltrim(tmp);
		this._ctx.textAlign = this._textAlign;
		this._ctx.textBaseline = this._textBaseline;
		this._ctx.translate(this.get__x(),this.get__y());
		this._ctx.rotate(cc_util_MathUtil.radians(this.get__rotate()));
		if(!isLines) {
			this._ctx.fillText(this._text,0,0);
		} else {
			var _g = 0;
			var _g1 = this._lineArray.length;
			while(_g < _g1) {
				var i = _g++;
				var line = this._lineArray[i];
				this._ctx.fillText(line,0,i * this.get__leading());
			}
		}
		this._ctx.restore();
		this._ctx.fillStyle = previousColor;
	}
	,splitLines: function() {
		if(this._text.indexOf("\n") != -1) {
			this._lineArray = this._text.split("\n");
			return true;
		} else {
			return false;
		}
	}
	,get__x: function() {
		return this._x;
	}
	,set__x: function(value) {
		return this._x = value;
	}
	,get__y: function() {
		return this._y;
	}
	,set__y: function(value) {
		return this._y = value;
	}
	,get__radius: function() {
		return this._radius;
	}
	,set__radius: function(value) {
		return this._radius = value;
	}
	,get__alpha: function() {
		return this._alpha;
	}
	,set__alpha: function(value) {
		return this._alpha = value;
	}
	,get__rotate: function() {
		return this._rotate;
	}
	,set__rotate: function(value) {
		return this._rotate = value;
	}
	,get__gradient: function() {
		return this._gradient;
	}
	,set__gradient: function(value) {
		return this._gradient = value;
	}
	,get__size: function() {
		return this._size;
	}
	,set__size: function(value) {
		return this._size = value;
	}
	,get__leading: function() {
		return this._leading;
	}
	,set__leading: function(value) {
		return this._leading = value;
	}
	,get__id: function() {
		return this._id;
	}
	,set__id: function(value) {
		return this._id = value;
	}
	,toString: function() {
		return "Text: " + Std.string(JSON.parse(JSON.stringify(this)));
	}
	,__class__: cc_draw_Text
	,__properties__: {set__id:"set__id",get__id:"get__id",set__leading:"set__leading",get__leading:"get__leading",set__gradient:"set__gradient",get__gradient:"get__gradient",set__size:"set__size",get__size:"get__size",set__rotate:"set__rotate",get__rotate:"get__rotate",set__alpha:"set__alpha",get__alpha:"get__alpha",set__radius:"set__radius",get__radius:"get__radius",set__y:"set__y",get__y:"get__y",set__x:"set__x",get__x:"get__x"}
};
var cc_lets_Easing = function() { };
$hxClasses["cc.lets.Easing"] = cc_lets_Easing;
cc_lets_Easing.__name__ = "cc.lets.Easing";
cc_lets_Easing.linear = function(v) {
	return v;
};
cc_lets_Easing.quad = function(v) {
	return v * v;
};
cc_lets_Easing.cubic = function(v) {
	return v * v * v;
};
cc_lets_Easing.quart = function(v) {
	return v * v * v;
};
cc_lets_Easing.quint = function(v) {
	return v * v * v;
};
cc_lets_Easing.sine = function(v) {
	return 1 - Math.cos(v * Math.PI / 2);
};
cc_lets_Easing.circ = function(v) {
	return 1 - Math.sqrt(1 - v * v);
};
cc_lets_Easing.expo = function(v) {
	if(v == 0) {
		return 0;
	} else {
		return Math.pow(2,10 * (v - 1));
	}
};
cc_lets_Easing.back = function(v) {
	var s = 1.70158;
	return v * v * ((s + 1) * v - s);
};
cc_lets_Easing.bounce = function(v) {
	v = 1 - v;
	return 1 - (v < 0.363636363636363646 ? 7.5625 * v * v : v < 0.727272727272727293 ? 7.5625 * (v -= 0.545454545454545414) * v + .75 : v < 0.909090909090909061 ? 7.5625 * (v -= 0.818181818181818232) * v + .9375 : 7.5625 * (v -= 0.954545454545454586) * v + .984375);
};
cc_lets_Easing.elastic = function(v) {
	if(v == 0) {
		return 0;
	}
	if(v == 1) {
		return 1;
	}
	var p = .3;
	var s = p / 4;
	return -(Math.pow(2,10 * --v) * Math.sin((v - 0.075) * (2 * Math.PI) / 0.3));
};
cc_lets_Easing.reverse = function(f) {
	return function(v) {
		return 1 - f(1 - v);
	};
};
cc_lets_Easing.reflect = function(f) {
	return function(v) {
		if(v < 0.5) {
			return f(v * 2) / 2;
		} else {
			return 1 - f(2 - v * 2) / 2;
		}
	};
};
var cc_lets_Go = function(target,duration) {
	this.VERSION = "1.1.0";
	this.DEBUG = false;
	this.FRAME_RATE = 60;
	this._arc = 0;
	this._seconds = 0;
	this._delay = 0;
	this._initTime = 0;
	this._isDelayDone = false;
	this._isTimeBased = false;
	this._isOrbit = false;
	this._isWiggle = false;
	this._isYoyo = false;
	this._isFrom = false;
	this._props = new haxe_ds_StringMap();
	this._options = { };
	this._easing = cc_lets_easing_Quad.get_easeOut();
	this._id = "[lets.Go]" + this.VERSION + "." + new Date().getTime();
	this._seconds = duration;
	this._target = target;
	this._duration = this.getDuration(duration);
	if(this._isTimeBased) {
		this._initTime = this.getTimer();
	} else {
		this._initTime = this._duration;
	}
	cc_lets_Go._tweens.push(this);
	if(this.DEBUG) {
		$global.console.log("New Go - _id: \"" + this._id + "\" / _duration: " + this._duration + " / _initTime: " + this._initTime + " / _tweens.length: " + cc_lets_Go._tweens.length);
	}
	haxe_Timer.delay($bind(this,this.init),1);
};
$hxClasses["cc.lets.Go"] = cc_lets_Go;
cc_lets_Go.__name__ = "cc.lets.Go";
cc_lets_Go.to = function(target,duration) {
	var Go = new cc_lets_Go(target,duration);
	Go._isFrom = false;
	return Go;
};
cc_lets_Go.from = function(target,duration) {
	var Go = new cc_lets_Go(target,duration);
	Go._isFrom = true;
	Go.updateProperties(0);
	return Go;
};
cc_lets_Go.timer = function(duration) {
	var Go = new cc_lets_Go({ },duration);
	return Go;
};
cc_lets_Go.frames = function(frames) {
	var Go = new cc_lets_Go({ },frames * 60);
	return Go;
};
cc_lets_Go.wiggle = function(target,x,y,wiggleRoom) {
	if(wiggleRoom == null) {
		wiggleRoom = 10;
	}
	var _go = new cc_lets_Go(target,1 + Math.random());
	_go._isWiggle = true;
	var max = wiggleRoom;
	var min = -wiggleRoom;
	var value = x + Math.random() * (max - min) + min;
	var objValue = 0;
	if(Object.prototype.hasOwnProperty.call(_go._target,"x")) {
		objValue = Reflect.getProperty(_go._target,"x");
	}
	var _range = { key : "x", from : _go._isFrom ? value : objValue, to : !_go._isFrom ? value : objValue};
	_go._props.h["x"] = _range;
	if(_go._isFrom) {
		_go.updateProperties(0);
	}
	var value = y + Math.random() * (max - min) + min;
	var objValue = 0;
	if(Object.prototype.hasOwnProperty.call(_go._target,"y")) {
		objValue = Reflect.getProperty(_go._target,"y");
	}
	var _range = { key : "y", from : _go._isFrom ? value : objValue, to : !_go._isFrom ? value : objValue};
	_go._props.h["y"] = _range;
	if(_go._isFrom) {
		_go.updateProperties(0);
	}
	_go._easing = cc_lets_easing_Sine.get_easeInOut();
	_go._options.onComplete = function() {
		cc_lets_Go.wiggle(target,x,y,wiggleRoom);
	};
	_go._options.onCompleteParams = null;
	return _go;
};
cc_lets_Go.wiggleProp = function(target,prop,value,wiggleRoom) {
	if(wiggleRoom == null) {
		wiggleRoom = 10;
	}
	var _go = new cc_lets_Go(target,1 + Math.random());
	_go._isWiggle = true;
	var max = wiggleRoom;
	var min = -wiggleRoom;
	var value1 = value + Math.random() * (max - min) + min;
	var objValue = 0;
	if(Object.prototype.hasOwnProperty.call(_go._target,prop)) {
		objValue = Reflect.getProperty(_go._target,prop);
	}
	var _range = { key : prop, from : _go._isFrom ? value1 : objValue, to : !_go._isFrom ? value1 : objValue};
	_go._props.h[prop] = _range;
	if(_go._isFrom) {
		_go.updateProperties(0);
	}
	_go._easing = cc_lets_easing_Sine.get_easeInOut();
	_go._options.onComplete = function() {
		cc_lets_Go.wiggleProp(target,prop,value,wiggleRoom);
	};
	_go._options.onCompleteParams = null;
	return _go;
};
cc_lets_Go.orbit = function(target,x,y,radius,speed) {
	var _go = new cc_lets_Go(target,1 + Math.random());
	_go._isOrbit = true;
	var objValue = 0;
	if(Object.prototype.hasOwnProperty.call(_go._target,"x")) {
		objValue = Reflect.getProperty(_go._target,"x");
	}
	var _range = { key : "x", from : _go._isFrom ? x : objValue, to : !_go._isFrom ? x : objValue};
	_go._props.h["x"] = _range;
	if(_go._isFrom) {
		_go.updateProperties(0);
	}
	var objValue = 0;
	if(Object.prototype.hasOwnProperty.call(_go._target,"y")) {
		objValue = Reflect.getProperty(_go._target,"y");
	}
	var _range = { key : "y", from : _go._isFrom ? y : objValue, to : !_go._isFrom ? y : objValue};
	_go._props.h["y"] = _range;
	if(_go._isFrom) {
		_go.updateProperties(0);
	}
	var objValue = 0;
	if(Object.prototype.hasOwnProperty.call(_go._target,"cx")) {
		objValue = Reflect.getProperty(_go._target,"cx");
	}
	var _range = { key : "cx", from : _go._isFrom ? x : objValue, to : !_go._isFrom ? x : objValue};
	_go._props.h["cx"] = _range;
	if(_go._isFrom) {
		_go.updateProperties(0);
	}
	var objValue = 0;
	if(Object.prototype.hasOwnProperty.call(_go._target,"cy")) {
		objValue = Reflect.getProperty(_go._target,"cy");
	}
	var _range = { key : "cy", from : _go._isFrom ? y : objValue, to : !_go._isFrom ? y : objValue};
	_go._props.h["cy"] = _range;
	if(_go._isFrom) {
		_go.updateProperties(0);
	}
	var objValue = 0;
	if(Object.prototype.hasOwnProperty.call(_go._target,"radius")) {
		objValue = Reflect.getProperty(_go._target,"radius");
	}
	var _range = { key : "radius", from : _go._isFrom ? radius : objValue, to : !_go._isFrom ? radius : objValue};
	_go._props.h["radius"] = _range;
	if(_go._isFrom) {
		_go.updateProperties(0);
	}
	var objValue = 0;
	if(Object.prototype.hasOwnProperty.call(_go._target,"speed")) {
		objValue = Reflect.getProperty(_go._target,"speed");
	}
	var _range = { key : "speed", from : _go._isFrom ? speed : objValue, to : !_go._isFrom ? speed : objValue};
	_go._props.h["speed"] = _range;
	if(_go._isFrom) {
		_go.updateProperties(0);
	}
	var objValue = 0;
	if(Object.prototype.hasOwnProperty.call(_go._target,"angle")) {
		objValue = Reflect.getProperty(_go._target,"angle");
	}
	var _range = { key : "angle", from : _go._isFrom ? speed : objValue, to : !_go._isFrom ? speed : objValue};
	_go._props.h["angle"] = _range;
	if(_go._isFrom) {
		_go.updateProperties(0);
	}
	target["cx"] = x;
	target["cy"] = y;
	target["angle"] = 0;
	target["speed"] = speed;
	target["radius"] = radius;
	return _go;
};
cc_lets_Go.prototype = {
	isTimeBased: function(isTimeBased) {
		if(isTimeBased == null) {
			isTimeBased = true;
		}
		haxe_Log.trace("Fixme: this doesn\t work right now",{ fileName : "src/cc/lets/Go.hx", lineNumber : 216, className : "cc.lets.Go", methodName : "isTimeBased"});
		this._isTimeBased = isTimeBased;
		this._duration = this._duration / this.FRAME_RATE | 0;
		return this;
	}
	,width: function(value) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"width")) {
			objValue = Reflect.getProperty(this._target,"width");
		}
		var _range = { key : "width", from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.h["width"] = _range;
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,height: function(value) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"height")) {
			objValue = Reflect.getProperty(this._target,"height");
		}
		var _range = { key : "height", from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.h["height"] = _range;
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,x: function(value) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"x")) {
			objValue = Reflect.getProperty(this._target,"x");
		}
		var _range = { key : "x", from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.h["x"] = _range;
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,y: function(value) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"y")) {
			objValue = Reflect.getProperty(this._target,"y");
		}
		var _range = { key : "y", from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.h["y"] = _range;
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,z: function(value) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"z")) {
			objValue = Reflect.getProperty(this._target,"z");
		}
		var _range = { key : "z", from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.h["z"] = _range;
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,pos: function(x,y,z) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"x")) {
			objValue = Reflect.getProperty(this._target,"x");
		}
		var _range = { key : "x", from : this._isFrom ? x : objValue, to : !this._isFrom ? x : objValue};
		this._props.h["x"] = _range;
		if(this._isFrom) {
			this.updateProperties(0);
		}
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"y")) {
			objValue = Reflect.getProperty(this._target,"y");
		}
		var _range = { key : "y", from : this._isFrom ? y : objValue, to : !this._isFrom ? y : objValue};
		this._props.h["y"] = _range;
		if(this._isFrom) {
			this.updateProperties(0);
		}
		if(z != null) {
			var objValue = 0;
			if(Object.prototype.hasOwnProperty.call(this._target,"z")) {
				objValue = Reflect.getProperty(this._target,"z");
			}
			var _range = { key : "z", from : this._isFrom ? z : objValue, to : !this._isFrom ? z : objValue};
			this._props.h["z"] = _range;
			if(this._isFrom) {
				this.updateProperties(0);
			}
		}
		return this;
	}
	,rotation: function(degree) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"rotation")) {
			objValue = Reflect.getProperty(this._target,"rotation");
		}
		var _range = { key : "rotation", from : this._isFrom ? degree : objValue, to : !this._isFrom ? degree : objValue};
		this._props.h["rotation"] = _range;
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,degree: function(degree) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"rotation")) {
			objValue = Reflect.getProperty(this._target,"rotation");
		}
		var _range = { key : "rotation", from : this._isFrom ? degree : objValue, to : !this._isFrom ? degree : objValue};
		this._props.h["rotation"] = _range;
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,radians: function(degree) {
		var value = degree * Math.PI / 180;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"rotation")) {
			objValue = Reflect.getProperty(this._target,"rotation");
		}
		var _range = { key : "rotation", from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.h["rotation"] = _range;
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,alpha: function(value) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"alpha")) {
			objValue = Reflect.getProperty(this._target,"alpha");
		}
		var _range = { key : "alpha", from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.h["alpha"] = _range;
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,scale: function(value) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"scaleX")) {
			objValue = Reflect.getProperty(this._target,"scaleX");
		}
		var _range = { key : "scaleX", from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.h["scaleX"] = _range;
		if(this._isFrom) {
			this.updateProperties(0);
		}
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"scaleY")) {
			objValue = Reflect.getProperty(this._target,"scaleY");
		}
		var _range = { key : "scaleY", from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.h["scaleY"] = _range;
		if(this._isFrom) {
			this.updateProperties(0);
		}
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"scale")) {
			objValue = Reflect.getProperty(this._target,"scale");
		}
		var _range = { key : "scale", from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.h["scale"] = _range;
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,yoyo: function() {
		this._isYoyo = true;
		return this;
	}
	,arc: function(dir) {
		this._arc = 0;
		return this;
	}
	,delay: function(duration) {
		this._delay = this.getDuration(duration);
		return this;
	}
	,prop: function(key,value) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,key)) {
			objValue = Reflect.getProperty(this._target,key);
		}
		var _range = { key : key, from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.h[key] = _range;
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,onComplete: function(func,arr) {
		this._options.onComplete = func;
		this._options.onCompleteParams = arr;
		return this;
	}
	,onAnimationStart: function(func,arr) {
		this._options.onAnimationStart = func;
		this._options.onAnimationStartParams = arr;
		return this;
	}
	,onUpdate: function(func,arr) {
		this._options.onUpdate = func;
		this._options.onUpdateParams = arr;
		return this;
	}
	,ease: function(easing) {
		this._easing = easing;
		return this;
	}
	,stop: function() {
		this.destroy();
	}
	,init: function() {
		if(this._isTimeBased) {
			haxe_Log.trace("TODO: build timebased animation",{ fileName : "src/cc/lets/Go.hx", lineNumber : 486, className : "cc.lets.Go", methodName : "init"});
		} else if(cc_lets_Go._requestId == null) {
			cc_lets_Go._requestId = window.requestAnimationFrame($bind(this,this.onEnterFrameHandler));
		}
	}
	,onEnterFrameHandler: function(time) {
		if(cc_lets_Go._tweens.length <= 0) {
			if(!this._isTimeBased) {
				window.cancelAnimationFrame(cc_lets_Go._requestId);
				return;
			}
		} else {
			var _g = 0;
			var _g1 = cc_lets_Go._tweens.length;
			while(_g < _g1) {
				var i = _g++;
				if(cc_lets_Go._tweens[i] != null) {
					cc_lets_Go._tweens[i].update();
				}
			}
		}
		cc_lets_Go._requestId = window.requestAnimationFrame($bind(this,this.onEnterFrameHandler));
	}
	,update: function() {
		if(this._delay > 0 && this._isTimeBased) {
			haxe_Log.trace("FIXME this doesn't work yet",{ fileName : "src/cc/lets/Go.hx", lineNumber : 525, className : "cc.lets.Go", methodName : "update"});
		}
		if(this._delay > 0) {
			this._delay--;
			return;
		}
		if(!this._isDelayDone) {
			if(this.DEBUG) {
				haxe_Log.trace("should trigger only once: " + this._id,{ fileName : "src/cc/lets/Go.hx", lineNumber : 532, className : "cc.lets.Go", methodName : "update"});
			}
			if(Reflect.isFunction(this._options.onAnimationStart)) {
				var func = this._options.onAnimationStart;
				var arr = this._options.onAnimationStartParams != null ? this._options.onAnimationStartParams : [];
				func.apply(func,[arr]);
			}
		}
		this._isDelayDone = true;
		this._initTime--;
		var progressed = this._duration - this._initTime;
		if(this._isTimeBased) {
			progressed = this.getTimer() - this._initTime;
		}
		if(progressed >= this._duration) {
			this.updateProperties(this._duration);
			this.complete();
		} else {
			this.updateProperties(progressed);
		}
	}
	,updateProperties: function(time) {
		if(Reflect.isFunction(this._options.onUpdate)) {
			var func = this._options.onUpdate;
			var arr = this._options.onUpdateParams != null ? this._options.onUpdateParams : [];
			func.apply(func,[arr]);
		}
		if(this._props == null) {
			return;
		}
		var h = this._props.h;
		var n_h = h;
		var n_keys = Object.keys(h);
		var n_length = n_keys.length;
		var n_current = 0;
		while(n_current < n_length) {
			var n = n_keys[n_current++];
			var range = this._props.h[n];
			if(this._isOrbit) {
				var __cx = this._props.h["cx"];
				var __cy = this._props.h["cy"];
				var __angle = this._props.h["angle"];
				var __speed = this._props.h["speed"];
				var __rad = this._props.h["radius"];
				haxe_Log.trace("cx: " + __cx.to + ",  cy: " + __cy.to + " , " + __angle.to + ", " + __speed.to + ", " + __rad.to,{ fileName : "src/cc/lets/Go.hx", lineNumber : 590, className : "cc.lets.Go", methodName : "updateProperties"});
				haxe_Log.trace("" + n + " == \"angle\" : " + Std.string(n == "angle"),{ fileName : "src/cc/lets/Go.hx", lineNumber : 601, className : "cc.lets.Go", methodName : "updateProperties"});
				haxe_Log.trace(this._target,{ fileName : "src/cc/lets/Go.hx", lineNumber : 603, className : "cc.lets.Go", methodName : "updateProperties"});
				if(n == "angle") {
					var aa = __angle.to + __speed.to;
					Reflect.setProperty(this._target,n,aa);
				}
			} else {
				Reflect.setProperty(this._target,n,this._easing.ease(time,range.from,range.to - range.from,this._duration));
			}
		}
	}
	,complete: function() {
		if(this.DEBUG) {
			haxe_Log.trace("complete :: \"" + this._id + "\", _duration: " + this._duration + ", _seconds: " + this._seconds + ", _initTime: " + this._initTime + " / _tweens.length: " + cc_lets_Go._tweens.length,{ fileName : "src/cc/lets/Go.hx", lineNumber : 626, className : "cc.lets.Go", methodName : "complete"});
		}
		if(this._isYoyo) {
			var h = this._props.h;
			var n_h = h;
			var n_keys = Object.keys(h);
			var n_length = n_keys.length;
			var n_current = 0;
			while(n_current < n_length) {
				var n = n_keys[n_current++];
				var range = this._props.h[n];
				var _rangeReverse = { key : n, from : range.to, to : range.from};
				this._props.h[n] = _rangeReverse;
			}
			if(this._isTimeBased) {
				this._initTime = this.getTimer();
			} else {
				this._initTime = this._duration;
			}
			this._isYoyo = false;
			return;
		}
		var func = this._options.onComplete;
		var arr = this._options.onCompleteParams != null ? this._options.onCompleteParams : [];
		this.destroy();
		if(Reflect.isFunction(func)) {
			func.apply(func,arr);
		}
	}
	,getDuration: function(duration) {
		var d = 0;
		if(this._isTimeBased) {
			d = duration * 1000 | 0;
		} else {
			if(duration <= 0) {
				duration = 0.1;
			}
			d = duration * this.FRAME_RATE | 0;
		}
		return d;
	}
	,getTimer: function() {
		return new Date().getTime() | 0;
	}
	,destroy: function() {
		if(Lambda.has(cc_lets_Go._tweens,this)) {
			HxOverrides.remove(cc_lets_Go._tweens,this);
		}
		if(this._options) {
			this._easing = cc_lets_easing_Quad.get_easeOut();
			this._options = { };
			this._target = null;
			this._props = null;
			this._duration = 0;
			this._initTime = 0;
			this._delay = 0;
		}
	}
	,__class__: cc_lets_Go
};
var cc_lets_easing_IEasing = function() { };
$hxClasses["cc.lets.easing.IEasing"] = cc_lets_easing_IEasing;
cc_lets_easing_IEasing.__name__ = "cc.lets.easing.IEasing";
cc_lets_easing_IEasing.prototype = {
	__class__: cc_lets_easing_IEasing
};
var cc_lets_easing_Quad = function() { };
$hxClasses["cc.lets.easing.Quad"] = cc_lets_easing_Quad;
cc_lets_easing_Quad.__name__ = "cc.lets.easing.Quad";
cc_lets_easing_Quad.__properties__ = {get_easeOut:"get_easeOut",get_easeInOut:"get_easeInOut",get_easeIn:"get_easeIn"};
cc_lets_easing_Quad.get_easeIn = function() {
	return new cc_lets_easing_QuadEaseIn();
};
cc_lets_easing_Quad.get_easeInOut = function() {
	return new cc_lets_easing_QuadEaseInOut();
};
cc_lets_easing_Quad.get_easeOut = function() {
	return new cc_lets_easing_QuadEaseOut();
};
var cc_lets_easing_QuadEaseIn = function() {
};
$hxClasses["cc.lets.easing.QuadEaseIn"] = cc_lets_easing_QuadEaseIn;
cc_lets_easing_QuadEaseIn.__name__ = "cc.lets.easing.QuadEaseIn";
cc_lets_easing_QuadEaseIn.prototype = {
	calculate: function(k) {
		return k * k;
	}
	,ease: function(t,b,c,d) {
		return c * (t /= d) * t + b;
	}
	,__class__: cc_lets_easing_QuadEaseIn
};
var cc_lets_easing_QuadEaseInOut = function() {
};
$hxClasses["cc.lets.easing.QuadEaseInOut"] = cc_lets_easing_QuadEaseInOut;
cc_lets_easing_QuadEaseInOut.__name__ = "cc.lets.easing.QuadEaseInOut";
cc_lets_easing_QuadEaseInOut.prototype = {
	calculate: function(k) {
		if((k *= 2) < 1) {
			return 0.5 * k * k;
		}
		return -0.5 * ((k - 1) * (k - 3) - 1);
	}
	,ease: function(t,b,c,d) {
		if((t /= d / 2) < 1) {
			return c / 2 * t * t + b;
		}
		return -c / 2 * ((t - 1) * (t - 3) - 1) + b;
	}
	,__class__: cc_lets_easing_QuadEaseInOut
};
var cc_lets_easing_QuadEaseOut = function() {
};
$hxClasses["cc.lets.easing.QuadEaseOut"] = cc_lets_easing_QuadEaseOut;
cc_lets_easing_QuadEaseOut.__name__ = "cc.lets.easing.QuadEaseOut";
cc_lets_easing_QuadEaseOut.prototype = {
	calculate: function(k) {
		return -k * (k - 2);
	}
	,ease: function(t,b,c,d) {
		return -c * (t /= d) * (t - 2) + b;
	}
	,__class__: cc_lets_easing_QuadEaseOut
};
var cc_lets_easing_Sine = function() { };
$hxClasses["cc.lets.easing.Sine"] = cc_lets_easing_Sine;
cc_lets_easing_Sine.__name__ = "cc.lets.easing.Sine";
cc_lets_easing_Sine.__properties__ = {get_easeOut:"get_easeOut",get_easeInOut:"get_easeInOut",get_easeIn:"get_easeIn"};
cc_lets_easing_Sine.get_easeIn = function() {
	return new cc_lets_easing_SineEaseIn();
};
cc_lets_easing_Sine.get_easeInOut = function() {
	return new cc_lets_easing_SineEaseInOut();
};
cc_lets_easing_Sine.get_easeOut = function() {
	return new cc_lets_easing_SineEaseOut();
};
var cc_lets_easing_SineEaseIn = function() {
};
$hxClasses["cc.lets.easing.SineEaseIn"] = cc_lets_easing_SineEaseIn;
cc_lets_easing_SineEaseIn.__name__ = "cc.lets.easing.SineEaseIn";
cc_lets_easing_SineEaseIn.prototype = {
	calculate: function(k) {
		return 1 - Math.cos(k * (Math.PI / 2));
	}
	,ease: function(t,b,c,d) {
		return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;
	}
	,__class__: cc_lets_easing_SineEaseIn
};
var cc_lets_easing_SineEaseInOut = function() {
};
$hxClasses["cc.lets.easing.SineEaseInOut"] = cc_lets_easing_SineEaseInOut;
cc_lets_easing_SineEaseInOut.__name__ = "cc.lets.easing.SineEaseInOut";
cc_lets_easing_SineEaseInOut.prototype = {
	calculate: function(k) {
		return -(Math.cos(Math.PI * k) - 1) / 2;
	}
	,ease: function(t,b,c,d) {
		return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;
	}
	,__class__: cc_lets_easing_SineEaseInOut
};
var cc_lets_easing_SineEaseOut = function() {
};
$hxClasses["cc.lets.easing.SineEaseOut"] = cc_lets_easing_SineEaseOut;
cc_lets_easing_SineEaseOut.__name__ = "cc.lets.easing.SineEaseOut";
cc_lets_easing_SineEaseOut.prototype = {
	calculate: function(k) {
		return Math.sin(k * (Math.PI / 2));
	}
	,ease: function(t,b,c,d) {
		return c * Math.sin(t / d * (Math.PI / 2)) + b;
	}
	,__class__: cc_lets_easing_SineEaseOut
};
var cc_model_constants_App = function() { };
$hxClasses["cc.model.constants.App"] = cc_model_constants_App;
cc_model_constants_App.__name__ = "cc.model.constants.App";
var cc_model_constants_Sizes = function() {
	this.APAPER = [];
	this.INSTAGRAM = [];
	this.INSTA_SQUARE_VIDEO = { width : 1080, height : 1080, dpi : 72, description : "Instagram square video"};
	this.INSTAGRAM = [this.INSTA_SQUARE_VIDEO];
};
$hxClasses["cc.model.constants.Sizes"] = cc_model_constants_Sizes;
cc_model_constants_Sizes.__name__ = "cc.model.constants.Sizes";
cc_model_constants_Sizes.prototype = {
	__class__: cc_model_constants_Sizes
};
var cc_tool_Embed = function() {
};
$hxClasses["cc.tool.Embed"] = cc_tool_Embed;
cc_tool_Embed.__name__ = "cc.tool.Embed";
cc_tool_Embed.check = function(id) {
	if(window.document.getElementById(id) != null) {
		return true;
	} else {
		return false;
	}
};
cc_tool_Embed.script = function(id,src,callback,callbackArray) {
	var el = window.document.createElement("script");
	el.id = id;
	el.src = src;
	el.crossOrigin = "anonymous";
	el.onload = function() {
		if(callback != null) {
			if(callbackArray == null) {
				callback.apply(callback,[id]);
			} else {
				callback.apply(callback,callbackArray);
			}
		}
	};
	window.document.body.appendChild(el);
};
cc_tool_Embed.prototype = {
	__class__: cc_tool_Embed
};
var cc_tool_ExportFile = function() { };
$hxClasses["cc.tool.ExportFile"] = cc_tool_ExportFile;
cc_tool_ExportFile.__name__ = "cc.tool.ExportFile";
cc_tool_ExportFile.downloadWebGLImage = function(domElement,isJpg,fileName) {
	if(fileName == null) {
		fileName = "test";
	}
	if(isJpg == null) {
		isJpg = false;
	}
	var imgData;
	var ext = isJpg ? "jpg" : "png";
	try {
		var strDownloadMime = "image/octet-stream";
		var strMime = "image/jpeg";
		imgData = domElement.toDataURL(strMime);
		$global.console.log(imgData);
		cc_tool_ExportFile.saveFile(StringTools.replace(imgData,strMime,strDownloadMime),fileName + ("." + ext));
	} catch( _g ) {
		$global.console.log("Browser does not support taking screenshot of 3d context");
		return;
	}
};
cc_tool_ExportFile.saveFile = function(strData,fileName) {
	var link = window.document.createElement("a");
	window.document.body.appendChild(link);
	link.href = strData;
	link.download = fileName;
	link.click();
	window.document.body.removeChild(link);
};
cc_tool_ExportFile.downloadImage = function(ctx,isJpg,fileName) {
	if(isJpg == null) {
		isJpg = false;
	}
	if(fileName == null) {
		var hash = $global.location.hash;
		hash = StringTools.replace(hash,"#","").toLowerCase();
		if(hash == "") {
			hash = "image";
		}
		fileName = "" + hash + "-" + new Date().getTime();
	}
	var link = window.document.createElement("a");
	link.href = ctx.canvas.toDataURL(isJpg ? "image/jpeg" : "",1);
	link.download = fileName;
	link.click();
};
cc_tool_ExportFile.onBase64Handler = function(ctx,isJpg) {
	if(isJpg == null) {
		isJpg = false;
	}
	var base64 = ctx.canvas.toDataURL(isJpg ? "image/jpeg" : "",1);
	cc_tool_ExportFile.clipboard(base64);
};
cc_tool_ExportFile.downloadTextFile = function(text,fileName) {
	if(fileName == null) {
		fileName = "CC-txt-" + new Date().getTime() + ".txt";
	}
	var element = window.document.createElement("a");
	element.setAttribute("href","data:text/plain;charset=utf-8," + encodeURIComponent(text));
	element.setAttribute("download",fileName);
	element.style.display = "none";
	window.document.body.appendChild(element);
	element.click();
	window.document.body.removeChild(element);
};
cc_tool_ExportFile.clipboard = function(text) {
	var win = "Ctrl+C";
	var mac = "Cmd+C";
	var copyCombo = win;
	var userAgent = $global.navigator.userAgent;
	var ereg = new EReg("iPhone|iPod|iPad|Android|BlackBerry","i");
	var ismac = ereg.match(userAgent);
	if(ismac) {
		copyCombo = mac;
	}
	window.prompt("Copy to clipboard: " + copyCombo + ", Enter",text);
};
cc_tool_ExportFile.downloadImageBg = function(ctx,isJpg,fileName,isTransparant) {
	if(isTransparant == null) {
		isTransparant = false;
	}
	if(isJpg == null) {
		isJpg = false;
	}
	haxe_Log.trace(ctx,{ fileName : "src/cc/tool/ExportFile.hx", lineNumber : 128, className : "cc.tool.ExportFile", methodName : "downloadImageBg", customParams : [isJpg,fileName,isTransparant]});
	var canvas = ctx.canvas;
	var ext = isJpg ? "jpg" : "png";
	if(fileName == null) {
		var hash = $global.location.hash;
		hash = StringTools.replace(hash,"#","").toLowerCase();
		if(hash == "") {
			hash = "image";
		}
		fileName = "" + hash + "-" + new Date().getTime();
	}
	var w = canvas.width;
	var h = canvas.height;
	var compositeOperation;
	var data = ctx.getImageData(0,0,w,h);
	if(!isTransparant) {
		compositeOperation = ctx.globalCompositeOperation;
		ctx.globalCompositeOperation = "destination-over";
		ctx.fillStyle = "#ffffff";
		ctx.fillRect(0,0,w,h);
		var imageData = canvas.toDataURL("image/png");
		ctx.clearRect(0,0,w,h);
		ctx.putImageData(data,0,0);
		ctx.globalCompositeOperation = compositeOperation;
	}
	var link = window.document.createElement("a");
	link.style.cssText = "display:none";
	link.download = fileName + ("." + ext);
	if(!HTMLCanvasElement.prototype.toBlob) {
		haxe_Log.trace("There is no blob",{ fileName : "src/cc/tool/ExportFile.hx", lineNumber : 187, className : "cc.tool.ExportFile", methodName : "downloadImageBg"});
		link.href = ctx.canvas.toDataURL(isJpg ? "image/jpeg" : "",1);
		link.click();
		link.remove();
	} else {
		haxe_Log.trace("Attack of the blob",{ fileName : "src/cc/tool/ExportFile.hx", lineNumber : 193, className : "cc.tool.ExportFile", methodName : "downloadImageBg"});
		ctx.canvas.toBlob(function(blob) {
			link.href = URL.createObjectURL(blob);
			link.click();
			link.remove();
		},isJpg ? "image/jpeg" : "",1);
	}
	window.document.body.appendChild(link);
};
cc_tool_ExportFile.prototype = {
	toString: function() {
		return "[ExportFile]";
	}
	,__class__: cc_tool_ExportFile
};
var cc_tool_Loader = function(id) {
	this._loadCounter = 0;
	this._isDebug = false;
	this.completeArray = [];
	this._loadingArray = [];
	if(id == null) {
		this.set__id("" + this.toString() + "_" + new Date().getTime());
	} else {
		this.set__id(id);
	}
};
$hxClasses["cc.tool.Loader"] = cc_tool_Loader;
cc_tool_Loader.__name__ = "cc.tool.Loader";
cc_tool_Loader.create = function(id) {
	var loader = new cc_tool_Loader(id);
	return loader;
};
cc_tool_Loader.prototype = {
	isDebug: function(isDebug) {
		if(isDebug == null) {
			isDebug = true;
		}
		this.set__isDebug(isDebug);
		return this;
	}
	,add: function(path,func,type) {
		var _type = type == null ? this.fileType(path) : type;
		var _obj = { path : path, type : _type, func : func};
		if(this.get__isDebug()) {
			haxe_Log.trace(_obj,{ fileName : "src/cc/tool/Loader.hx", lineNumber : 76, className : "cc.tool.Loader", methodName : "add"});
		}
		this.get__loadingArray().push(_obj);
		return this;
	}
	,onComplete: function(func,arr) {
		this._onComplete = func;
		this._onCompleteParams = arr;
		return this;
	}
	,onUpdate: function(func,arr) {
		this._onUpdate = func;
		this._onUpdateParams = arr;
		return this;
	}
	,onProgress: function(func,arr) {
		this._onProgress = func;
		this._onProgressParams = arr;
		return this;
	}
	,onError: function(func,arr) {
		this._onError = func;
		this._onErrorParams = arr;
		return this;
	}
	,load: function() {
		if(this.get__isDebug()) {
			haxe_Log.trace("start loading",{ fileName : "src/cc/tool/Loader.hx", lineNumber : 121, className : "cc.tool.Loader", methodName : "load"});
		}
		this.loadingHandler();
		return this;
	}
	,fileType: function(path) {
		var type = cc_tool_FileType.Unknown;
		var ext = path.split(".")[1];
		switch(ext.toLowerCase()) {
		case "csv":
			type = cc_tool_FileType.Csv;
			break;
		case "gif":
			type = cc_tool_FileType.Gif;
			break;
		case "jpeg":case "jpg":
			type = cc_tool_FileType.JPG;
			break;
		case "json":
			type = cc_tool_FileType.Json;
			break;
		case "png":
			type = cc_tool_FileType.Png;
			break;
		case "txt":
			type = cc_tool_FileType.Txt;
			break;
		case "xml":
			type = cc_tool_FileType.Xml;
			break;
		default:
			type = cc_tool_FileType.Unknown;
		}
		return type;
	}
	,loadingHandler: function() {
		if(this._loadCounter >= this.get__loadingArray().length) {
			if(this.get__isDebug()) {
				haxe_Log.trace("" + this.toString() + " :: Loading queue is done",{ fileName : "src/cc/tool/Loader.hx", lineNumber : 165, className : "cc.tool.Loader", methodName : "loadingHandler"});
			}
			if(this.get__isDebug()) {
				haxe_Log.trace("show completed array: " + Std.string(this.completeArray),{ fileName : "src/cc/tool/Loader.hx", lineNumber : 167, className : "cc.tool.Loader", methodName : "loadingHandler"});
			}
			if(this.get__isDebug()) {
				haxe_Log.trace("length of complete files: " + this.completeArray.length,{ fileName : "src/cc/tool/Loader.hx", lineNumber : 169, className : "cc.tool.Loader", methodName : "loadingHandler"});
			}
			if(Reflect.isFunction(this._onComplete)) {
				this._onComplete.apply(this._onComplete,[this.completeArray]);
			}
			return;
		}
		var _l = this.get__loadingArray()[this._loadCounter];
		switch(_l.type._hx_index) {
		case 1:case 7:case 9:case 11:case 12:
			this.imageLoader(_l);
			break;
		case 3:case 5:case 13:case 15:case 17:
			this.textLoader(_l);
			break;
		default:
			haxe_Log.trace("not sure what this type is?: \"" + _l.path + "\"",{ fileName : "src/cc/tool/Loader.hx", lineNumber : 184, className : "cc.tool.Loader", methodName : "loadingHandler"});
		}
	}
	,imageLoader: function(_l) {
		var _gthis = this;
		var _img = new Image();
		_img.crossOrigin = "Anonymous";
		_img.src = _l.path;
		_img.onload = function() {
			if(_gthis.get__isDebug()) {
				haxe_Log.trace("image source: " + _img.src,{ fileName : "src/cc/tool/Loader.hx", lineNumber : 194, className : "cc.tool.Loader", methodName : "imageLoader"});
				haxe_Log.trace("image width: " + _img.width,{ fileName : "src/cc/tool/Loader.hx", lineNumber : 195, className : "cc.tool.Loader", methodName : "imageLoader"});
				haxe_Log.trace("image height: " + _img.height,{ fileName : "src/cc/tool/Loader.hx", lineNumber : 196, className : "cc.tool.Loader", methodName : "imageLoader"});
			}
			if(_gthis.get__isDebug()) {
				haxe_Log.trace("complete array length: " + _gthis.completeArray.length,{ fileName : "src/cc/tool/Loader.hx", lineNumber : 199, className : "cc.tool.Loader", methodName : "imageLoader"});
			}
			_l.image = _img;
			_gthis.completeArray.push(_l);
			if(_gthis.get__isDebug()) {
				haxe_Log.trace("complete array: " + Std.string(_gthis.completeArray),{ fileName : "src/cc/tool/Loader.hx", lineNumber : 203, className : "cc.tool.Loader", methodName : "imageLoader"});
			}
			if(_gthis.get__isDebug()) {
				haxe_Log.trace("complete array length: " + _gthis.completeArray.length,{ fileName : "src/cc/tool/Loader.hx", lineNumber : 205, className : "cc.tool.Loader", methodName : "imageLoader"});
			}
			if(Reflect.isFunction(_l.func)) {
				_l.func.apply(_l.func,[_l]);
			}
			if(Reflect.isFunction(_gthis._onUpdate)) {
				_gthis._onUpdate.apply(_gthis._onUpdate,[_img]);
			}
			_gthis._loadCounter++;
			_gthis.loadingHandler();
		};
		_img.onerror = function() {
			if(Reflect.isFunction(_gthis._onError)) {
				_gthis._onError.apply(_gthis._onError,[_img]);
			}
			_gthis._loadCounter++;
			_gthis.loadingHandler();
		};
		_img.onprogress = function() {
			if(Reflect.isFunction(_gthis._onProgress)) {
				_gthis._onProgress.apply(_gthis._onProgress,[_img]);
			}
		};
	}
	,textLoader: function(_l) {
		var _gthis = this;
		var url = _l.path;
		var req = new haxe_http_HttpJs(url);
		req.onData = function(data) {
			try {
				_l.str = data;
				if(_l.type == cc_tool_FileType.Json) {
					_l.json = JSON.parse(data);
				} else {
					_l.json = "";
				}
				_gthis.completeArray.push(_l);
				if(Reflect.isFunction(_l.func)) {
					_l.func.apply(_l.func,[_l]);
				}
				if(Reflect.isFunction(_gthis._onUpdate)) {
					_gthis._onUpdate.apply(_gthis._onUpdate,["_img"]);
				}
				_gthis._loadCounter++;
				_gthis.loadingHandler();
			} catch( _g ) {
				var e = haxe_Exception.caught(_g).unwrap();
				if(_gthis.get__isDebug()) {
					haxe_Log.trace(e,{ fileName : "src/cc/tool/Loader.hx", lineNumber : 253, className : "cc.tool.Loader", methodName : "textLoader"});
				}
				_gthis._loadCounter++;
				_gthis.loadingHandler();
			}
		};
		req.onError = function(error) {
			if(_gthis.get__isDebug()) {
				haxe_Log.trace("error: " + error,{ fileName : "src/cc/tool/Loader.hx", lineNumber : 261, className : "cc.tool.Loader", methodName : "textLoader"});
			}
			_gthis._loadCounter++;
			_gthis.loadingHandler();
		};
		req.onStatus = function(status) {
			if(_gthis.get__isDebug()) {
				haxe_Log.trace("status: " + status,{ fileName : "src/cc/tool/Loader.hx", lineNumber : 267, className : "cc.tool.Loader", methodName : "textLoader"});
			}
		};
		req.request(true);
	}
	,get__id: function() {
		return this._id;
	}
	,set__id: function(value) {
		return this._id = value;
	}
	,get__loadingArray: function() {
		return this._loadingArray;
	}
	,set__loadingArray: function(value) {
		return this._loadingArray = value;
	}
	,get__isDebug: function() {
		return this._isDebug;
	}
	,set__isDebug: function(value) {
		return this._isDebug = value;
	}
	,toString: function() {
		return "[Loader]";
	}
	,__class__: cc_tool_Loader
	,__properties__: {set__isDebug:"set__isDebug",get__isDebug:"get__isDebug",set__loadingArray:"set__loadingArray",get__loadingArray:"get__loadingArray",set__id:"set__id",get__id:"get__id"}
};
var cc_tool_FileType = $hxEnums["cc.tool.FileType"] = { __ename__:true,__constructs__:null
	,Unknown: {_hx_name:"Unknown",_hx_index:0,__enum__:"cc.tool.FileType",toString:$estr}
	,Img: {_hx_name:"Img",_hx_index:1,__enum__:"cc.tool.FileType",toString:$estr}
	,IMG: {_hx_name:"IMG",_hx_index:2,__enum__:"cc.tool.FileType",toString:$estr}
	,Txt: {_hx_name:"Txt",_hx_index:3,__enum__:"cc.tool.FileType",toString:$estr}
	,TXT: {_hx_name:"TXT",_hx_index:4,__enum__:"cc.tool.FileType",toString:$estr}
	,Json: {_hx_name:"Json",_hx_index:5,__enum__:"cc.tool.FileType",toString:$estr}
	,JSON: {_hx_name:"JSON",_hx_index:6,__enum__:"cc.tool.FileType",toString:$estr}
	,Gif: {_hx_name:"Gif",_hx_index:7,__enum__:"cc.tool.FileType",toString:$estr}
	,GIF: {_hx_name:"GIF",_hx_index:8,__enum__:"cc.tool.FileType",toString:$estr}
	,Png: {_hx_name:"Png",_hx_index:9,__enum__:"cc.tool.FileType",toString:$estr}
	,PNG: {_hx_name:"PNG",_hx_index:10,__enum__:"cc.tool.FileType",toString:$estr}
	,JPEG: {_hx_name:"JPEG",_hx_index:11,__enum__:"cc.tool.FileType",toString:$estr}
	,JPG: {_hx_name:"JPG",_hx_index:12,__enum__:"cc.tool.FileType",toString:$estr}
	,Xml: {_hx_name:"Xml",_hx_index:13,__enum__:"cc.tool.FileType",toString:$estr}
	,XML: {_hx_name:"XML",_hx_index:14,__enum__:"cc.tool.FileType",toString:$estr}
	,Svg: {_hx_name:"Svg",_hx_index:15,__enum__:"cc.tool.FileType",toString:$estr}
	,SVG: {_hx_name:"SVG",_hx_index:16,__enum__:"cc.tool.FileType",toString:$estr}
	,Csv: {_hx_name:"Csv",_hx_index:17,__enum__:"cc.tool.FileType",toString:$estr}
	,CSV: {_hx_name:"CSV",_hx_index:18,__enum__:"cc.tool.FileType",toString:$estr}
};
cc_tool_FileType.__constructs__ = [cc_tool_FileType.Unknown,cc_tool_FileType.Img,cc_tool_FileType.IMG,cc_tool_FileType.Txt,cc_tool_FileType.TXT,cc_tool_FileType.Json,cc_tool_FileType.JSON,cc_tool_FileType.Gif,cc_tool_FileType.GIF,cc_tool_FileType.Png,cc_tool_FileType.PNG,cc_tool_FileType.JPEG,cc_tool_FileType.JPG,cc_tool_FileType.Xml,cc_tool_FileType.XML,cc_tool_FileType.Svg,cc_tool_FileType.SVG,cc_tool_FileType.Csv,cc_tool_FileType.CSV];
var cc_tool_export_ExportNames = function() {
};
$hxClasses["cc.tool.export.ExportNames"] = cc_tool_export_ExportNames;
cc_tool_export_ExportNames.__name__ = "cc.tool.export.ExportNames";
cc_tool_export_ExportNames.prototype = {
	__class__: cc_tool_export_ExportNames
};
var cc_tool_export_ExportWrapperBase = function() {
	this._isDebug = false;
};
$hxClasses["cc.tool.export.ExportWrapperBase"] = cc_tool_export_ExportWrapperBase;
cc_tool_export_ExportWrapperBase.__name__ = "cc.tool.export.ExportWrapperBase";
cc_tool_export_ExportWrapperBase.prototype = {
	progress: function(func) {
		this._onProgressHandler = func;
	}
	,complete: function(func) {
		this._onExportComplete = func;
	}
	,getMarkdownLite: function() {
		var md = "# " + this.toString() + "\n\n- Generated on: " + Std.string(new Date()) + "\n\n## Instagram\n\n```\n#codeart #coding #creativecode #generative #generativeArt\n#minimalism #minimalist #minimal\n#haxe #javascript #js #nodejs\n#illustration #graphicdesign #graphic\n#animation #motion #motiondesign #motiongraphics\n```\n\n## convert\n\nopen terminal\n\n```\nsh convert.sh\n```\n\n";
		return md;
	}
	,getMarkdown: function(obj) {
		var md = "# " + this.toString() + "\n\n- Generated on: " + Std.string(new Date()) + "\n- total images: " + obj.imageStringArray.length + "\n- calculated time: " + obj.imageStringArray.length / 60 + " sec\n- file name: `_" + obj.filename + "_" + obj.timestamp + ".zip`\n- delay: " + obj.delay + " frames (" + obj.delay / 60 + " sec)\n- record: " + obj.record + " frames (" + obj.record / 60 + " sec)\n\n## Instagram\n\n```\nsketch." + obj.filename + " :: " + obj.description + "\n\n#codeart #coding #creativecode #generative #generativeArt\n#minimalism #minimalist #minimal\n#haxe #javascript #js #nodejs\n#illustration #graphicdesign #graphic\n#animation #motion #motiondesign #motiongraphics\n```\n\n## convert\n\nopen terminal\n\n```\nsh convert.sh\n```\n\n## Folder structure\n\n```\n+ _" + obj.filename + "_" + obj.timestamp + ".zip\n+ _" + obj.filename + "\n\t- convert.sh\n\t- README.MD\n\t+ sequence\n\t\t- image_" + StringTools.lpad("0","0",4) + ".png\n\t\t- image_" + StringTools.lpad("1","0",4) + ".png\n\t\t- ...\n```\n";
		return md;
	}
	,getBashConvert: function(obj) {
		var bash = "#!/bin/bash\n\necho 'Start convertions png sequence to mp4'\n\nffmpeg -y -r 30 -i sequence/image_%04d.png -c:v libx264 -strict -2 -pix_fmt yuv420p -shortest -filter:v \"setpts=0.5*PTS\"  " + obj.filename + "_output_30fps.mp4\n\n# convert a short sequence to a mp4, one frame per second\n# ffmpeg -y -r 1 -i sequence/image_%04d.png -c:v libx264 -strict -2 -pix_fmt yuv420p -shortest -filter:v \"setpts=0.5*PTS\"  " + obj.filename + "_output_1fps.mp4\n\n# rendercan fix\n# ffmpeg -y -r 30 -i framescemage_%09d.png -c:v libx264 -strict -2 -pix_fmt yuv420p -shortest -filter:v \"setpts=0.5*PTS\"  sequence/_output_30fps.mp4\n\necho 'End convertions png sequence to mp4'\n\n";
		return bash;
	}
	,getBashConvertPng: function(obj) {
		var bash2 = "\n#!/bin/bash\n\necho 'Start remove transparancy from images sequence'\n\ncd sequence\nmkdir output\nfor i in *.png; do\n   convert \"$" + "i\" -background white -alpha remove output/\"$" + "i\"\n   echo \"$" + "i\"\ndone\n\necho 'End remove transparancy from images sequence'\necho 'Start convertions png sequence to mp4'\n\nffmpeg -y -r 30 -i output/image_%04d.png -c:v libx264 -strict -2 -pix_fmt yuv420p -shortest -filter:v \"setpts=0.5*PTS\"  ../" + obj.filename + "_white_output_30fps.mp4\n\necho 'End convertions png sequence to mp4'\n\n";
		return bash2;
	}
	,debug: function(isDebug) {
		this._isDebug = isDebug;
	}
	,toString: function() {
		return "[ExportTypeBase]";
	}
	,__class__: cc_tool_export_ExportWrapperBase
};
var cc_tool_export_IExport = function() { };
$hxClasses["cc.tool.export.IExport"] = cc_tool_export_IExport;
cc_tool_export_IExport.__name__ = "cc.tool.export.IExport";
cc_tool_export_IExport.prototype = {
	__class__: cc_tool_export_IExport
};
var cc_tool_export_ExportNodeServer = function() {
	this._isEmbeded = false;
	this._folder = "sequence";
	this._name = "image";
	this._exportCounter = 0;
	this._isRecording = false;
	this._isClear = false;
	this._isTimer = false;
	this._isSocketReady = false;
	this._isExportServerReady = false;
	haxe_Log.trace("constructor " + this.toString(),{ fileName : "src/cc/tool/export/ExportNodeServer.hx", lineNumber : 31, className : "cc.tool.export.ExportNodeServer", methodName : "new"});
	cc_tool_export_ExportWrapperBase.call(this);
	this.embedScripts($bind(this,this.onEmbedComplete));
};
$hxClasses["cc.tool.export.ExportNodeServer"] = cc_tool_export_ExportNodeServer;
cc_tool_export_ExportNodeServer.__name__ = "cc.tool.export.ExportNodeServer";
cc_tool_export_ExportNodeServer.__super__ = cc_tool_export_ExportWrapperBase;
cc_tool_export_ExportNodeServer.prototype = $extend(cc_tool_export_ExportWrapperBase.prototype,{
	'export': function(obj) {
		if(this._isDebug) {
			haxe_Log.trace("" + this.toString() + " - export",{ fileName : "src/cc/tool/export/ExportNodeServer.hx", lineNumber : 41, className : "cc.tool.export.ExportNodeServer", methodName : "export"});
		}
		this._exportObj = obj;
		this._folder = obj.filename;
		this._exportArray = obj.imageStringArray;
		this._exportCounter = 0;
		this.deleteFolder();
	}
	,exportLite: function(fileName,imageStringArray) {
	}
	,startExport: function() {
		if(this._isDebug) {
			haxe_Log.trace("startExport: " + this._exportCounter + " / " + this._exportArray.length,{ fileName : "src/cc/tool/export/ExportNodeServer.hx", lineNumber : 57, className : "cc.tool.export.ExportNodeServer", methodName : "startExport"});
		}
		if(Reflect.isFunction(this._onProgressHandler)) {
			this._onProgressHandler.apply(this._onProgressHandler,[this._exportCounter / this._exportArray.length * 100]);
		}
		if(this._exportCounter >= this._exportArray.length) {
			this._isRecording = false;
			if(Reflect.isFunction(this._onExportComplete)) {
				this._onExportComplete.apply(this._onExportComplete,[]);
			}
			if(this._isDebug) {
				haxe_Log.trace("" + this.toString() + " STOP recording base on total frames",{ fileName : "src/cc/tool/export/ExportNodeServer.hx", lineNumber : 68, className : "cc.tool.export.ExportNodeServer", methodName : "startExport"});
			}
			this.convertExport();
			return;
		}
		var id = Std.string(new Date().getTime());
		var data = { _id : id, file : this._exportArray[this._exportCounter], name : "" + this._name + "_" + StringTools.lpad(Std.string(this._exportCounter),"0",4), folder : "" + this._folder};
		if(this._isDebug) {
			haxe_Log.trace("" + this.toString() + " renderSequence : " + data._id,{ fileName : "src/cc/tool/export/ExportNodeServer.hx", lineNumber : 81, className : "cc.tool.export.ExportNodeServer", methodName : "startExport"});
		}
		this._socket.emit(cc_tool_export_ExportNames.SEQUENCE,data);
		if(this._exportCounter % 60 == 1) {
			if(this._isDebug) {
				haxe_Log.trace("current frame render: " + this._exportCounter + "/" + this._exportArray.length,{ fileName : "src/cc/tool/export/ExportNodeServer.hx", lineNumber : 88, className : "cc.tool.export.ExportNodeServer", methodName : "startExport"});
			}
		}
	}
	,convertExport: function() {
		var data = { name : "" + this._name, folder : "" + this._folder, clear : this._isClear, description : "export this file "};
		this._socket.emit(cc_tool_export_ExportNames.COMBINE,data);
		var data = { name : "" + this._name, folder : "" + this._folder, content : this.getMarkdown(this._exportObj)};
		data["name"] = "README.MD";
		data["content"] = this.getMarkdown(this._exportObj);
		this._socket.emit("export.file",data);
		data["name"] = "convert.sh";
		data["content"] = this.getBashConvert(this._exportObj);
		this._socket.emit("export.file",data);
		data["name"] = "png.sh";
		data["content"] = this.getBashConvertPng(this._exportObj);
		this._socket.emit("export.file",data);
	}
	,deleteFolder: function() {
		var data = { name : "" + this._name, clear : this._isClear, folder : "" + this._folder};
		this._socket.emit(cc_tool_export_ExportNames.RENDER_CLEAR,data);
	}
	,initSocket: function() {
		var _gthis = this;
		haxe_Log.trace("" + this.toString() + " Init Socket",{ fileName : "src/cc/tool/export/ExportNodeServer.hx", lineNumber : 131, className : "cc.tool.export.ExportNodeServer", methodName : "initSocket"});
		if(!this._isEmbeded) {
			haxe_Log.trace("_isEmbeded : " + Std.string(this._isEmbeded),{ fileName : "src/cc/tool/export/ExportNodeServer.hx", lineNumber : 134, className : "cc.tool.export.ExportNodeServer", methodName : "initSocket"});
			return;
		}
		haxe_Log.trace(this._host,{ fileName : "src/cc/tool/export/ExportNodeServer.hx", lineNumber : 138, className : "cc.tool.export.ExportNodeServer", methodName : "initSocket", customParams : [this._port]});
		this._socket = io("http://localhost:5000");
		this._socket.on("connect_error",function(err) {
			$global.console.group("Connection error export server");
			$global.console.warn("" + _gthis.toString() + " Error connecting to server \"" + err + "\", closing connection");
			$global.console.info("this probably means that cc-export project isn't running");
			$global.console.groupEnd();
			_gthis._socket.close();
			_gthis._isRecording = false;
			_gthis._isExportServerReady = false;
		});
		this._socket.on("connect",function(err) {
			if(err == "undefined") {
				haxe_Log.trace("" + _gthis.toString() + " connect: " + err,{ fileName : "src/cc/tool/export/ExportNodeServer.hx", lineNumber : 159, className : "cc.tool.export.ExportNodeServer", methodName : "initSocket"});
			} else {
				haxe_Log.trace("" + _gthis.toString() + " connect",{ fileName : "src/cc/tool/export/ExportNodeServer.hx", lineNumber : 161, className : "cc.tool.export.ExportNodeServer", methodName : "initSocket"});
			}
			if(err == null) {
				_gthis._isSocketReady = true;
			}
		});
		this._socket.on("disconnect",function(err) {
			haxe_Log.trace("" + _gthis.toString() + " disconnect: " + err,{ fileName : "src/cc/tool/export/ExportNodeServer.hx", lineNumber : 168, className : "cc.tool.export.ExportNodeServer", methodName : "initSocket"});
		});
		this._socket.on("connect_failed",function(err) {
			haxe_Log.trace("" + _gthis.toString() + " connect_failed: " + err,{ fileName : "src/cc/tool/export/ExportNodeServer.hx", lineNumber : 173, className : "cc.tool.export.ExportNodeServer", methodName : "initSocket"});
		});
		this._socket.on("error",function(err) {
			haxe_Log.trace("" + _gthis.toString() + " error: " + err,{ fileName : "src/cc/tool/export/ExportNodeServer.hx", lineNumber : 176, className : "cc.tool.export.ExportNodeServer", methodName : "initSocket"});
		});
		this._socket.on("message",function(data) {
			if(data.message != null) {
				$global.console.log("" + _gthis.toString() + " message: " + data.message);
			} else {
				$global.console.log("" + _gthis.toString() + " There is a problem: " + Std.string(data));
			}
		});
		this._socket.emit(cc_tool_export_ExportNames.CHECKIN);
		this._socket.on(cc_tool_export_ExportNames.SERVER_CHECKIN,function(data) {
			if(data.checkin != null && data.checkin == true) {
				_gthis._isExportServerReady = true;
				$global.console.log("" + _gthis.toString() + " data:  + " + Std.string(data) + ", & _isExportServerReady: " + Std.string(_gthis._isExportServerReady));
			} else {
				$global.console.log("" + _gthis.toString() + " There is a problem: " + Std.string(data));
			}
		});
		this._socket.on(cc_tool_export_ExportNames.RENDER_DONE,function(data) {
			$global.console.log(data);
		});
		this._socket.on(cc_tool_export_ExportNames.RENDER_CLEAR_DONE,function(data) {
			if(_gthis._isDebug) {
				$global.console.log(data.message);
			}
			_gthis.startExport();
		});
		this._socket.on(cc_tool_export_ExportNames.SEQUENCE_NEXT,function(data) {
			if(_gthis._isDebug) {
				$global.console.log("SEQUENCE_NEXT: " + data.message);
			}
			_gthis._exportCounter++;
			_gthis.startExport();
		});
	}
	,onEmbedComplete: function(value) {
		var _gthis = this;
		if(this._isDebug) {
			$global.console.log("" + this.toString() + " " + value);
		}
		this._isEmbeded = true;
		haxe_Timer.delay(function() {
			_gthis.initSocket();
		},1);
	}
	,embedScripts: function(callback,callbackArray) {
		var id = "embedSocketIO";
		haxe_Log.trace("Check if \"" + id + "\" is embedded",{ fileName : "src/cc/tool/export/ExportNodeServer.hx", lineNumber : 234, className : "cc.tool.export.ExportNodeServer", methodName : "embedScripts"});
		if(!cc_tool_Embed.check(id)) {
			$global.console.warn("" + id + " = not Embedded");
			this._isEmbeded = false;
			cc_tool_Embed.script(id,"https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js",$bind(this,this.onEmbedComplete),["socket.io is embedded and loaded"]);
		} else {
			$global.console.warn("" + id + " = already embeded");
		}
	}
	,toString: function() {
		return "[Export via Node]";
	}
	,__class__: cc_tool_export_ExportNodeServer
});
var cc_tool_export_ExportNone = function() {
	cc_tool_export_ExportWrapperBase.call(this);
};
$hxClasses["cc.tool.export.ExportNone"] = cc_tool_export_ExportNone;
cc_tool_export_ExportNone.__name__ = "cc.tool.export.ExportNone";
cc_tool_export_ExportNone.__super__ = cc_tool_export_ExportWrapperBase;
cc_tool_export_ExportNone.prototype = $extend(cc_tool_export_ExportWrapperBase.prototype,{
	'export': function(obj) {
		var _gthis = this;
		haxe_Timer.delay(function() {
			_gthis._progress(25);
		},250);
		haxe_Timer.delay(function() {
			_gthis._progress(50);
		},500);
		haxe_Timer.delay(function() {
			_gthis._progress(75);
		},750);
		haxe_Timer.delay(function() {
			_gthis._progress(100);
		},1000);
		haxe_Timer.delay(function() {
			_gthis._complete(100);
		},1000);
	}
	,exportLite: function(fileName,imageStringArray) {
	}
	,_progress: function(value) {
		if(Reflect.isFunction(this._onProgressHandler)) {
			haxe_Log.trace("onProgressHandler (" + value + ")",{ fileName : "src/cc/tool/export/ExportNone.hx", lineNumber : 34, className : "cc.tool.export.ExportNone", methodName : "_progress"});
			this._onProgressHandler.apply(this._onProgressHandler,[value]);
		}
	}
	,_complete: function(value) {
		if(Reflect.isFunction(this._onExportComplete)) {
			haxe_Log.trace("onExportComplete (" + value + ")",{ fileName : "src/cc/tool/export/ExportNone.hx", lineNumber : 41, className : "cc.tool.export.ExportNone", methodName : "_complete"});
			this._onExportComplete.apply(this._onExportComplete,[]);
		}
	}
	,toString: function() {
		return "[Export via TEST/NONE]";
	}
	,__class__: cc_tool_export_ExportNone
});
var cc_tool_export_IExportWrapper = function() { };
$hxClasses["cc.tool.export.IExportWrapper"] = cc_tool_export_IExportWrapper;
cc_tool_export_IExportWrapper.__name__ = "cc.tool.export.IExportWrapper";
cc_tool_export_IExportWrapper.prototype = {
	__class__: cc_tool_export_IExportWrapper
	,__properties__: {set__isDebug:"set__isDebug",get__isDebug:"get__isDebug"}
};
var cc_tool_export_ExportWrapper = function(ctx,fileName) {
	this.imageStringArray = [];
	this._type = cc_tool_export_ExportType.NONE;
	this._isMenu = true;
	this._record = 600;
	this._delay = 120;
	this.description = "";
	this._progressBarHeight = 3;
	this._recordCounter = 0;
	this._delayCounter = 0;
	this.isExportActive = false;
	this.fps = 60;
	haxe_Log.trace("constructor " + this.toString(),{ fileName : "src/cc/tool/export/ExportWrapper.hx", lineNumber : 60, className : "cc.tool.export.ExportWrapper", methodName : "new"});
	this.createQuicktoExportObj();
	this.create_ProgressBar();
	if(ctx == null) {
		$global.console.warn("This is not acceptable, I need a context!");
		return;
	}
	this._filename = fileName == null ? this.toString() : fileName;
	this.set__ctx(ctx);
	this.out("ExportWrapper ready");
};
$hxClasses["cc.tool.export.ExportWrapper"] = cc_tool_export_ExportWrapper;
cc_tool_export_ExportWrapper.__name__ = "cc.tool.export.ExportWrapper";
cc_tool_export_ExportWrapper.prototype = {
	startExport: function() {
		this._startT = new Date().getTime();
		this.isExportActive = true;
		this.imageStringArray = [];
		this._delayCounter = 0;
		this._recordCounter = 0;
		this.type(this.get__type());
		this.out("" + this.toString() + " - start export - 0ms");
		if(this.get__isDebug()) {
			haxe_Log.trace(this.toString() + " - start export - 0ms",{ fileName : "src/cc/tool/export/ExportWrapper.hx", lineNumber : 86, className : "cc.tool.export.ExportWrapper", methodName : "startExport"});
			haxe_Log.trace(this.toExportObj(),{ fileName : "src/cc/tool/export/ExportWrapper.hx", lineNumber : 87, className : "cc.tool.export.ExportWrapper", methodName : "startExport"});
		}
	}
	,stopExport: function() {
		this._endT = new Date().getTime();
		this.record(this.imageStringArray.length);
		this.isExportActive = false;
		this.out(this.toString() + (" - stop export - " + (this._endT - this._startT) / 1000 + "sec"));
		if(this.get__isDebug()) {
			haxe_Log.trace(this.toString() + (" - stop export - " + (this._endT - this._startT) / 1000 + "sec"),{ fileName : "src/cc/tool/export/ExportWrapper.hx", lineNumber : 98, className : "cc.tool.export.ExportWrapper", methodName : "stopExport"});
			haxe_Log.trace(this.toExportObj(),{ fileName : "src/cc/tool/export/ExportWrapper.hx", lineNumber : 99, className : "cc.tool.export.ExportWrapper", methodName : "stopExport"});
		}
		if(Reflect.isFunction(this._onComplete)) {
			var arr = this._onCompleteParams != null ? this._onCompleteParams : [];
			this._onComplete.apply(this._onComplete,arr);
		}
		if(Reflect.isFunction(this._onRecordComplete)) {
			var arr = this._onRecordCompleteParams != null ? this._onRecordCompleteParams : [];
			this._onRecordComplete.apply(this._onRecordComplete,arr);
		}
		var timeStamp = this._endT;
		haxe_Log.trace(this.exportType.toString(),{ fileName : "src/cc/tool/export/ExportWrapper.hx", lineNumber : 115, className : "cc.tool.export.ExportWrapper", methodName : "stopExport"});
		this.exportType.progress($bind(this,this.progressGeneration));
		this.exportType.complete(this._onExportComplete);
		this.exportType.debug(this.get__isDebug());
		this.exportType.export(this.toExportObj());
	}
	,init: function() {
		haxe_Log.trace("" + this.toString() + ".init : " + Std.string(this.toExportObj()),{ fileName : "src/cc/tool/export/ExportWrapper.hx", lineNumber : 129, className : "cc.tool.export.ExportWrapper", methodName : "init"});
		if(this.pulse == null) {
			$global.console.warn("no pulse detected, hook into the animation");
			return;
		}
	}
	,start: function() {
		this.startExport();
	}
	,startNow: function() {
		this.startRecording();
	}
	,startRecording: function() {
		this.delay(0);
		this.recordInSeconds(60);
		this.init();
		this.startExport();
	}
	,stop: function() {
		this.stopExport();
	}
	,debug: function(isDebug) {
		if(isDebug == null) {
			isDebug = true;
		}
		this.set__isDebug(isDebug);
	}
	,onComplete: function(func,arr) {
		this._onComplete = func;
		this._onCompleteParams = arr;
	}
	,onRecordStart: function(func,arr) {
		this._onRecordStart = func;
		this._onRecordStartParams = arr;
	}
	,onRecordComplete: function(func,arr) {
		this._onRecordComplete = func;
		this._onRecordCompleteParams = arr;
	}
	,onExportComplete: function(func,arr) {
		this._onExportComplete = func;
		this._onExportCompleteParams = arr;
	}
	,menu: function(isVisible) {
		if(isVisible == null) {
			isVisible = false;
		}
		this.set__isMenu(isVisible);
		if(!this.get__isMenu()) {
			this.panel1.hide();
		}
	}
	,type: function(type) {
		if(this.get__type() == type) {
			haxe_Log.trace("" + Std.string(this.get__type()) + " == " + Std.string(type),{ fileName : "src/cc/tool/export/ExportWrapper.hx", lineNumber : 239, className : "cc.tool.export.ExportWrapper", methodName : "type"});
			return;
		}
		this.set__type(type);
		switch(this.get__type()._hx_index) {
		case 0:
			this.exportType = new cc_tool_export_ExportZip();
			break;
		case 1:
			this.exportType = new cc_tool_export_ExportNodeServer();
			break;
		case 2:case 3:
			this.exportType = new cc_tool_export_ExportNone();
			break;
		}
		haxe_Log.trace("ExportWrapper.type: " + Std.string(Type.typeof(this.exportType)),{ fileName : "src/cc/tool/export/ExportWrapper.hx", lineNumber : 253, className : "cc.tool.export.ExportWrapper", methodName : "type"});
		haxe_Log.trace("ExportWrapper.obj: " + Std.string(this.toExportObj()),{ fileName : "src/cc/tool/export/ExportWrapper.hx", lineNumber : 254, className : "cc.tool.export.ExportWrapper", methodName : "type"});
	}
	,exporttype: function(type) {
		this.type(type);
	}
	,delay: function(frames) {
		this.set__delay(frames);
	}
	,delayInSeconds: function(sec) {
		this.set__delay(Math.round(sec * this.fps));
		this.panel1.setValue("delay in seconds",sec);
	}
	,record: function(frames) {
		this.set__record(frames);
	}
	,recordInSeconds: function(sec) {
		this.set__record(Math.round(sec * this.fps));
		this.panel1.setValue("record in seconds",sec);
	}
	,setting: function(obj) {
		haxe_Log.trace("settings: " + Std.string(obj),{ fileName : "src/cc/tool/export/ExportWrapper.hx", lineNumber : 311, className : "cc.tool.export.ExportWrapper", methodName : "setting"});
		this.set__type(null);
		this.exportType = null;
		this.set__record(obj.record);
		this.set__delay(obj.delay == null ? 0 : obj.delay);
		this.set__isDebug(obj.isDebug == null ? false : obj.isDebug);
		this.type(obj.type);
		this.init();
	}
	,toExportObj: function() {
		var obj = { filename : this._filename, export_type : this.get__type(), delay : this.get__delay(), record : this.get__record(), delay_in_seconds : this.get__delay() / 60, record_in_seconds : this.get__record() / 60, imageStringArray : this.imageStringArray, timestamp : new Date().getTime(), description : ""};
		return obj;
	}
	,isDebug: function(isDebug) {
		if(isDebug == null) {
			isDebug = true;
		}
		this.set__isDebug(isDebug);
	}
	,pulse: function() {
		if(this.isExportActive) {
			if(this._delayCounter < this.get__delay()) {
				if(this.get__isDebug()) {
					$global.console.log("" + this.toString() + " delay: " + this._delayCounter + " < " + this.get__delay());
				}
			}
			if(this._delayCounter == this.get__delay()) {
				if(this.get__isDebug()) {
					$global.console.log("" + this.toString() + " onRecordStart: " + this._delayCounter + " == " + this.get__delay());
				}
				if(Reflect.isFunction(this._onRecordStart)) {
					var arr = this._onRecordStartParams != null ? this._onRecordStartParams : [];
					this._onRecordStart.apply(this._onRecordStart,arr);
				}
			}
			if(this._delayCounter >= this.get__delay()) {
				if(this._recordCounter < this.get__record()) {
					if(this.get__isDebug()) {
						$global.console.log("" + this.toString() + " recording: " + this._recordCounter + " < " + this.get__record());
					}
					this.imageStringArray.push(this.get__ctx().canvas.toDataURL("image/png").split("base64,")[1]);
					this.progressRecording(this._recordCounter / this.get__record() * 100);
					this._recordCounter++;
				} else {
					this.stopExport();
				}
			}
		}
		this._delayCounter++;
	}
	,createQuicktoExportObj: function() {
		var _gthis = this;
		this.panel1 = QuickSettings.create(10,10,"ExportWrapper settings").addRange("delay in seconds",0.0,5.0,2.0,0.5,function(e) {
			_gthis.setDelay(e);
		}).addRange("record in seconds",0.0,60.0,2.0,0.5,function(e) {
			_gthis.setRecord(e);
		}).addButton("recording",function(e) {
			_gthis.onClickHandler(e);
		}).addText("feedback","x",function(e) {
		});
	}
	,out: function(str) {
		if(this.panel1 == null) {
			return;
		}
		this.panel1.setValue("feedback",str);
	}
	,setDelay: function(e) {
		this.out("delay in seconds: " + (e == null ? "null" : "" + e));
		this.set__delay(Math.round(this.fps * e));
	}
	,setRecord: function(e) {
		this.out("recording in seconds: " + (e == null ? "null" : "" + e));
		this.set__record(Math.round(this.fps * e));
	}
	,onClickHandler: function(e) {
		var input = e;
		switch(input.value) {
		case "init recording":
			haxe_Log.trace("init recording",{ fileName : "src/cc/tool/export/ExportWrapper.hx", lineNumber : 419, className : "cc.tool.export.ExportWrapper", methodName : "onClickHandler"});
			this.setDelay(this.panel1.getValue("delay in seconds"));
			this.setRecord(this.panel1.getValue("record in seconds"));
			this.start();
			haxe_Log.trace(JSON.parse(JSON.stringify(this)),{ fileName : "src/cc/tool/export/ExportWrapper.hx", lineNumber : 423, className : "cc.tool.export.ExportWrapper", methodName : "onClickHandler"});
			break;
		case "recording":
			break;
		case "start recording":
			break;
		case "stop recording":
			haxe_Log.trace("stop recording",{ fileName : "src/cc/tool/export/ExportWrapper.hx", lineNumber : 425, className : "cc.tool.export.ExportWrapper", methodName : "onClickHandler"});
			this.stop();
			break;
		default:
			haxe_Log.trace("case '" + input.value + "': trace ('" + input.value + "');",{ fileName : "src/cc/tool/export/ExportWrapper.hx", lineNumber : 428, className : "cc.tool.export.ExportWrapper", methodName : "onClickHandler"});
		}
	}
	,create_ProgressBar: function(percentage) {
		if(percentage == null) {
			percentage = 10;
		}
		var body = window.document.querySelector("body");
		var div = window.document.createElement("div");
		div.setAttribute("id","zip-progress");
		div.innerHTML = "<span style=\"display:none\">" + percentage + "%</span>";
		div.style.position = "absolute";
		div.style.left = "0px";
		div.style.top = "0px";
		div.style.width = "100%";
		div.style.height = "" + this._progressBarHeight + "px";
		div.style.backgroundColor = "silver";
		body.appendChild(div);
		this._progressBar = div;
	}
	,progressGeneration: function(percent) {
		this._progressBar.style.width = "" + percent + "%";
		this._progressBar.style.backgroundColor = "navy";
	}
	,progressRecording: function(percent) {
		this._progressBar.style.width = "" + percent + "%";
		this._progressBar.style.backgroundColor = "red";
	}
	,get__isDebug: function() {
		return this._isDebug;
	}
	,set__isDebug: function(value) {
		return this._isDebug = value;
	}
	,get__ctx: function() {
		return this._ctx;
	}
	,set__ctx: function(value) {
		return this._ctx = value;
	}
	,get__delay: function() {
		return this._delay;
	}
	,set__delay: function(value) {
		return this._delay = value;
	}
	,get__record: function() {
		return this._record;
	}
	,set__record: function(value) {
		return this._record = value;
	}
	,get_description: function() {
		return this.description;
	}
	,set_description: function(value) {
		return this.description = value;
	}
	,get__isMenu: function() {
		return this._isMenu;
	}
	,set__isMenu: function(value) {
		return this._isMenu = value;
	}
	,get__type: function() {
		return this._type;
	}
	,set__type: function(value) {
		return this._type = value;
	}
	,toString: function() {
		return "[ExportWrapper]";
	}
	,__class__: cc_tool_export_ExportWrapper
	,__properties__: {set__type:"set__type",get__type:"get__type",set__isDebug:"set__isDebug",get__isDebug:"get__isDebug",set__isMenu:"set__isMenu",get__isMenu:"get__isMenu",set__ctx:"set__ctx",get__ctx:"get__ctx",set__record:"set__record",get__record:"get__record",set__delay:"set__delay",get__delay:"get__delay",set_description:"set_description",get_description:"get_description"}
};
var cc_tool_export_ExportType = $hxEnums["cc.tool.export.ExportType"] = { __ename__:true,__constructs__:null
	,ZIP: {_hx_name:"ZIP",_hx_index:0,__enum__:"cc.tool.export.ExportType",toString:$estr}
	,NODE: {_hx_name:"NODE",_hx_index:1,__enum__:"cc.tool.export.ExportType",toString:$estr}
	,NONE: {_hx_name:"NONE",_hx_index:2,__enum__:"cc.tool.export.ExportType",toString:$estr}
	,TEST: {_hx_name:"TEST",_hx_index:3,__enum__:"cc.tool.export.ExportType",toString:$estr}
};
cc_tool_export_ExportType.__constructs__ = [cc_tool_export_ExportType.ZIP,cc_tool_export_ExportType.NODE,cc_tool_export_ExportType.NONE,cc_tool_export_ExportType.TEST];
var cc_tool_export_ExportZip = function() {
	cc_tool_export_ExportWrapperBase.call(this);
	this.embedScripts($bind(this,this.onEmbedComplete));
};
$hxClasses["cc.tool.export.ExportZip"] = cc_tool_export_ExportZip;
cc_tool_export_ExportZip.__name__ = "cc.tool.export.ExportZip";
cc_tool_export_ExportZip.__super__ = cc_tool_export_ExportWrapperBase;
cc_tool_export_ExportZip.prototype = $extend(cc_tool_export_ExportWrapperBase.prototype,{
	'export': function(obj) {
		var _gthis = this;
		var startT = new Date().getTime();
		if(obj.imageStringArray.length == 0) {
			haxe_Log.trace("NO images created / use start() - " + (new Date().getTime() - startT) / 1000 + "sec",{ fileName : "src/cc/tool/export/ExportZip.hx", lineNumber : 28, className : "cc.tool.export.ExportZip", methodName : "export"});
			return;
		}
		haxe_Log.trace("Start creation zip file - " + (new Date().getTime() - startT) / 1000 + "sec",{ fileName : "src/cc/tool/export/ExportZip.hx", lineNumber : 32, className : "cc.tool.export.ExportZip", methodName : "export"});
		var zip = new JSZip();
		zip.file("_" + obj.filename + "/README.MD",this.getMarkdown(obj));
		zip.file("_" + obj.filename + "/convert.sh",this.getBashConvert(obj));
		zip.file("_" + obj.filename + "/png.sh",this.getBashConvertPng(obj));
		var _g = 0;
		var _g1 = obj.imageStringArray.length;
		while(_g < _g1) {
			var i = _g++;
			if(this._isDebug) {
				haxe_Log.trace("/" + obj.imageStringArray.length + ". add image to file",{ fileName : "src/cc/tool/export/ExportZip.hx", lineNumber : 39, className : "cc.tool.export.ExportZip", methodName : "export"});
			}
			var img = obj.imageStringArray[i];
			zip.file("_" + obj.filename + "/sequence/image_" + StringTools.lpad(i == null ? "null" : "" + i,"0",4) + ".png",img,{ base64 : true});
		}
		haxe_Log.trace("Generate zip file - " + (new Date().getTime() - startT) / 1000 + "sec",{ fileName : "src/cc/tool/export/ExportZip.hx", lineNumber : 43, className : "cc.tool.export.ExportZip", methodName : "export"});
		var updateCallback = function(metadata) {
			if(_gthis._isDebug) {
				$global.console.log("progression: " + metadata.percent.toFixed(2) + " %");
			}
			if(Reflect.isFunction(_gthis._onProgressHandler)) {
				_gthis._onProgressHandler.apply(_gthis._onProgressHandler,[parseFloat(metadata.percent.toFixed(2))]);
			}
		};
		zip.generateAsync({ type : "blob"},updateCallback).then(function(blob) {
			$global.console.log("Save zip file complete - " + (new Date().getTime() - startT) / 1000 + "sec");
			saveAs(blob,"_" + obj.filename + "_" + obj.timestamp + ".zip");
			if(Reflect.isFunction(_gthis._onExportComplete)) {
				_gthis._onExportComplete.apply(_gthis._onExportComplete,[]);
			}
		},function(err) {
			$global.console.log(err);
		});
	}
	,exportLite: function(filename,imageStringArray) {
		var _gthis = this;
		var startT = new Date().getTime();
		var obj = { imageStringArray : imageStringArray, filename : filename, timestamp : startT, delay : 0, record : 0, description : "", record_in_seconds : 0, export_type : cc_tool_export_ExportType.ZIP, delay_in_seconds : 0};
		if(imageStringArray.length == 0) {
			haxe_Log.trace("NO images created / use start() - " + (new Date().getTime() - startT) / 1000 + "sec",{ fileName : "src/cc/tool/export/ExportZip.hx", lineNumber : 89, className : "cc.tool.export.ExportZip", methodName : "exportLite"});
			return;
		}
		haxe_Log.trace("Start creation zip file - " + (new Date().getTime() - startT) / 1000 + "sec",{ fileName : "src/cc/tool/export/ExportZip.hx", lineNumber : 93, className : "cc.tool.export.ExportZip", methodName : "exportLite"});
		var zip = new JSZip();
		zip.file("_" + filename + "/README.MD",this.getMarkdownLite());
		zip.file("_" + filename + "/convert.sh",this.getBashConvert(obj));
		zip.file("_" + filename + "/png.sh",this.getBashConvertPng(obj));
		var _g = 0;
		var _g1 = imageStringArray.length;
		while(_g < _g1) {
			var i = _g++;
			if(this._isDebug) {
				haxe_Log.trace("/" + imageStringArray.length + ". add image to file",{ fileName : "src/cc/tool/export/ExportZip.hx", lineNumber : 101, className : "cc.tool.export.ExportZip", methodName : "exportLite"});
			}
			var img = imageStringArray[i];
			var isSvg = img.indexOf("<svg ") != -1;
			if(isSvg) {
				zip.file("_" + filename + "/sequence/svg_" + StringTools.lpad(i == null ? "null" : "" + i,"0",4) + ".svg",img);
			} else {
				zip.file("_" + filename + "/sequence/image_" + StringTools.lpad(i == null ? "null" : "" + i,"0",4) + ".png",img,{ base64 : true});
			}
		}
		haxe_Log.trace("Generate zip file - " + (new Date().getTime() - startT) / 1000 + "sec",{ fileName : "src/cc/tool/export/ExportZip.hx", lineNumber : 110, className : "cc.tool.export.ExportZip", methodName : "exportLite"});
		var updateCallback = function(metadata) {
			if(_gthis._isDebug) {
				$global.console.log("progression: " + metadata.percent.toFixed(2) + " %");
			}
			if(Reflect.isFunction(_gthis._onProgressHandler)) {
				_gthis._onProgressHandler.apply(_gthis._onProgressHandler,[parseFloat(metadata.percent.toFixed(2))]);
			}
		};
		zip.generateAsync({ type : "blob"},updateCallback).then(function(blob) {
			$global.console.log("Save zip file complete - " + (new Date().getTime() - startT) / 1000 + "sec");
			saveAs(blob,"_" + filename + "_" + startT + ".zip");
			if(Reflect.isFunction(_gthis._onExportComplete)) {
				_gthis._onExportComplete.apply(_gthis._onExportComplete,[]);
			}
		},function(err) {
			$global.console.log(err);
		});
	}
	,embedScripts: function(callback,callbackArray) {
		if(!cc_tool_Embed.check("jszip")) {
			cc_tool_Embed.script("jszip","https://cdnjs.cloudflare.com/ajax/libs/jszip/3.2.0/jszip.min.js",$bind(this,this.onLoadComplete),["jszip",callback,callbackArray]);
		}
		if(!cc_tool_Embed.check("jsfilesaver")) {
			cc_tool_Embed.script("jsfilesaver","https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/1.3.8/FileSaver.min.js",$bind(this,this.onLoadComplete),["jsfilesaver",callback,callbackArray]);
		}
	}
	,onLoadComplete: function(str,callback,callbackArray) {
		switch(str) {
		case "jsfilesaver":
			cc_tool_export_ExportZip.isFileLoaded = true;
			break;
		case "jszip":
			cc_tool_export_ExportZip.isZipLoaded = true;
			break;
		default:
			haxe_Log.trace("case '" + str + "': trace ('" + str + "');",{ fileName : "src/cc/tool/export/ExportZip.hx", lineNumber : 162, className : "cc.tool.export.ExportZip", methodName : "onLoadComplete"});
		}
		if(cc_tool_export_ExportZip.isFileLoaded && cc_tool_export_ExportZip.isZipLoaded) {
			callback.apply(callback,["JsZip and jsFilesaver are embedded and loaded"]);
		}
	}
	,onEmbedComplete: function(value) {
		$global.console.log("" + this.toString() + " - " + value);
	}
	,toString: function() {
		return "[Export via Zip]";
	}
	,__class__: cc_tool_export_ExportZip
});
var cc_util_AnimateUtil = function() {
};
$hxClasses["cc.util.AnimateUtil"] = cc_util_AnimateUtil;
cc_util_AnimateUtil.__name__ = "cc.util.AnimateUtil";
cc_util_AnimateUtil.tween = function(pos,target,speed) {
	if(speed == null) {
		speed = 20;
	}
	pos += (target - pos) / speed;
	return pos;
};
cc_util_AnimateUtil.bounce = function(num,min,max,sz) {
	if(sz == null) {
		sz = 0;
	}
	if(num >= max - sz / 2 || num - sz / 2 <= min) {
		return true;
	} else {
		return false;
	}
};
cc_util_AnimateUtil.prototype = {
	__class__: cc_util_AnimateUtil
};
var cc_util_ColorUtil = function() {
};
$hxClasses["cc.util.ColorUtil"] = cc_util_ColorUtil;
cc_util_ColorUtil.__name__ = "cc.util.ColorUtil";
cc_util_ColorUtil.getColour = function(r,g,b,a) {
	var c;
	if(g == null) {
		c = cc_util_ColorUtil.rgb(r,r,r);
	} else if(b == null && a == null) {
		c = cc_util_ColorUtil.rgba(r,r,r,g);
	} else if(a == null) {
		c = cc_util_ColorUtil.rgb(r,g,b);
	} else {
		c = cc_util_ColorUtil.rgba(r,g,b,a);
	}
	return c;
};
cc_util_ColorUtil.getColourObj = function(rgb,a) {
	return cc_util_ColorUtil.getColour(rgb.r,rgb.g,rgb.b,a);
};
cc_util_ColorUtil.rgb = function(r,g,b) {
	if(g == null) {
		g = r;
	}
	if(b == null) {
		b = r;
	}
	return "rgb(" + cc_util_MathUtil.clamp(Math.round(r),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(g),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(b),0,255) + ")";
};
cc_util_ColorUtil.rgba = function(r,g,b,a) {
	if(g == null) {
		return "rgb(" + cc_util_MathUtil.clamp(Math.round(r),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(r),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(r),0,255) + ")";
	} else if(b == null) {
		return "rgba(" + cc_util_MathUtil.clamp(Math.round(r),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(r),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(r),0,255) + ", " + cc_util_MathUtil.clamp(g,0,1) + ")";
	} else if(a == null) {
		return "rgba(" + cc_util_MathUtil.clamp(Math.round(r),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(g),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(b),0,255) + ", 1)";
	} else {
		return "rgba(" + cc_util_MathUtil.clamp(Math.round(r),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(g),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(b),0,255) + ", " + cc_util_MathUtil.clamp(a,0,1) + ")";
	}
};
cc_util_ColorUtil.rgbToHex = function(r,g,b) {
	return StringTools.hex(r,2) + StringTools.hex(g,2) + StringTools.hex(b,2);
};
cc_util_ColorUtil.rgb2hex = function(r,g,b,a) {
	if(a == null) {
		a = 255;
	}
	return a << 24 | r << 16 | g << 8 | b;
};
cc_util_ColorUtil.randomColour = function() {
	var r = cc_util_MathUtil.randomInt(255);
	var g = cc_util_MathUtil.randomInt(255);
	var b = cc_util_MathUtil.randomInt(255);
	return cc_util_ColorUtil.rgb(r,g,b);
};
cc_util_ColorUtil.randomColourObject = function() {
	var r = cc_util_MathUtil.randomInt(255);
	var g = cc_util_MathUtil.randomInt(255);
	var b = cc_util_MathUtil.randomInt(255);
	return { r : r, g : g, b : b};
};
cc_util_ColorUtil.toRGB = function(int) {
	return { r : Math.round(int >> 16 & 255), g : Math.round(int >> 8 & 255), b : Math.round(int & 255)};
};
cc_util_ColorUtil.ttoRGB = function(int) {
	return { r : int >> 16 & 255, g : int >> 8 & 255, b : int & 255};
};
cc_util_ColorUtil.assumption = function(value) {
	var _r = 0;
	var _g = 0;
	var _b = 0;
	var _a = 1;
	value = StringTools.replace(value," ","");
	if(value.indexOf("rgba") != -1) {
		value = StringTools.replace(StringTools.replace(value,"rgba(",""),")","");
		var arr = value.split(",");
		_r = arr[0];
		_g = arr[1];
		_b = arr[2];
		_a = arr[3];
	} else if(value.indexOf("rgb") != -1) {
		value = StringTools.replace(StringTools.replace(value,"rgb(",""),")","");
		var arr = value.split(",");
		_r = arr[0];
		_g = arr[1];
		_b = arr[2];
	} else if(value.indexOf("#") != -1) {
		var int = Std.parseInt(StringTools.replace(value,"#","0x"));
		var rgb_r = int >> 16 & 255;
		var rgb_g = int >> 8 & 255;
		var rgb_b = int & 255;
		_r = rgb_r;
		_g = rgb_g;
		_b = rgb_b;
	}
	return { r : _r, g : _g, b : _b, a : _a};
};
cc_util_ColorUtil.hex2RGB = function(hex) {
	var int = Std.parseInt(StringTools.replace(hex,"#","0x"));
	return { r : int >> 16 & 255, g : int >> 8 & 255, b : int & 255};
};
cc_util_ColorUtil.prototype = {
	__class__: cc_util_ColorUtil
};
var cc_util_GridUtil = function(ctx) {
	this._isDebug = false;
	this._isPosition = false;
	this._isDimension = false;
	this._isNumbered = false;
	this._isCellSize = false;
	this.totalColumn = null;
	this.numVer = null;
	this.totalRow = null;
	this.numHor = null;
	this.cellHeight = null;
	this.cellWidth = null;
	this.isFullscreen = false;
	this.isCentered = false;
	this.gridY = 0;
	this.gridX = 0;
	this.height = null;
	this.width = null;
	this.y = null;
	this.x = null;
	this.total = null;
	this.array = [];
	if(ctx != null) {
		this._ctx = ctx;
	}
};
$hxClasses["cc.util.GridUtil"] = cc_util_GridUtil;
cc_util_GridUtil.__name__ = "cc.util.GridUtil";
cc_util_GridUtil.create = function(ctx) {
	var GridUtil = new cc_util_GridUtil(ctx);
	return GridUtil;
};
cc_util_GridUtil.createGrid = function(x,y,width,height,numHor,numVer) {
	if(numVer == null) {
		numVer = 1;
	}
	if(numHor == null) {
		numHor = 1;
	}
	var gridW = width / (numHor - 1);
	var gridH = height / (numVer - 1);
	var total = numHor * numVer;
	var xpos = 0;
	var ypos = 0;
	var arr = [];
	var _g = 0;
	var _g1 = total;
	while(_g < _g1) {
		var i = _g++;
		var point = { x : x + xpos * gridW, y : y + ypos * gridH};
		arr.push(point);
		++xpos;
		if(xpos >= numHor) {
			xpos = 0;
			++ypos;
		}
	}
	return arr;
};
cc_util_GridUtil.calcGrid = function(x,y,width,height,gridX,gridY,numHor,numVer) {
	if(numVer == null) {
		numVer = 1;
	}
	if(numHor == null) {
		numHor = 1;
	}
	if(gridY == null) {
		gridY = 1;
	}
	if(gridX == null) {
		gridX = 1;
	}
	if(height == null) {
		height = -1;
	}
	if(width == null) {
		width = -1;
	}
	if(y == null) {
		y = -1;
	}
	if(x == null) {
		x = -1;
	}
	var grid = new cc_util_GridUtil();
	grid.array = [];
	grid.x = 0;
	grid.y = 0;
	grid.width = 0;
	grid.height = 0;
	grid.gridX = 0;
	grid.gridY = 0;
	return grid;
};
cc_util_GridUtil.prototype = {
	xpos: function(x) {
		this._x = x;
		return this;
	}
	,ypos: function(y) {
		this._y = y;
		return this;
	}
	,pos: function(x,y) {
		this._x = x;
		this._y = y;
		return this;
	}
	,dimension: function(w,h) {
		this._w = w;
		this._h = h;
		return this;
	}
	,grid: function(hor,ver) {
		this._hor = hor;
		this._ver = ver;
		return this;
	}
	,size: function(w,h) {
		this._cellw = w;
		this._cellh = h;
		return this;
	}
	,centered: function() {
		this._center = true;
		return this;
	}
	,debug: function() {
		this._debug = true;
		return this;
	}
	,fullscreen: function() {
		this._fullscreen = true;
		return this;
	}
	,color: function(value) {
		this._color = value;
		return this;
	}
	,calc: function() {
		haxe_Log.trace("WIP",{ fileName : "src/cc/util/GridUtil.hx", lineNumber : 266, className : "cc.util.GridUtil", methodName : "calc"});
		return this;
	}
	,draw: function(isDebug) {
		if(isDebug == null) {
			isDebug = false;
		}
		var isDebug1 = isDebug;
		return this;
	}
	,setPosition: function(x,y) {
		if(this._isDebug) {
			$global.console.log("" + this.toString() + " setPostion");
		}
		this.x = x;
		this.y = y;
		this._isPosition = true;
		this.calculate();
	}
	,setIsCenterPoint: function(isCentered) {
		if(isCentered == null) {
			isCentered = true;
		}
		if(this._isDebug) {
			$global.console.log("" + this.toString() + " setCenterPoint");
		}
		this.isCentered = isCentered;
		this.calculate();
	}
	,setDebug: function(isDebug) {
		if(isDebug == null) {
			isDebug = true;
		}
		this._isDebug = isDebug;
		if(this._isDebug) {
			$global.console.log("" + this.toString() + " setDebug");
		}
	}
	,setIsFullscreen: function(isFullscreen) {
		if(isFullscreen == null) {
			isFullscreen = true;
		}
		if(this._isDebug) {
			$global.console.log("" + this.toString() + " setIsFullscreen");
		}
		this.isFullscreen = isFullscreen;
		this.calculate();
	}
	,setDimension: function(width,height) {
		if(this._isDebug) {
			$global.console.log("" + this.toString() + " setDimension (width: " + width + ", height: " + height + ")");
		}
		this.width = width;
		this.height = height;
		this._isDimension = true;
		this.calculate();
	}
	,setNumbered: function(numHor,numVer) {
		if(this._isDebug) {
			$global.console.log("" + this.toString() + " setNumbers (numHor: " + numHor + ", numVer: " + numVer + ")");
		}
		this.numHor = numHor;
		this.numVer = numVer;
		this._isNumbered = true;
		this.calculate();
	}
	,setCellSize: function(cellWidth,cellHeight) {
		if(cellHeight == null) {
			cellHeight = cellWidth;
		}
		if(this._isDebug) {
			$global.console.log("" + this.toString() + " setCellSize (cellWidth: " + cellWidth + ", cellHeight: " + cellHeight + ")");
		}
		this.cellWidth = cellWidth;
		this.cellHeight = cellHeight;
		this._isCellSize = true;
		this.calculate();
	}
	,row: function(sh) {
		return this.getTablePosition(sh).row;
	}
	,column: function(sh) {
		return this.getTablePosition(sh).column;
	}
	,getTablePosition: function(sh) {
		var index = this.array.indexOf(sh);
		var _row = Math.floor(index / this.numHor);
		var _column = index - _row * this.numHor;
		return { "row" : _row, "column" : _column};
	}
	,getIndex: function(point) {
		var index = this.array.indexOf(point);
		if(index == -1) {
			$global.console.warn("Looks like this point (" + point.x + ", " + point.y + ") is not in array");
		}
		return index;
	}
	,getTablePoint: function(row,column) {
		if(row >= this.totalRow) {
			$global.console.warn("looks like the row is outside the grid (" + row + " >= " + this.totalRow + ")");
			return null;
		}
		if(column >= this.totalColumn) {
			$global.console.warn("looks like the column is outside the grid (" + column + " >= " + this.totalColumn + ")");
			return null;
		}
		if(row < 0) {
			$global.console.warn("looks like the row is outside the grid (" + row + " < 0)");
			return null;
		}
		if(column < 0) {
			$global.console.warn("looks like the column is outside the grid (" + column + " < 0)");
			return null;
		}
		return this.array[Math.round(row * this.numHor + column)];
	}
	,reset: function() {
		this.array = [];
	}
	,calculate: function() {
		if(this._isDebug) {
			$global.console.log("" + this.toString() + " calculate()");
		}
		if(this._isCellSize && !this._isDimension) {
			if(this._isDebug) {
				$global.console.info("" + this.toString() + " solution #1: cellSize is set");
			}
			this.numHor = Math.floor(Global.w / this.cellWidth);
			this.numVer = Math.floor(Global.h / this.cellHeight);
			this.width = this.numHor * this.cellWidth;
			this.height = this.numVer * this.cellHeight;
			this.x = (Global.w - this.width) / 2;
			this.y = (Global.h - this.height) / 2;
		}
		if(this._isNumbered && !this._isDimension) {
			if(this._isDebug) {
				$global.console.info("" + this.toString() + " solution #2: numbered cells set");
			}
			var _w = this.width != null ? this.width : Global.w;
			var _h = this.height != null ? this.height : Global.h;
			this.cellWidth = _w / this.numHor;
			this.cellHeight = _h / this.numVer;
			this.width = this.numHor * this.cellWidth;
			this.height = this.numVer * this.cellHeight;
			this.x = (Global.w - this.width) / 2;
			this.y = (Global.h - this.height) / 2;
			$global.console.info("cellWidth: " + this.cellWidth + ", cellHeight: " + this.cellHeight + ", width: " + this.width + ", height: " + this.height + ", x: " + this.x + ", y: " + this.y);
		}
		if(this._isDimension && !this._isNumbered && !this._isCellSize) {
			if(this._isDebug) {
				$global.console.info("" + this.toString() + " solution #3: width/height set (" + this.width + ", " + this.height + ")");
			}
			var _cellWidth = this.cellWidth != null ? this.cellWidth : 50;
			var _cellHeight = this.cellHeight != null ? this.cellHeight : 50;
			this.numHor = Math.floor(this.width / _cellWidth);
			this.numVer = Math.floor(this.height / _cellHeight);
			this.width = this.numHor * _cellWidth;
			this.height = this.numVer * _cellHeight;
			this.cellWidth = this.width / this.numHor;
			this.cellHeight = this.height / this.numVer;
			this.x = (Global.w - this.width) / 2;
			this.y = (Global.h - this.height) / 2;
		}
		if(this._isDimension && !this._isCellSize) {
			if(this._isDebug) {
				$global.console.info("" + this.toString() + " solution #3a: width/height set (" + this.width + ", " + this.height + ") AND number row/cols (" + this.numHor + ", " + this.numVer + ")");
			}
			this.cellWidth = Math.floor(this.width / this.numHor);
			this.cellHeight = Math.floor(this.height / this.numVer);
			this.width = this.numHor * this.cellWidth;
			this.height = this.numVer * this.cellHeight;
			if(!this._isPosition) {
				this.x = (Global.w - this.width) / 2;
				this.y = (Global.h - this.height) / 2;
			}
		}
		if(this._isDimension && this._isNumbered && !this._isCellSize) {
			if(this._isDebug) {
				$global.console.info("" + this.toString() + " solution #3b: w/h set (" + this.width + ", " + this.height + ") AND number row/cols (" + this.numHor + ", " + this.numVer + ")");
				$global.console.info("" + this.toString() + "  (" + Global.w + ", " + Global.h + ")");
			}
			this.cellWidth = Math.floor(this.width / this.numHor);
			this.cellHeight = Math.floor(this.height / this.numVer);
			this.width = this.numHor * this.cellWidth;
			this.height = this.numVer * this.cellHeight;
		}
		if(this._isCellSize && this._isDimension) {
			if(this._isDebug) {
				$global.console.info("" + this.toString() + " solution #4: cellSize is set and width/height");
			}
			this.numHor = Math.floor(this.width / this.cellWidth);
			this.numVer = Math.floor(this.height / this.cellHeight);
			this.width = this.numHor * this.cellWidth;
			this.height = this.numVer * this.cellHeight;
			if(!this._isPosition) {
				this.x = (Global.w - this.width) / 2;
				this.y = (Global.h - this.height) / 2;
			}
		}
		if(this.isFullscreen && this._isCellSize) {
			if(this._isDebug) {
				$global.console.info("" + this.toString() + " solution #5: fullscreen and cellSize is set");
			}
			this.width = Global.w;
			this.height = Global.h;
			this.numHor = Math.ceil(this.width / this.cellWidth);
			this.numVer = Math.ceil(this.height / this.cellHeight);
			this.width = this.numHor * this.cellWidth;
			this.height = this.numVer * this.cellHeight;
			this.x = (Global.w - this.width) / 2;
			this.y = (Global.h - this.height) / 2;
		}
		var cx = 0.0;
		var cy = 0.0;
		if(this.isCentered) {
			cx = this.cellWidth / 2;
			cy = this.cellHeight / 2;
		}
		this.array = [];
		var total = Math.round(this.numHor * this.numVer);
		var xpos = 0;
		var ypos = 0;
		var _g = 0;
		var _g1 = total;
		while(_g < _g1) {
			var i = _g++;
			var point = { x : Math.round(this.x + xpos * this.cellWidth + cx), y : Math.round(this.y + ypos * this.cellHeight + cy)};
			this.array.push(point);
			++xpos;
			if(xpos >= this.numHor) {
				xpos = 0;
				++ypos;
			}
		}
		total = this.array.length;
		if(this._isDebug) {
			$global.console.groupCollapsed("" + this.toString() + " Sata");
			$global.console.log("x: " + this.x + ", y: " + this.y + ", width: " + this.width + ", height: " + this.height + ", cellWidth: " + this.cellWidth + ", cellHeight: " + this.cellHeight + ", numHor: " + this.numHor + ", numVer: " + this.numVer + ", array: " + this.array.length);
			$global.console.table(this.array);
			$global.console.groupEnd();
		}
		this.totalRow = Math.round(this.numVer);
		this.totalColumn = Math.round(this.numHor);
	}
	,toString: function() {
		return "[GridUtil]";
	}
	,__class__: cc_util_GridUtil
};
var cc_util_MathUtil = function() { };
$hxClasses["cc.util.MathUtil"] = cc_util_MathUtil;
cc_util_MathUtil.__name__ = "cc.util.MathUtil";
cc_util_MathUtil.radians = function(deg) {
	return deg * Math.PI / 180;
};
cc_util_MathUtil.degrees = function(rad) {
	return rad * 180 / Math.PI;
};
cc_util_MathUtil.degreesToPoint = function(deg,diameter) {
	var rad = Math.PI * deg / 180;
	var r = diameter / 2;
	return { x : r * Math.cos(rad), y : r * Math.sin(rad)};
};
cc_util_MathUtil.distributeAngles = function(me,total) {
	return me / total * 360;
};
cc_util_MathUtil.distance = function(x1,y1,x2,y2) {
	return cc_util_MathUtil.dist(x1,y1,x2,y2);
};
cc_util_MathUtil.dist = function(x1,y1,x2,y2) {
	x2 -= x1;
	y2 -= y1;
	return Math.sqrt(x2 * x2 + y2 * y2);
};
cc_util_MathUtil.pythagoreanTheorem = function(a,b,c) {
	if(a == null && b == null && c == null) {
		haxe_Log.trace("Really? Perhaps you should use some data",{ fileName : "src/cc/util/MathUtil.hx", lineNumber : 104, className : "cc.util.MathUtil", methodName : "pythagoreanTheorem"});
		return 0;
	}
	var value = 0.0;
	if(c == null || c == 0) {
		value = Math.sqrt(a * a + b * b);
	}
	if(a == null || a == 0) {
		value = Math.sqrt(c * c - b * b);
	}
	if(b == null || b == 0) {
		value = Math.sqrt(c * c - a * a);
	}
	return value;
};
cc_util_MathUtil.circumferenceCircle = function(radius) {
	return Math.PI * radius * 2;
};
cc_util_MathUtil.circumference2RadiusCircle = function(circumference) {
	return circumference / (Math.PI * 2);
};
cc_util_MathUtil.areaCircle = function(radius) {
	return Math.PI * Math.sqrt(radius);
};
cc_util_MathUtil.randomInteger = function(min,max) {
	if(max == null) {
		max = min;
		min = 0;
	}
	return Math.floor(Math.random() * (max + 1 - min)) + min;
};
cc_util_MathUtil.randomInt = function(min,max) {
	return cc_util_MathUtil.randomInteger(min,max);
};
cc_util_MathUtil.random = function(min,max) {
	if(min == null) {
		min = 0;
		max = 1;
	} else if(max == null) {
		max = min;
		min = 0;
	}
	return Math.random() * (max - min) + min;
};
cc_util_MathUtil.randomP = function(min,max) {
	if(min == null) {
		min = 0.1;
		max = 1;
	} else if(max == null) {
		max = min;
		min = 0.1;
	}
	return Math.random() * (max - min) + min;
};
cc_util_MathUtil.chance = function(value) {
	if(value > 1) {
		value /= 100;
	}
	return Math.random() < value;
};
cc_util_MathUtil.posNeg = function() {
	return cc_util_MathUtil.randomInt(0,1) * 2 - 1;
};
cc_util_MathUtil.flip = function() {
	return Math.random() < 0.5;
};
cc_util_MathUtil.angle = function(cx,cy,ex,ey) {
	var dy = ey - cy;
	var dx = ex - cx;
	var theta = Math.atan2(dy,dx);
	theta *= 180 / Math.PI;
	if(theta < 0) {
		theta = 360 + theta;
	}
	if(theta == 360) {
		theta = 0;
	}
	return theta;
};
cc_util_MathUtil.map = function(value,min1,max1,min2,max2,clampResult) {
	var returnvalue = (value - min1) / (max1 - min1) * (max2 - min2) + min2;
	if(clampResult) {
		return cc_util_MathUtil.clamp(returnvalue,min2,max2);
	} else {
		return returnvalue;
	}
};
cc_util_MathUtil.orbit = function(xpos,ypos,angle,radius) {
	var _xpos = xpos + Math.cos(cc_util_MathUtil.radians(angle)) * radius;
	var _ypos = ypos + Math.sin(cc_util_MathUtil.radians(angle)) * radius;
	return { x : _xpos, y : _ypos};
};
cc_util_MathUtil.orbitX = function(origin,angle,radius) {
	return origin + Math.cos(cc_util_MathUtil.radians(angle)) * radius;
};
cc_util_MathUtil.orbitY = function(origin,angle,radius) {
	return origin + Math.sin(cc_util_MathUtil.radians(angle)) * radius;
};
cc_util_MathUtil.orbitZ = function(origin,angle,radius) {
	return origin + Math.cos(cc_util_MathUtil.radians(angle)) * radius;
};
cc_util_MathUtil.shuffle = function(array) {
	var currentIndex = array.length;
	var temporaryValue;
	var randomIndex;
	while(0 != currentIndex) {
		randomIndex = Math.floor(Math.random() * currentIndex);
		--currentIndex;
		temporaryValue = array[currentIndex];
		array[currentIndex] = array[randomIndex];
		array[randomIndex] = temporaryValue;
	}
	return array;
};
cc_util_MathUtil.clamp = function(value,min,max) {
	return Math.min(Math.max(value,Math.min(min,max)),Math.max(min,max));
};
var cc_util_ShapeUtil = function() { };
$hxClasses["cc.util.ShapeUtil"] = cc_util_ShapeUtil;
cc_util_ShapeUtil.__name__ = "cc.util.ShapeUtil";
cc_util_ShapeUtil.cross = function(ctx,x,y,width,height) {
	if(height == null) {
		height = 60;
	}
	if(width == null) {
		width = 20;
	}
	cc_CanvasTools.colour(ctx,cc_util_ColorUtil.PINK.r,cc_util_ColorUtil.PINK.g,cc_util_ColorUtil.PINK.b,1);
	ctx.fillRect(x - width / 2,y - height / 2,width,height);
	ctx.fillRect(x - height / 2,y - width / 2,height,width);
};
cc_util_ShapeUtil.registerPoint = function(ctx,x,y) {
	var _w = 10;
	var _h = 10;
	var _d = 2;
	cc_CanvasTools.colour(ctx,cc_util_ColorUtil.PINK.r,cc_util_ColorUtil.PINK.g,cc_util_ColorUtil.PINK.b,1);
	ctx.fillRect(x - _w / 2,y - _d / 2,_w,_d);
	ctx.fillRect(x - _d / 2,y - _h / 2,_d,_h);
};
cc_util_ShapeUtil.colorRegisterPoint = function(ctx,x,y,rgb) {
	if(rgb == null) {
		rgb = cc_util_ColorUtil.PINK;
	}
	var _w = 10;
	var _h = 10;
	var _d = 2;
	cc_CanvasTools.colourRGB(ctx,rgb,1);
	ctx.fillRect(x - _w / 2,y - _d / 2,_w,_d);
	ctx.fillRect(x - _d / 2,y - _h / 2,_d,_h);
};
cc_util_ShapeUtil.xcross = function(ctx,x,y,size,weight) {
	if(weight == null) {
		weight = 100;
	}
	if(size == null) {
		size = 200;
	}
	cc_CanvasTools.strokeWeight(ctx,weight);
	cc_CanvasTools.line(ctx,x - size / 2,y - size / 2,x - size / 2 + size,y - size / 2 + size);
	cc_CanvasTools.line(ctx,x + size - size / 2,y - size / 2,x - size / 2,y + size - size / 2);
};
cc_util_ShapeUtil.gridRegister = function(ctx,arr) {
	var _g = 0;
	var _g1 = arr.length;
	while(_g < _g1) {
		var i = _g++;
		var point = arr[i];
		cc_util_ShapeUtil.registerPoint(ctx,point.x,point.y);
	}
};
cc_util_ShapeUtil.gridRegisters = function(ctx,grid) {
	var _g = 0;
	var _g1 = grid.array.length;
	while(_g < _g1) {
		var i = _g++;
		var point = grid.array[i];
		cc_util_ShapeUtil.cross(ctx,point.x,point.y,5,20);
	}
};
cc_util_ShapeUtil.gridField = function(ctx,grid) {
	var _g = 0;
	var _g1 = grid.array.length;
	while(_g < _g1) {
		var i = _g++;
		var point = grid.array[i];
		cc_util_ShapeUtil.registerPoint(ctx,point.x,point.y);
	}
	ctx.lineWidth = 1;
	cc_CanvasTools.lineColour(ctx,cc_util_ColorUtil.GRAY.r,cc_util_ColorUtil.GRAY.g,cc_util_ColorUtil.GRAY.b,0.5);
	ctx.strokeRect(grid.x,grid.y,grid.width,grid.height);
};
cc_util_ShapeUtil.gridDots = function(ctx,grid) {
	var _g = 0;
	var _g1 = grid.array.length;
	while(_g < _g1) {
		var i = _g++;
		var point = grid.array[i];
		cc_CanvasTools.colour(ctx,cc_util_ColorUtil.PINK.r,cc_util_ColorUtil.PINK.g,cc_util_ColorUtil.PINK.b,1);
		cc_CanvasTools.circle(ctx,point.x,point.y,1);
	}
	ctx.lineWidth = 1;
	cc_CanvasTools.lineColour(ctx,cc_util_ColorUtil.GRAY.r,cc_util_ColorUtil.GRAY.g,cc_util_ColorUtil.GRAY.b,0.5);
	ctx.strokeRect(grid.x,grid.y,grid.width,grid.height);
};
var cc_util_TextUtil = function() {
};
$hxClasses["cc.util.TextUtil"] = cc_util_TextUtil;
cc_util_TextUtil.__name__ = "cc.util.TextUtil";
cc_util_TextUtil.getLines = function(ctx,text,maxWidth) {
	text = StringTools.replace(StringTools.replace(text,"\n"," \n "),"  "," ");
	var words = text.split(" ");
	var lines = [];
	var currentLine = words[0];
	var _g = 1;
	var _g1 = words.length;
	while(_g < _g1) {
		var i = _g++;
		var word = words[i];
		if(word == "\n") {
			lines.push(StringTools.trim(currentLine));
			currentLine = "";
			continue;
		}
		var width = ctx.measureText(currentLine + " " + word).width;
		if(width < maxWidth) {
			currentLine += " " + word;
		} else {
			lines.push(StringTools.trim(currentLine));
			if(word == " ") {
				currentLine = "";
			} else {
				currentLine = word;
			}
		}
	}
	lines.push(StringTools.trim(currentLine));
	return lines;
};
cc_util_TextUtil.drawTextAlongArc = function(ctx,str,centerX,centerY,radius,angle) {
	var charArr = str.split("");
	ctx.save();
	ctx.translate(centerX,centerY);
	ctx.rotate(-1 * angle / 2);
	ctx.rotate(-1 * (angle / charArr.length) / 2);
	var _g = 0;
	var _g1 = charArr.length;
	while(_g < _g1) {
		var i = _g++;
		var _char = charArr[i];
		ctx.rotate(angle / charArr.length);
		ctx.save();
		ctx.translate(0,-1 * radius);
		ctx.fillText(_char,0,0);
		ctx.restore();
	}
	ctx.restore();
};
cc_util_TextUtil.drawTextAlongArc4 = function(ctx,str,centerX,centerY,radius,startDegree) {
	if(startDegree == null) {
		startDegree = -90;
	}
	var monoW = ctx.measureText(" ").width;
	var charArr = str.split("");
	ctx.save();
	var angle = 0.0;
	var _g = 0;
	var _g1 = charArr.length;
	while(_g < _g1) {
		var i = _g++;
		radius -= 0.15 + i * 0.0005;
		var a = monoW;
		var b = radius;
		var c = radius;
		var cosa = (Math.pow(b,2) + Math.pow(c,2) - Math.pow(a,2)) / (2 * b * c);
		var pAngle = cc_util_MathUtil.degrees(Math.acos(cosa));
		var _char = charArr[i];
		angle = startDegree + i * pAngle;
		var xpos = centerX + Math.cos(cc_util_MathUtil.radians(angle)) * radius;
		var ypos = centerY + Math.sin(cc_util_MathUtil.radians(angle)) * radius;
		ctx.save();
		ctx.translate(xpos,ypos);
		ctx.rotate(cc_util_MathUtil.radians(angle + 90));
		ctx.fillText(_char,0,0);
		ctx.restore();
	}
	ctx.restore();
};
cc_util_TextUtil.drawTextAlongArc3 = function(ctx,str,centerX,centerY,radius) {
	var charArr = str.split("");
	ctx.save();
	var angle = 0;
	var _g = 0;
	var _g1 = charArr.length;
	while(_g < _g1) {
		var i = _g++;
		var _char = charArr[i];
		angle = i;
		var xpos = centerX + Math.cos(cc_util_MathUtil.radians(angle)) * radius;
		var ypos = centerY + Math.sin(cc_util_MathUtil.radians(angle)) * radius;
		haxe_Log.trace(_char,{ fileName : "src/cc/util/TextUtil.hx", lineNumber : 154, className : "cc.util.TextUtil", methodName : "drawTextAlongArc3", customParams : [i,xpos,ypos]});
		ctx.translate(xpos,ypos);
		ctx.rotate(angle / charArr.length);
		ctx.fillText(_char,0,0);
		ctx.restore();
	}
	ctx.restore();
};
cc_util_TextUtil.drawTextAlongArc2 = function(ctx,str,centerX,centerY,radius) {
	var charArr = str.split("");
	var width = ctx.measureText(" ").width;
	ctx.save();
	ctx.translate(centerX,centerY);
	var _angle = 1.0;
	var _g = 0;
	var _g1 = charArr.length;
	while(_g < _g1) {
		var i = _g++;
		var _char = charArr[i];
		var _rotation = cc_util_MathUtil.radians(_angle);
		ctx.rotate(_angle * Math.PI / 360);
		haxe_Log.trace("" + i + " // _char = " + _char + " : _angle: " + _angle + " - _rotation: " + _rotation,{ fileName : "src/cc/util/TextUtil.hx", lineNumber : 194, className : "cc.util.TextUtil", methodName : "drawTextAlongArc2"});
		ctx.save();
		ctx.translate(0,-1 * radius);
		ctx.fillText(_char,0,0);
		ctx.restore();
		_angle += 0.5;
	}
	ctx.restore();
};
cc_util_TextUtil.prototype = {
	__class__: cc_util_TextUtil
};
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = "haxe.IMap";
var haxe_Exception = function(message,previous,native) {
	Error.call(this,message);
	this.message = message;
	this.__previousException = previous;
	this.__nativeException = native != null ? native : this;
};
$hxClasses["haxe.Exception"] = haxe_Exception;
haxe_Exception.__name__ = "haxe.Exception";
haxe_Exception.caught = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value;
	} else if(((value) instanceof Error)) {
		return new haxe_Exception(value.message,null,value);
	} else {
		return new haxe_ValueException(value,null,value);
	}
};
haxe_Exception.thrown = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value.get_native();
	} else if(((value) instanceof Error)) {
		return value;
	} else {
		var e = new haxe_ValueException(value);
		return e;
	}
};
haxe_Exception.__super__ = Error;
haxe_Exception.prototype = $extend(Error.prototype,{
	unwrap: function() {
		return this.__nativeException;
	}
	,get_native: function() {
		return this.__nativeException;
	}
	,__class__: haxe_Exception
	,__properties__: {get_native:"get_native"}
});
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = "haxe.Log";
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			str += ", " + Std.string(v);
		}
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
$hxClasses["haxe.Timer"] = haxe_Timer;
haxe_Timer.__name__ = "haxe.Timer";
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe_ValueException = function(value,previous,native) {
	haxe_Exception.call(this,String(value),previous,native);
	this.value = value;
};
$hxClasses["haxe.ValueException"] = haxe_ValueException;
haxe_ValueException.__name__ = "haxe.ValueException";
haxe_ValueException.__super__ = haxe_Exception;
haxe_ValueException.prototype = $extend(haxe_Exception.prototype,{
	unwrap: function() {
		return this.value;
	}
	,__class__: haxe_ValueException
});
var haxe_ds_StringMap = function() {
	this.h = Object.create(null);
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = "haxe.ds.StringMap";
haxe_ds_StringMap.prototype = {
	__class__: haxe_ds_StringMap
};
var haxe_http_HttpBase = function(url) {
	this.url = url;
	this.headers = [];
	this.params = [];
	this.emptyOnData = $bind(this,this.onData);
};
$hxClasses["haxe.http.HttpBase"] = haxe_http_HttpBase;
haxe_http_HttpBase.__name__ = "haxe.http.HttpBase";
haxe_http_HttpBase.prototype = {
	onData: function(data) {
	}
	,onBytes: function(data) {
	}
	,onError: function(msg) {
	}
	,onStatus: function(status) {
	}
	,hasOnData: function() {
		return $bind(this,this.onData) != this.emptyOnData;
	}
	,success: function(data) {
		this.responseBytes = data;
		this.responseAsString = null;
		if(this.hasOnData()) {
			this.onData(this.get_responseData());
		}
		this.onBytes(this.responseBytes);
	}
	,get_responseData: function() {
		if(this.responseAsString == null && this.responseBytes != null) {
			this.responseAsString = this.responseBytes.getString(0,this.responseBytes.length,haxe_io_Encoding.UTF8);
		}
		return this.responseAsString;
	}
	,__class__: haxe_http_HttpBase
	,__properties__: {get_responseData:"get_responseData"}
};
var haxe_http_HttpJs = function(url) {
	this.async = true;
	this.withCredentials = false;
	haxe_http_HttpBase.call(this,url);
};
$hxClasses["haxe.http.HttpJs"] = haxe_http_HttpJs;
haxe_http_HttpJs.__name__ = "haxe.http.HttpJs";
haxe_http_HttpJs.__super__ = haxe_http_HttpBase;
haxe_http_HttpJs.prototype = $extend(haxe_http_HttpBase.prototype,{
	request: function(post) {
		var _gthis = this;
		this.responseAsString = null;
		this.responseBytes = null;
		this.responseHeaders = null;
		var r = this.req = js_Browser.createXMLHttpRequest();
		var onreadystatechange = function(_) {
			if(r.readyState != 4) {
				return;
			}
			var s;
			try {
				s = r.status;
			} catch( _g ) {
				s = null;
			}
			if(s == 0 && js_Browser.get_supported() && $global.location != null) {
				var protocol = $global.location.protocol.toLowerCase();
				var rlocalProtocol = new EReg("^(?:about|app|app-storage|.+-extension|file|res|widget):$","");
				var isLocal = rlocalProtocol.match(protocol);
				if(isLocal) {
					s = r.response != null ? 200 : 404;
				}
			}
			if(s == undefined) {
				s = null;
			}
			if(s != null) {
				_gthis.onStatus(s);
			}
			if(s != null && s >= 200 && s < 400) {
				_gthis.req = null;
				var headers = r.getAllResponseHeaders().split("\r\n");
				var _g = [];
				var _g1 = 0;
				var _g2 = headers;
				while(_g1 < _g2.length) {
					var v = _g2[_g1];
					++_g1;
					if(v != "") {
						_g.push(v);
					}
				}
				headers = _g;
				var onreadystatechange = new haxe_ds_StringMap();
				_gthis.responseHeaders = onreadystatechange;
				var _g = 0;
				while(_g < headers.length) {
					var hline = headers[_g];
					++_g;
					var a = hline.split(": ");
					var hname = a.shift();
					var hval = a.length == 1 ? a[0] : a.join(": ");
					hval = StringTools.ltrim(StringTools.rtrim(hval));
					_gthis.responseHeaders.h[hname] = hval;
				}
				_gthis.success(haxe_io_Bytes.ofData(r.response));
			} else if(s == null || s == 0 && r.response == null) {
				_gthis.req = null;
				_gthis.onError("Failed to connect or resolve host");
			} else if(s == null) {
				_gthis.req = null;
				var onreadystatechange = r.response != null ? haxe_io_Bytes.ofData(r.response) : null;
				_gthis.responseBytes = onreadystatechange;
				_gthis.onError("Http Error #" + r.status);
			} else {
				switch(s) {
				case 12007:
					_gthis.req = null;
					_gthis.onError("Unknown host");
					break;
				case 12029:
					_gthis.req = null;
					_gthis.onError("Failed to connect to host");
					break;
				default:
					_gthis.req = null;
					var onreadystatechange = r.response != null ? haxe_io_Bytes.ofData(r.response) : null;
					_gthis.responseBytes = onreadystatechange;
					_gthis.onError("Http Error #" + r.status);
				}
			}
		};
		if(this.async) {
			r.onreadystatechange = onreadystatechange;
		}
		var uri;
		var _g = this.postData;
		var _g1 = this.postBytes;
		if(_g == null) {
			if(_g1 == null) {
				uri = null;
			} else {
				var bytes = _g1;
				uri = new Blob([bytes.b.bufferValue]);
			}
		} else if(_g1 == null) {
			var str = _g;
			uri = str;
		} else {
			uri = null;
		}
		if(uri != null) {
			post = true;
		} else {
			var _g = 0;
			var _g1 = this.params;
			while(_g < _g1.length) {
				var p = _g1[_g];
				++_g;
				if(uri == null) {
					uri = "";
				} else {
					uri = (uri == null ? "null" : Std.string(uri)) + "&";
				}
				var s = p.name;
				var uri1 = (uri == null ? "null" : Std.string(uri)) + encodeURIComponent(s) + "=";
				var s1 = p.value;
				uri = uri1 + encodeURIComponent(s1);
			}
		}
		try {
			if(post) {
				r.open("POST",this.url,this.async);
			} else if(uri != null) {
				var question = this.url.split("?").length <= 1;
				r.open("GET",this.url + (question ? "?" : "&") + (uri == null ? "null" : Std.string(uri)),this.async);
				uri = null;
			} else {
				r.open("GET",this.url,this.async);
			}
			r.responseType = "arraybuffer";
		} catch( _g ) {
			var e = haxe_Exception.caught(_g).unwrap();
			this.req = null;
			this.onError(e.toString());
			return;
		}
		r.withCredentials = this.withCredentials;
		if(!Lambda.exists(this.headers,function(h) {
			return h.name == "Content-Type";
		}) && post && this.postData == null) {
			r.setRequestHeader("Content-Type","application/x-www-form-urlencoded");
		}
		var _g = 0;
		var _g1 = this.headers;
		while(_g < _g1.length) {
			var h = _g1[_g];
			++_g;
			r.setRequestHeader(h.name,h.value);
		}
		r.send(uri);
		if(!this.async) {
			onreadystatechange(null);
		}
	}
	,__class__: haxe_http_HttpJs
});
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = "haxe.io.Bytes";
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) {
		return hb;
	}
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.prototype = {
	getString: function(pos,len,encoding) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(encoding == null) {
			encoding = haxe_io_Encoding.UTF8;
		}
		var s = "";
		var b = this.b;
		var i = pos;
		var max = pos + len;
		switch(encoding._hx_index) {
		case 0:
			var debug = pos > 0;
			while(i < max) {
				var c = b[i++];
				if(c < 128) {
					if(c == 0) {
						break;
					}
					s += String.fromCodePoint(c);
				} else if(c < 224) {
					var code = (c & 63) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code);
				} else if(c < 240) {
					var c2 = b[i++];
					var code1 = (c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code1);
				} else {
					var c21 = b[i++];
					var c3 = b[i++];
					var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(u);
				}
			}
			break;
		case 1:
			while(i < max) {
				var c = b[i++] | b[i++] << 8;
				s += String.fromCodePoint(c);
			}
			break;
		}
		return s;
	}
	,__class__: haxe_io_Bytes
};
var haxe_io_Encoding = $hxEnums["haxe.io.Encoding"] = { __ename__:true,__constructs__:null
	,UTF8: {_hx_name:"UTF8",_hx_index:0,__enum__:"haxe.io.Encoding",toString:$estr}
	,RawNative: {_hx_name:"RawNative",_hx_index:1,__enum__:"haxe.io.Encoding",toString:$estr}
};
haxe_io_Encoding.__constructs__ = [haxe_io_Encoding.UTF8,haxe_io_Encoding.RawNative];
var haxe_io_Error = $hxEnums["haxe.io.Error"] = { __ename__:true,__constructs__:null
	,Blocked: {_hx_name:"Blocked",_hx_index:0,__enum__:"haxe.io.Error",toString:$estr}
	,Overflow: {_hx_name:"Overflow",_hx_index:1,__enum__:"haxe.io.Error",toString:$estr}
	,OutsideBounds: {_hx_name:"OutsideBounds",_hx_index:2,__enum__:"haxe.io.Error",toString:$estr}
	,Custom: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"haxe.io.Error",toString:$estr}; },$_._hx_name="Custom",$_.__params__ = ["e"],$_)
};
haxe_io_Error.__constructs__ = [haxe_io_Error.Blocked,haxe_io_Error.Overflow,haxe_io_Error.OutsideBounds,haxe_io_Error.Custom];
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
$hxClasses["haxe.iterators.ArrayIterator"] = haxe_iterators_ArrayIterator;
haxe_iterators_ArrayIterator.__name__ = "haxe.iterators.ArrayIterator";
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
	,__class__: haxe_iterators_ArrayIterator
};
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = "js.Boot";
js_Boot.getClass = function(o) {
	if(o == null) {
		return null;
	} else if(((o) instanceof Array)) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var con = e.__constructs__[o._hx_index];
			var n = con._hx_name;
			if(con.__params__) {
				s = s + "\t";
				return n + "(" + ((function($this) {
					var $r;
					var _g = [];
					{
						var _g1 = 0;
						var _g2 = con.__params__;
						while(true) {
							if(!(_g1 < _g2.length)) {
								break;
							}
							var p = _g2[_g1];
							_g1 = _g1 + 1;
							_g.push(js_Boot.__string_rec(o[p],s));
						}
					}
					$r = _g;
					return $r;
				}(this))).join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_Browser = function() { };
$hxClasses["js.Browser"] = js_Browser;
js_Browser.__name__ = "js.Browser";
js_Browser.__properties__ = {get_supported:"get_supported"};
js_Browser.get_supported = function() {
	if(typeof(window) != "undefined" && typeof(window.location) != "undefined") {
		return typeof(window.location.protocol) == "string";
	} else {
		return false;
	}
};
js_Browser.createXMLHttpRequest = function() {
	if(typeof XMLHttpRequest != "undefined") {
		return new XMLHttpRequest();
	}
	if(typeof ActiveXObject != "undefined") {
		return new ActiveXObject("Microsoft.XMLHTTP");
	}
	throw haxe_Exception.thrown("Unable to create XMLHttpRequest object.");
};
function $getIterator(o) { if( o instanceof Array ) return new haxe_iterators_ArrayIterator(o); else return o.iterator(); }
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
if(typeof(performance) != "undefined" ? typeof(performance.now) == "function" : false) {
	HxOverrides.now = performance.now.bind(performance);
}
$hxClasses["Math"] = Math;
if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }
Object.defineProperty(String.prototype,"__class__",{ value : $hxClasses["String"] = String, enumerable : false, writable : true});
String.__name__ = "String";
$hxClasses["Array"] = Array;
Array.__name__ = "Array";
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = "Date";
js_Boot.__toStr = ({ }).toString;
Sketch.option = new SketchOption();
Global.MOUSE_DOWN = "mousedown";
Global.MOUSE_UP = "mouseup";
Global.MOUSE_MOVE = "mousemove";
Global.KEY_DOWN = "keydown";
Global.KEY_UP = "keyup";
Global.RESIZE = "resize";
Global.mousePressed = 0;
Global.mouseReleased = 0;
Global.isFullscreen = false;
Global.TWO_PI = Math.PI * 2;
cc_lets_Go._tweens = [];
cc_model_constants_App.NAME = "[cc-sketch]";
cc_model_constants_App.PORT = "5000";
cc_model_constants_App.BUILD = "xxx";
cc_tool_export_ExportNames.SEND = "send";
cc_tool_export_ExportNames.MESSAGE = "message";
cc_tool_export_ExportNames.IMAGE = "image";
cc_tool_export_ExportNames.SEQUENCE = "sequence";
cc_tool_export_ExportNames.SEQUENCE_NEXT = "sequence_next";
cc_tool_export_ExportNames.COMBINE = "combine";
cc_tool_export_ExportNames.MARKDOWN = "md";
cc_tool_export_ExportNames.CHECKIN = "checkin";
cc_tool_export_ExportNames.SERVER_CHECKIN = "server-checkin";
cc_tool_export_ExportNames.RENDER_CLEAR = "render-clear";
cc_tool_export_ExportNames.RENDER_CLEAR_DONE = "render-clear-done";
cc_tool_export_ExportNames.RENDER_FRAME = "render-frame";
cc_tool_export_ExportNames.RENDER_DONE = "render-done";
cc_tool_export_ExportNames.TEST = "test";
cc_tool_export_ExportZip.isZipLoaded = false;
cc_tool_export_ExportZip.isFileLoaded = false;
cc_util_ColorUtil.NAVY = { r : Math.round(0), g : Math.round(31), b : Math.round(63)};
cc_util_ColorUtil.BLUE = { r : Math.round(0), g : Math.round(116), b : Math.round(217)};
cc_util_ColorUtil.AQUA = { r : Math.round(127), g : Math.round(219), b : Math.round(255)};
cc_util_ColorUtil.TEAL = { r : Math.round(57), g : Math.round(204), b : Math.round(204)};
cc_util_ColorUtil.OLIVE = { r : Math.round(61), g : Math.round(153), b : Math.round(112)};
cc_util_ColorUtil.GREEN = { r : Math.round(46), g : Math.round(204), b : Math.round(64)};
cc_util_ColorUtil.LIME = { r : Math.round(1), g : Math.round(255), b : Math.round(112)};
cc_util_ColorUtil.YELLOW = { r : Math.round(255), g : Math.round(220), b : Math.round(0)};
cc_util_ColorUtil.ORANGE = { r : Math.round(255), g : Math.round(133), b : Math.round(27)};
cc_util_ColorUtil.RED = { r : Math.round(255), g : Math.round(65), b : Math.round(54)};
cc_util_ColorUtil.MAROON = { r : Math.round(133), g : Math.round(20), b : Math.round(75)};
cc_util_ColorUtil.FUCHSIA = { r : Math.round(240), g : Math.round(18), b : Math.round(190)};
cc_util_ColorUtil.PURPLE = { r : Math.round(177), g : Math.round(13), b : Math.round(201)};
cc_util_ColorUtil.BLACK = { r : Math.round(17), g : Math.round(17), b : Math.round(17)};
cc_util_ColorUtil.GRAY = { r : Math.round(170), g : Math.round(170), b : Math.round(170)};
cc_util_ColorUtil.SILVER = { r : Math.round(221), g : Math.round(221), b : Math.round(221)};
cc_util_ColorUtil.WHITE = { r : Math.round(255), g : Math.round(255), b : Math.round(255)};
cc_util_ColorUtil.PINK = { r : Math.round(255), g : Math.round(20), b : Math.round(147)};
cc_util_ColorUtil.PINK_DEEP = { r : Math.round(255), g : Math.round(20), b : Math.round(147)};
cc_util_ColorUtil.PINK_HOT = { r : Math.round(255), g : Math.round(105), b : Math.round(180)};
cc_util_ColorUtil.niceColor100 = [["#69d2e7","#a7dbd8","#e0e4cc","#f38630","#fa6900"],["#fe4365","#fc9d9a","#f9cdad","#c8c8a9","#83af9b"],["#ecd078","#d95b43","#c02942","#542437","#53777a"],["#556270","#4ecdc4","#c7f464","#ff6b6b","#c44d58"],["#774f38","#e08e79","#f1d4af","#ece5ce","#c5e0dc"],["#e8ddcb","#cdb380","#036564","#033649","#031634"],["#490a3d","#bd1550","#e97f02","#f8ca00","#8a9b0f"],["#594f4f","#547980","#45ada8","#9de0ad","#e5fcc2"],["#00a0b0","#6a4a3c","#cc333f","#eb6841","#edc951"],["#e94e77","#d68189","#c6a49a","#c6e5d9","#f4ead5"],["#3fb8af","#7fc7af","#dad8a7","#ff9e9d","#ff3d7f"],["#d9ceb2","#948c75","#d5ded9","#7a6a53","#99b2b7"],["#ffffff","#cbe86b","#f2e9e1","#1c140d","#cbe86b"],["#efffcd","#dce9be","#555152","#2e2633","#99173c"],["#343838","#005f6b","#008c9e","#00b4cc","#00dffc"],["#413e4a","#73626e","#b38184","#f0b49e","#f7e4be"],["#ff4e50","#fc913a","#f9d423","#ede574","#e1f5c4"],["#99b898","#fecea8","#ff847c","#e84a5f","#2a363b"],["#655643","#80bca3","#f6f7bd","#e6ac27","#bf4d28"],["#00a8c6","#40c0cb","#f9f2e7","#aee239","#8fbe00"],["#351330","#424254","#64908a","#e8caa4","#cc2a41"],["#554236","#f77825","#d3ce3d","#f1efa5","#60b99a"],["#ff9900","#424242","#e9e9e9","#bcbcbc","#3299bb"],["#5d4157","#838689","#a8caba","#cad7b2","#ebe3aa"],["#8c2318","#5e8c6a","#88a65e","#bfb35a","#f2c45a"],["#fad089","#ff9c5b","#f5634a","#ed303c","#3b8183"],["#ff4242","#f4fad2","#d4ee5e","#e1edb9","#f0f2eb"],["#d1e751","#ffffff","#000000","#4dbce9","#26ade4"],["#f8b195","#f67280","#c06c84","#6c5b7b","#355c7d"],["#1b676b","#519548","#88c425","#bef202","#eafde6"],["#bcbdac","#cfbe27","#f27435","#f02475","#3b2d38"],["#5e412f","#fcebb6","#78c0a8","#f07818","#f0a830"],["#452632","#91204d","#e4844a","#e8bf56","#e2f7ce"],["#eee6ab","#c5bc8e","#696758","#45484b","#36393b"],["#f0d8a8","#3d1c00","#86b8b1","#f2d694","#fa2a00"],["#f04155","#ff823a","#f2f26f","#fff7bd","#95cfb7"],["#2a044a","#0b2e59","#0d6759","#7ab317","#a0c55f"],["#bbbb88","#ccc68d","#eedd99","#eec290","#eeaa88"],["#b9d7d9","#668284","#2a2829","#493736","#7b3b3b"],["#b3cc57","#ecf081","#ffbe40","#ef746f","#ab3e5b"],["#a3a948","#edb92e","#f85931","#ce1836","#009989"],["#67917a","#170409","#b8af03","#ccbf82","#e33258"],["#e8d5b7","#0e2430","#fc3a51","#f5b349","#e8d5b9"],["#aab3ab","#c4cbb7","#ebefc9","#eee0b7","#e8caaf"],["#300030","#480048","#601848","#c04848","#f07241"],["#ab526b","#bca297","#c5ceae","#f0e2a4","#f4ebc3"],["#607848","#789048","#c0d860","#f0f0d8","#604848"],["#a8e6ce","#dcedc2","#ffd3b5","#ffaaa6","#ff8c94"],["#3e4147","#fffedf","#dfba69","#5a2e2e","#2a2c31"],["#b6d8c0","#c8d9bf","#dadabd","#ecdbbc","#fedcba"],["#fc354c","#29221f","#13747d","#0abfbc","#fcf7c5"],["#1c2130","#028f76","#b3e099","#ffeaad","#d14334"],["#edebe6","#d6e1c7","#94c7b6","#403b33","#d3643b"],["#cc0c39","#e6781e","#c8cf02","#f8fcc1","#1693a7"],["#dad6ca","#1bb0ce","#4f8699","#6a5e72","#563444"],["#a7c5bd","#e5ddcb","#eb7b59","#cf4647","#524656"],["#fdf1cc","#c6d6b8","#987f69","#e3ad40","#fcd036"],["#5c323e","#a82743","#e15e32","#c0d23e","#e5f04c"],["#230f2b","#f21d41","#ebebbc","#bce3c5","#82b3ae"],["#b9d3b0","#81bda4","#b28774","#f88f79","#f6aa93"],["#3a111c","#574951","#83988e","#bcdea5","#e6f9bc"],["#5e3929","#cd8c52","#b7d1a3","#dee8be","#fcf7d3"],["#1c0113","#6b0103","#a30006","#c21a01","#f03c02"],["#382f32","#ffeaf2","#fcd9e5","#fbc5d8","#f1396d"],["#e3dfba","#c8d6bf","#93ccc6","#6cbdb5","#1a1f1e"],["#000000","#9f111b","#b11623","#292c37","#cccccc"],["#c1b398","#605951","#fbeec2","#61a6ab","#accec0"],["#8dccad","#988864","#fea6a2","#f9d6ac","#ffe9af"],["#f6f6f6","#e8e8e8","#333333","#990100","#b90504"],["#1b325f","#9cc4e4","#e9f2f9","#3a89c9","#f26c4f"],["#5e9fa3","#dcd1b4","#fab87f","#f87e7b","#b05574"],["#951f2b","#f5f4d7","#e0dfb1","#a5a36c","#535233"],["#413d3d","#040004","#c8ff00","#fa023c","#4b000f"],["#eff3cd","#b2d5ba","#61ada0","#248f8d","#605063"],["#2d2d29","#215a6d","#3ca2a2","#92c7a3","#dfece6"],["#cfffdd","#b4dec1","#5c5863","#a85163","#ff1f4c"],["#4e395d","#827085","#8ebe94","#ccfc8e","#dc5b3e"],["#9dc9ac","#fffec7","#f56218","#ff9d2e","#919167"],["#a1dbb2","#fee5ad","#faca66","#f7a541","#f45d4c"],["#ffefd3","#fffee4","#d0ecea","#9fd6d2","#8b7a5e"],["#a8a7a7","#cc527a","#e8175d","#474747","#363636"],["#ffedbf","#f7803c","#f54828","#2e0d23","#f8e4c1"],["#f8edd1","#d88a8a","#474843","#9d9d93","#c5cfc6"],["#f38a8a","#55443d","#a0cab5","#cde9ca","#f1edd0"],["#4e4d4a","#353432","#94ba65","#2790b0","#2b4e72"],["#0ca5b0","#4e3f30","#fefeeb","#f8f4e4","#a5b3aa"],["#a70267","#f10c49","#fb6b41","#f6d86b","#339194"],["#9d7e79","#ccac95","#9a947c","#748b83","#5b756c"],["#edf6ee","#d1c089","#b3204d","#412e28","#151101"],["#046d8b","#309292","#2fb8ac","#93a42a","#ecbe13"],["#4d3b3b","#de6262","#ffb88c","#ffd0b3","#f5e0d3"],["#fffbb7","#a6f6af","#66b6ab","#5b7c8d","#4f2958"],["#ff003c","#ff8a00","#fabe28","#88c100","#00c176"],["#fcfef5","#e9ffe1","#cdcfb7","#d6e6c3","#fafbe3"],["#9cddc8","#bfd8ad","#ddd9ab","#f7af63","#633d2e"],["#30261c","#403831","#36544f","#1f5f61","#0b8185"],["#d1313d","#e5625c","#f9bf76","#8eb2c5","#615375"],["#ffe181","#eee9e5","#fad3b2","#ffba7f","#ff9c97"],["#aaff00","#ffaa00","#ff00aa","#aa00ff","#00aaff"],["#c2412d","#d1aa34","#a7a844","#a46583","#5a1e4a"]];
cc_util_ColorUtil.niceColor100SortedString = [["#E0E4CC","#A7DBD8","#69D2E7","#F38630","#FA6900"],["#F9CDAD","#C8C8A9","#FC9D9A","#83AF9B","#FE4365"],["#ECD078","#D95B43","#53777A","#C02942","#542437"],["#C7F464","#4ECDC4","#FF6B6B","#C44D58","#556270"],["#ECE5CE","#F1D4AF","#C5E0DC","#E08E79","#774F38"],["#E8DDCB","#CDB380","#036564","#033649","#031634"],["#F8CA00","#E97F02","#8A9B0F","#BD1550","#490A3D"],["#E5FCC2","#9DE0AD","#45ADA8","#547980","#594F4F"],["#EDC951","#EB6841","#00A0B0","#CC333F","#6A4A3C"],["#F4EAD5","#C6E5D9","#C6A49A","#D68189","#E94E77"],["#DAD8A7","#FF9E9D","#7FC7AF","#3FB8AF","#FF3D7F"],["#D5DED9","#D9CEB2","#99B2B7","#948C75","#7A6A53"],["#FFFFFF","#F2E9E1","#CBE86B","#CBE86B","#1C140D"],["#EFFFCD","#DCE9BE","#555152","#99173C","#2E2633"],["#00DFFC","#00B4CC","#008C9E","#005F6B","#343838"],["#F7E4BE","#F0B49E","#B38184","#73626E","#413E4A"],["#E1F5C4","#EDE574","#F9D423","#FC913A","#FF4E50"],["#FECEA8","#99B898","#FF847C","#E84A5F","#2A363B"],["#F6F7BD","#E6AC27","#80BCA3","#BF4D28","#655643"],["#F9F2E7","#AEE239","#40C0CB","#8FBE00","#00A8C6"],["#E8CAA4","#64908A","#CC2A41","#424254","#351330"],["#F1EFA5","#D3CE3D","#60B99A","#F77825","#554236"],["#E9E9E9","#BCBCBC","#FF9900","#3299BB","#424242"],["#EBE3AA","#CAD7B2","#A8CABA","#838689","#5D4157"],["#F2C45A","#BFB35A","#88A65E","#5E8C6A","#8C2318"],["#FAD089","#FF9C5B","#F5634A","#3B8183","#ED303C"],["#F4FAD2","#F0F2EB","#E1EDB9","#D4EE5E","#FF4242"],["#FFFFFF","#D1E751","#4DBCE9","#26ADE4","#000000"],["#F8B195","#F67280","#C06C84","#6C5B7B","#355C7D"],["#EAFDE6","#BEF202","#88C425","#519548","#1B676B"],["#BCBDAC","#CFBE27","#F27435","#F02475","#3B2D38"],["#FCEBB6","#F0A830","#78C0A8","#F07818","#5E412F"],["#E2F7CE","#E8BF56","#E4844A","#91204D","#452632"],["#EEE6AB","#C5BC8E","#696758","#45484B","#36393B"],["#F0D8A8","#F2D694","#86B8B1","#FA2A00","#3D1C00"],["#FFF7BD","#F2F26F","#95CFB7","#FF823A","#F04155"],["#A0C55F","#7AB317","#0D6759","#0B2E59","#2A044A"],["#EEDD99","#EEC290","#CCC68D","#EEAA88","#BBBB88"],["#B9D7D9","#668284","#7B3B3B","#493736","#2A2829"],["#ECF081","#FFBE40","#B3CC57","#EF746F","#AB3E5B"],["#EDB92E","#A3A948","#F85931","#009989","#CE1836"],["#CCBF82","#B8AF03","#67917A","#E33258","#170409"],["#E8D5B9","#E8D5B7","#F5B349","#FC3A51","#0E2430"],["#EBEFC9","#EEE0B7","#E8CAAF","#C4CBB7","#AAB3AB"],["#F07241","#C04848","#601848","#480048","#300030"],["#F4EBC3","#F0E2A4","#C5CEAE","#BCA297","#AB526B"],["#F0F0D8","#C0D860","#789048","#607848","#604848"],["#DCEDC2","#FFD3B5","#A8E6CE","#FFAAA6","#FF8C94"],["#FFFEDF","#DFBA69","#3E4147","#5A2E2E","#2A2C31"],["#FEDCBA","#ECDBBC","#DADABD","#C8D9BF","#B6D8C0"],["#FCF7C5","#0ABFBC","#FC354C","#13747D","#29221F"],["#FFEAAD","#B3E099","#D14334","#028F76","#1C2130"],["#EDEBE6","#D6E1C7","#94C7B6","#D3643B","#403B33"],["#F8FCC1","#C8CF02","#E6781E","#1693A7","#CC0C39"],["#DAD6CA","#1BB0CE","#4F8699","#6A5E72","#563444"],["#E5DDCB","#A7C5BD","#EB7B59","#CF4647","#524656"],["#FDF1CC","#C6D6B8","#FCD036","#E3AD40","#987F69"],["#E5F04C","#C0D23E","#E15E32","#A82743","#5C323E"],["#EBEBBC","#BCE3C5","#82B3AE","#F21D41","#230F2B"],["#B9D3B0","#F6AA93","#F88F79","#81BDA4","#B28774"],["#E6F9BC","#BCDEA5","#83988E","#574951","#3A111C"],["#FCF7D3","#DEE8BE","#B7D1A3","#CD8C52","#5E3929"],["#F03C02","#C21A01","#A30006","#6B0103","#1C0113"],["#FFEAF2","#FCD9E5","#FBC5D8","#F1396D","#382F32"],["#E3DFBA","#C8D6BF","#93CCC6","#6CBDB5","#1A1F1E"],["#CCCCCC","#B11623","#9F111B","#292C37","#000000"],["#FBEEC2","#ACCEC0","#C1B398","#61A6AB","#605951"],["#FFE9AF","#F9D6AC","#FEA6A2","#8DCCAD","#988864"],["#F6F6F6","#E8E8E8","#B90504","#333333","#990100"],["#E9F2F9","#9CC4E4","#F26C4F","#3A89C9","#1B325F"],["#DCD1B4","#FAB87F","#F87E7B","#5E9FA3","#B05574"],["#F5F4D7","#E0DFB1","#A5A36C","#535233","#951F2B"],["#C8FF00","#FA023C","#413D3D","#4B000F","#040004"],["#EFF3CD","#B2D5BA","#61ADA0","#248F8D","#605063"],["#DFECE6","#92C7A3","#3CA2A2","#215A6D","#2D2D29"],["#CFFFDD","#B4DEC1","#A85163","#FF1F4C","#5C5863"],["#CCFC8E","#8EBE94","#DC5B3E","#827085","#4E395D"],["#FFFEC7","#9DC9AC","#FF9D2E","#919167","#F56218"],["#FEE5AD","#FACA66","#A1DBB2","#F7A541","#F45D4C"],["#FFFEE4","#FFEFD3","#D0ECEA","#9FD6D2","#8B7A5E"],["#A8A7A7","#CC527A","#E8175D","#474747","#363636"],["#FFEDBF","#F8E4C1","#F7803C","#F54828","#2E0D23"],["#F8EDD1","#C5CFC6","#D88A8A","#9D9D93","#474843"],["#F1EDD0","#CDE9CA","#A0CAB5","#F38A8A","#55443D"],["#94BA65","#2790B0","#4E4D4A","#2B4E72","#353432"],["#FEFEEB","#F8F4E4","#A5B3AA","#0CA5B0","#4E3F30"],["#F6D86B","#FB6B41","#339194","#F10C49","#A70267"],["#CCAC95","#9A947C","#9D7E79","#748B83","#5B756C"],["#EDF6EE","#D1C089","#B3204D","#412E28","#151101"],["#ECBE13","#93A42A","#2FB8AC","#309292","#046D8B"],["#F5E0D3","#FFD0B3","#FFB88C","#DE6262","#4D3B3B"],["#FFFBB7","#A6F6AF","#66B6AB","#5B7C8D","#4F2958"],["#FABE28","#FF8A00","#88C100","#00C176","#FF003C"],["#FCFEF5","#FAFBE3","#E9FFE1","#D6E6C3","#CDCFB7"],["#DDD9AB","#BFD8AD","#9CDDC8","#F7AF63","#633D2E"],["#0B8185","#1F5F61","#36544F","#403831","#30261C"],["#F9BF76","#8EB2C5","#E5625C","#D1313D","#615375"],["#EEE9E5","#FFE181","#FAD3B2","#FFBA7F","#FF9C97"],["#AAFF00","#FFAA00","#00AAFF","#FF00AA","#AA00FF"],["#D1AA34","#A7A844","#A46583","#C2412D","#5A1E4A"],["#F8F3BF","#DCE4F7","#BFCFF7","#75616B","#D34017"]];
cc_util_ColorUtil.niceColor100SortedInt = [[14738636,11000792,6935271,15959600,16410880],[16371117,13158569,16555418,8630171,16663397],[15519864,14244675,5470074,12593474,5514295],[13104228,5164484,16739179,12864856,5595760],[15525326,15848623,12968156,14716537,7819064],[15261131,13480832,222564,210505,202292],[16304640,15302402,9083663,12391760,4786749],[15072450,10346669,4566440,5536128,5853007],[15583569,15427649,41136,13382463,6965820],[16050901,13034969,13018266,14057865,15289975],[14342311,16752285,8374191,4176047,16727423],[14016217,14274226,10072759,9735285,8022611],[16777215,15919585,13363307,13363307,1840141],[15728589,14477758,5591378,10032956,3024435],[57340,46284,35998,24427,3422264],[16245950,15774878,11764100,7561838,4275786],[14808516,15590772,16372771,16552250,16731728],[16699048,10074264,16745596,15223391,2766395],[16185277,15117351,8436899,12537128,6641219],[16380647,11461177,4243659,9420288,43206],[15256228,6590602,13380161,4342356,3478320],[15855525,13880893,6338970,16218149,5587510],[15329769,12369084,16750848,3316155,4342338],[15459242,13293490,11061946,8619657,6111575],[15909978,12563290,8955486,6196330,9184024],[16437385,16751707,16081738,3899779,15544380],[16054994,15790827,14806457,13954654,16728642],[16777215,13756241,5094633,2534884,0],[16298389,16151168,12610692,7101307,3497085],[15400422,12513794,8963109,5346632,1795947],[12369324,13614631,15889461,15737973,3878200],[16575414,15771696,7913640,15759384,6177071],[14874574,15253334,14976074,9510989,4531762],[15656619,12958862,6907736,4540491,3553595],[15784104,15914644,8829105,16394752,4004864],[16775101,15921775,9818039,16745018,15745365],[10536287,8041239,878425,732761,2753610],[15654297,15647376,13420173,15641224,12303240],[12179417,6718084,8076091,4798262,2762793],[15528065,16760384,11783255,15692911,11222619],[15579438,10725704,16275761,39305,13506614],[13418370,12103427,6787450,14889560,1508361],[15259065,15259063,16102217,16530001,926768],[15462345,15655095,15256239,12897207,11187115],[15757889,12601416,6297672,4718664,3145776],[16051139,15786660,12963502,12362391,11227755],[15790296,12638304,7901256,6322248,6309960],[14478786,16765877,11069134,16755366,16747668],[16776927,14662249,4079943,5910062,2763825],[16702650,15522748,14342845,13162943,11983040],[16578501,704444,16528716,1275005,2695711],[16771757,11788441,13714228,167798,1843504],[15592422,14082503,9750454,13853755,4209459],[16317633,13160194,15104030,1479591,13372473],[14341834,1814734,5211801,6970994,5649476],[15064523,10995133,15432537,13583943,5391958],[16642508,13031096,16568374,14921024,9994089],[15069260,12636734,14769714,11020099,6042174],[15461308,12379077,8565678,15867201,2297643],[12178352,16165523,16289657,8502692,11700084],[15137212,12377765,8624270,5720401,3805468],[16578515,14608574,12046755,13470802,6175017],[15744002,12720641,10682374,7012611,1835283],[16771826,16570853,16500184,15808877,3682098],[14933946,13162175,9686214,7126453,1711902],[13421772,11605539,10424603,2698295,0],[16510658,11325120,12694424,6399659,6314321],[16771503,16373420,16688802,9292973,9996388],[16185078,15263976,12125444,3355443,10027264],[15332089,10274020,15887439,3836361,1782367],[14471604,16431231,16285307,6201251,11556212],[16118999,14737329,10855276,5460531,9772843],[13172480,16384572,4275517,4915215,262148],[15725517,11720122,6401440,2396045,6312035],[14675174,9619363,3973794,2185837,2960681],[13631453,11853505,11030883,16719692,6051939],[13433998,9354900,14441278,8548485,5126493],[16776903,10340780,16751918,9539943,16081432],[16704941,16435814,10607538,16229697,16014668],[16776932,16773075,13692138,10475218,9140830],[11052967,13390458,15210333,4671303,3552822],[16772543,16311489,16220220,16074792,3018019],[16313809,12963782,14191242,10329491,4671555],[15855056,13494730,10537653,15960714,5588029],[9747045,2592944,5131594,2838130,3486770],[16711403,16315620,10859434,828848,5127984],[16177259,16476993,3379604,15797321,10945127],[13413525,10130556,10321529,7637891,5993836],[15595246,13746313,11739213,4271656,1380609],[15515155,9675818,3127468,3183250,290187],[16113875,16765107,16758924,14574178,5061435],[16776119,10942127,6731435,5995661,5187928],[16432680,16747008,8962304,49526,16711740],[16580341,16448483,15335393,14083779,13488055],[14539179,12572845,10280392,16232291,6503726],[754053,2056033,3560527,4208689,3155484],[16367478,9351877,15032924,13709629,6378357],[15657445,16769409,16438194,16759423,16751767],[11206400,16755200,43775,16711850,11141375],[13740596,10987588,10773891,12730669,5905994],[16315327,14476535,12570615,7692651,13844503]];
Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);

//# sourceMappingURL=cc_example.js.map