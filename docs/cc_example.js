// Generated by Haxe 3.4.7
 /**
  * React v15.5.4
  */
(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.React = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

/**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */

function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = ('' + key).replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });

  return '$' + escapedString;
}

/**
 * Unescape and unwrap key for human-readable display
 *
 * @param {string} key to unescape.
 * @return {string} the unescaped key.
 */
function unescape(key) {
  var unescapeRegex = /(=0|=2)/g;
  var unescaperLookup = {
    '=0': '=',
    '=2': ':'
  };
  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

  return ('' + keySubstring).replace(unescapeRegex, function (match) {
    return unescaperLookup[match];
  });
}

var KeyEscapeUtils = {
  escape: escape,
  unescape: unescape
};

module.exports = KeyEscapeUtils;
},{}],2:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = _dereq_(25);

var invariant = _dereq_(29);

/**
 * Static poolers. Several custom versions for each potential number of
 * arguments. A completely generic pooler is easy to implement, but would
 * require accessing the `arguments` object. In each of these, `this` refers to
 * the Class itself, not an instance. If any others are needed, simply add them
 * here, or in their own files.
 */
var oneArgumentPooler = function (copyFieldsFrom) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, copyFieldsFrom);
    return instance;
  } else {
    return new Klass(copyFieldsFrom);
  }
};

var twoArgumentPooler = function (a1, a2) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2);
    return instance;
  } else {
    return new Klass(a1, a2);
  }
};

var threeArgumentPooler = function (a1, a2, a3) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3);
    return instance;
  } else {
    return new Klass(a1, a2, a3);
  }
};

var fourArgumentPooler = function (a1, a2, a3, a4) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4);
  }
};

var standardReleaser = function (instance) {
  var Klass = this;
  !(instance instanceof Klass) ? "development" !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
  instance.destructor();
  if (Klass.instancePool.length < Klass.poolSize) {
    Klass.instancePool.push(instance);
  }
};

var DEFAULT_POOL_SIZE = 10;
var DEFAULT_POOLER = oneArgumentPooler;

/**
 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
 * itself (statically) not adding any prototypical fields. Any CopyConstructor
 * you give this may have a `poolSize` property, and will look for a
 * prototypical `destructor` on instances.
 *
 * @param {Function} CopyConstructor Constructor that can be used to reset.
 * @param {Function} pooler Customizable pooler.
 */
var addPoolingTo = function (CopyConstructor, pooler) {
  // Casting as any so that flow ignores the actual implementation and trusts
  // it to match the type we declared
  var NewKlass = CopyConstructor;
  NewKlass.instancePool = [];
  NewKlass.getPooled = pooler || DEFAULT_POOLER;
  if (!NewKlass.poolSize) {
    NewKlass.poolSize = DEFAULT_POOL_SIZE;
  }
  NewKlass.release = standardReleaser;
  return NewKlass;
};

var PooledClass = {
  addPoolingTo: addPoolingTo,
  oneArgumentPooler: oneArgumentPooler,
  twoArgumentPooler: twoArgumentPooler,
  threeArgumentPooler: threeArgumentPooler,
  fourArgumentPooler: fourArgumentPooler
};

module.exports = PooledClass;
},{"25":25,"29":29}],3:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = _dereq_(31);

var ReactChildren = _dereq_(4);
var ReactComponent = _dereq_(6);
var ReactPureComponent = _dereq_(17);
var ReactClass = _dereq_(5);
var ReactDOMFactories = _dereq_(9);
var ReactElement = _dereq_(10);
var ReactPropTypes = _dereq_(15);
var ReactVersion = _dereq_(19);

var onlyChild = _dereq_(24);
var warning = _dereq_(30);

var createElement = ReactElement.createElement;
var createFactory = ReactElement.createFactory;
var cloneElement = ReactElement.cloneElement;

if ("development" !== 'production') {
  var canDefineProperty = _dereq_(20);
  var ReactElementValidator = _dereq_(12);
  var didWarnPropTypesDeprecated = false;
  createElement = ReactElementValidator.createElement;
  createFactory = ReactElementValidator.createFactory;
  cloneElement = ReactElementValidator.cloneElement;
}

var __spread = _assign;

if ("development" !== 'production') {
  var warned = false;
  __spread = function () {
    "development" !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;
    warned = true;
    return _assign.apply(null, arguments);
  };
}

var React = {

  // Modern

  Children: {
    map: ReactChildren.map,
    forEach: ReactChildren.forEach,
    count: ReactChildren.count,
    toArray: ReactChildren.toArray,
    only: onlyChild
  },

  Component: ReactComponent,
  PureComponent: ReactPureComponent,

  createElement: createElement,
  cloneElement: cloneElement,
  isValidElement: ReactElement.isValidElement,

  // Classic

  PropTypes: ReactPropTypes,
  createClass: ReactClass.createClass,
  createFactory: createFactory,
  createMixin: function (mixin) {
    // Currently a noop. Will be used to validate and trace mixins.
    return mixin;
  },

  // This looks DOM specific but these are actually isomorphic helpers
  // since they are just generating DOM strings.
  DOM: ReactDOMFactories,

  version: ReactVersion,

  // Deprecated hook for JSX spread, don't use this for anything.
  __spread: __spread
};

// TODO: Fix tests so that this deprecation warning doesn't cause failures.
if ("development" !== 'production') {
  if (canDefineProperty) {
    Object.defineProperty(React, 'PropTypes', {
      get: function () {
        "development" !== 'production' ? warning(didWarnPropTypesDeprecated, 'Accessing PropTypes via the main React package is deprecated. Use ' + 'the prop-types package from npm instead.') : void 0;
        didWarnPropTypesDeprecated = true;
        return ReactPropTypes;
      }
    });
  }
}

module.exports = React;
},{"10":10,"12":12,"15":15,"17":17,"19":19,"20":20,"24":24,"30":30,"31":31,"4":4,"5":5,"6":6,"9":9}],4:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var PooledClass = _dereq_(2);
var ReactElement = _dereq_(10);

var emptyFunction = _dereq_(27);
var traverseAllChildren = _dereq_(26);

var twoArgumentPooler = PooledClass.twoArgumentPooler;
var fourArgumentPooler = PooledClass.fourArgumentPooler;

var userProvidedKeyEscapeRegex = /\/+/g;
function escapeUserProvidedKey(text) {
  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
}

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * traversal. Allows avoiding binding callbacks.
 *
 * @constructor ForEachBookKeeping
 * @param {!function} forEachFunction Function to perform traversal with.
 * @param {?*} forEachContext Context to perform context with.
 */
function ForEachBookKeeping(forEachFunction, forEachContext) {
  this.func = forEachFunction;
  this.context = forEachContext;
  this.count = 0;
}
ForEachBookKeeping.prototype.destructor = function () {
  this.func = null;
  this.context = null;
  this.count = 0;
};
PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

function forEachSingleChild(bookKeeping, child, name) {
  var func = bookKeeping.func,
      context = bookKeeping.context;

  func.call(context, child, bookKeeping.count++);
}

/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */
function forEachChildren(children, forEachFunc, forEachContext) {
  if (children == null) {
    return children;
  }
  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
  traverseAllChildren(children, forEachSingleChild, traverseContext);
  ForEachBookKeeping.release(traverseContext);
}

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * mapping. Allows avoiding binding callbacks.
 *
 * @constructor MapBookKeeping
 * @param {!*} mapResult Object containing the ordered map of results.
 * @param {!function} mapFunction Function to perform mapping with.
 * @param {?*} mapContext Context to perform mapping with.
 */
function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
  this.result = mapResult;
  this.keyPrefix = keyPrefix;
  this.func = mapFunction;
  this.context = mapContext;
  this.count = 0;
}
MapBookKeeping.prototype.destructor = function () {
  this.result = null;
  this.keyPrefix = null;
  this.func = null;
  this.context = null;
  this.count = 0;
};
PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

function mapSingleChildIntoContext(bookKeeping, child, childKey) {
  var result = bookKeeping.result,
      keyPrefix = bookKeeping.keyPrefix,
      func = bookKeeping.func,
      context = bookKeeping.context;


  var mappedChild = func.call(context, child, bookKeeping.count++);
  if (Array.isArray(mappedChild)) {
    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
  } else if (mappedChild != null) {
    if (ReactElement.isValidElement(mappedChild)) {
      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
      // Keep both the (mapped) and old keys if they differ, just as
      // traverseAllChildren used to do for objects as children
      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
    }
    result.push(mappedChild);
  }
}

function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
  var escapedPrefix = '';
  if (prefix != null) {
    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
  }
  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
  MapBookKeeping.release(traverseContext);
}

/**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
 *
 * The provided mapFunction(child, key, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */
function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
  return result;
}

function forEachSingleChildDummy(traverseContext, child, name) {
  return null;
}

/**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */
function countChildren(children, context) {
  return traverseAllChildren(children, forEachSingleChildDummy, null);
}

/**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
 */
function toArray(children) {
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
  return result;
}

var ReactChildren = {
  forEach: forEachChildren,
  map: mapChildren,
  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
  count: countChildren,
  toArray: toArray
};

module.exports = ReactChildren;
},{"10":10,"2":2,"26":26,"27":27}],5:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = _dereq_(25),
    _assign = _dereq_(31);

var ReactComponent = _dereq_(6);
var ReactElement = _dereq_(10);
var ReactPropTypeLocationNames = _dereq_(14);
var ReactNoopUpdateQueue = _dereq_(13);

var emptyObject = _dereq_(28);
var invariant = _dereq_(29);
var warning = _dereq_(30);

var MIXINS_KEY = 'mixins';

// Helper function to allow the creation of anonymous functions which do not
// have .name set to the name of the variable being assigned to.
function identity(fn) {
  return fn;
}

/**
 * Policies that describe methods in `ReactClassInterface`.
 */


var injectedMixins = [];

/**
 * Composite components are higher-level components that compose other composite
 * or host components.
 *
 * To create a new type of `ReactClass`, pass a specification of
 * your new class to `React.createClass`. The only requirement of your class
 * specification is that you implement a `render` method.
 *
 *   var MyComponent = React.createClass({
 *     render: function() {
 *       return <div>Hello World</div>;
 *     }
 *   });
 *
 * The class specification supports a specific protocol of methods that have
 * special meaning (e.g. `render`). See `ReactClassInterface` for
 * more the comprehensive protocol. Any other properties and methods in the
 * class specification will be available on the prototype.
 *
 * @interface ReactClassInterface
 * @internal
 */
var ReactClassInterface = {

  /**
   * An array of Mixin objects to include when defining your component.
   *
   * @type {array}
   * @optional
   */
  mixins: 'DEFINE_MANY',

  /**
   * An object containing properties and methods that should be defined on
   * the component's constructor instead of its prototype (static methods).
   *
   * @type {object}
   * @optional
   */
  statics: 'DEFINE_MANY',

  /**
   * Definition of prop types for this component.
   *
   * @type {object}
   * @optional
   */
  propTypes: 'DEFINE_MANY',

  /**
   * Definition of context types for this component.
   *
   * @type {object}
   * @optional
   */
  contextTypes: 'DEFINE_MANY',

  /**
   * Definition of context types this component sets for its children.
   *
   * @type {object}
   * @optional
   */
  childContextTypes: 'DEFINE_MANY',

  // ==== Definition methods ====

  /**
   * Invoked when the component is mounted. Values in the mapping will be set on
   * `this.props` if that prop is not specified (i.e. using an `in` check).
   *
   * This method is invoked before `getInitialState` and therefore cannot rely
   * on `this.state` or use `this.setState`.
   *
   * @return {object}
   * @optional
   */
  getDefaultProps: 'DEFINE_MANY_MERGED',

  /**
   * Invoked once before the component is mounted. The return value will be used
   * as the initial value of `this.state`.
   *
   *   getInitialState: function() {
   *     return {
   *       isOn: false,
   *       fooBaz: new BazFoo()
   *     }
   *   }
   *
   * @return {object}
   * @optional
   */
  getInitialState: 'DEFINE_MANY_MERGED',

  /**
   * @return {object}
   * @optional
   */
  getChildContext: 'DEFINE_MANY_MERGED',

  /**
   * Uses props from `this.props` and state from `this.state` to render the
   * structure of the component.
   *
   * No guarantees are made about when or how often this method is invoked, so
   * it must not have side effects.
   *
   *   render: function() {
   *     var name = this.props.name;
   *     return <div>Hello, {name}!</div>;
   *   }
   *
   * @return {ReactComponent}
   * @required
   */
  render: 'DEFINE_ONCE',

  // ==== Delegate methods ====

  /**
   * Invoked when the component is initially created and about to be mounted.
   * This may have side effects, but any external subscriptions or data created
   * by this method must be cleaned up in `componentWillUnmount`.
   *
   * @optional
   */
  componentWillMount: 'DEFINE_MANY',

  /**
   * Invoked when the component has been mounted and has a DOM representation.
   * However, there is no guarantee that the DOM node is in the document.
   *
   * Use this as an opportunity to operate on the DOM when the component has
   * been mounted (initialized and rendered) for the first time.
   *
   * @param {DOMElement} rootNode DOM element representing the component.
   * @optional
   */
  componentDidMount: 'DEFINE_MANY',

  /**
   * Invoked before the component receives new props.
   *
   * Use this as an opportunity to react to a prop transition by updating the
   * state using `this.setState`. Current props are accessed via `this.props`.
   *
   *   componentWillReceiveProps: function(nextProps, nextContext) {
   *     this.setState({
   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
   *     });
   *   }
   *
   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
   * transition may cause a state change, but the opposite is not true. If you
   * need it, you are probably looking for `componentWillUpdate`.
   *
   * @param {object} nextProps
   * @optional
   */
  componentWillReceiveProps: 'DEFINE_MANY',

  /**
   * Invoked while deciding if the component should be updated as a result of
   * receiving new props, state and/or context.
   *
   * Use this as an opportunity to `return false` when you're certain that the
   * transition to the new props/state/context will not require a component
   * update.
   *
   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
   *     return !equal(nextProps, this.props) ||
   *       !equal(nextState, this.state) ||
   *       !equal(nextContext, this.context);
   *   }
   *
   * @param {object} nextProps
   * @param {?object} nextState
   * @param {?object} nextContext
   * @return {boolean} True if the component should update.
   * @optional
   */
  shouldComponentUpdate: 'DEFINE_ONCE',

  /**
   * Invoked when the component is about to update due to a transition from
   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
   * and `nextContext`.
   *
   * Use this as an opportunity to perform preparation before an update occurs.
   *
   * NOTE: You **cannot** use `this.setState()` in this method.
   *
   * @param {object} nextProps
   * @param {?object} nextState
   * @param {?object} nextContext
   * @param {ReactReconcileTransaction} transaction
   * @optional
   */
  componentWillUpdate: 'DEFINE_MANY',

  /**
   * Invoked when the component's DOM representation has been updated.
   *
   * Use this as an opportunity to operate on the DOM when the component has
   * been updated.
   *
   * @param {object} prevProps
   * @param {?object} prevState
   * @param {?object} prevContext
   * @param {DOMElement} rootNode DOM element representing the component.
   * @optional
   */
  componentDidUpdate: 'DEFINE_MANY',

  /**
   * Invoked when the component is about to be removed from its parent and have
   * its DOM representation destroyed.
   *
   * Use this as an opportunity to deallocate any external resources.
   *
   * NOTE: There is no `componentDidUnmount` since your component will have been
   * destroyed by that point.
   *
   * @optional
   */
  componentWillUnmount: 'DEFINE_MANY',

  // ==== Advanced methods ====

  /**
   * Updates the component's currently mounted DOM representation.
   *
   * By default, this implements React's rendering and reconciliation algorithm.
   * Sophisticated clients may wish to override this.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   * @overridable
   */
  updateComponent: 'OVERRIDE_BASE'

};

/**
 * Mapping from class specification keys to special processing functions.
 *
 * Although these are declared like instance properties in the specification
 * when defining classes using `React.createClass`, they are actually static
 * and are accessible on the constructor instead of the prototype. Despite
 * being static, they must be defined outside of the "statics" key under
 * which all other static methods are defined.
 */
var RESERVED_SPEC_KEYS = {
  displayName: function (Constructor, displayName) {
    Constructor.displayName = displayName;
  },
  mixins: function (Constructor, mixins) {
    if (mixins) {
      for (var i = 0; i < mixins.length; i++) {
        mixSpecIntoComponent(Constructor, mixins[i]);
      }
    }
  },
  childContextTypes: function (Constructor, childContextTypes) {
    if ("development" !== 'production') {
      validateTypeDef(Constructor, childContextTypes, 'childContext');
    }
    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);
  },
  contextTypes: function (Constructor, contextTypes) {
    if ("development" !== 'production') {
      validateTypeDef(Constructor, contextTypes, 'context');
    }
    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);
  },
  /**
   * Special case getDefaultProps which should move into statics but requires
   * automatic merging.
   */
  getDefaultProps: function (Constructor, getDefaultProps) {
    if (Constructor.getDefaultProps) {
      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
    } else {
      Constructor.getDefaultProps = getDefaultProps;
    }
  },
  propTypes: function (Constructor, propTypes) {
    if ("development" !== 'production') {
      validateTypeDef(Constructor, propTypes, 'prop');
    }
    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
  },
  statics: function (Constructor, statics) {
    mixStaticSpecIntoComponent(Constructor, statics);
  },
  autobind: function () {} };

function validateTypeDef(Constructor, typeDef, location) {
  for (var propName in typeDef) {
    if (typeDef.hasOwnProperty(propName)) {
      // use a warning instead of an invariant so components
      // don't show up in prod but only in __DEV__
      "development" !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;
    }
  }
}

function validateMethodOverride(isAlreadyDefined, name) {
  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;

  // Disallow overriding of base class methods unless explicitly allowed.
  if (ReactClassMixin.hasOwnProperty(name)) {
    !(specPolicy === 'OVERRIDE_BASE') ? "development" !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;
  }

  // Disallow defining methods more than once unless explicitly allowed.
  if (isAlreadyDefined) {
    !(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED') ? "development" !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;
  }
}

/**
 * Mixin helper which handles policy validation and reserved
 * specification keys when building React classes.
 */
function mixSpecIntoComponent(Constructor, spec) {
  if (!spec) {
    if ("development" !== 'production') {
      var typeofSpec = typeof spec;
      var isMixinValid = typeofSpec === 'object' && spec !== null;

      "development" !== 'production' ? warning(isMixinValid, '%s: You\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;
    }

    return;
  }

  !(typeof spec !== 'function') ? "development" !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;
  !!ReactElement.isValidElement(spec) ? "development" !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;

  var proto = Constructor.prototype;
  var autoBindPairs = proto.__reactAutoBindPairs;

  // By handling mixins before any other properties, we ensure the same
  // chaining order is applied to methods with DEFINE_MANY policy, whether
  // mixins are listed before or after these methods in the spec.
  if (spec.hasOwnProperty(MIXINS_KEY)) {
    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
  }

  for (var name in spec) {
    if (!spec.hasOwnProperty(name)) {
      continue;
    }

    if (name === MIXINS_KEY) {
      // We have already handled mixins in a special case above.
      continue;
    }

    var property = spec[name];
    var isAlreadyDefined = proto.hasOwnProperty(name);
    validateMethodOverride(isAlreadyDefined, name);

    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
      RESERVED_SPEC_KEYS[name](Constructor, property);
    } else {
      // Setup methods on prototype:
      // The following member methods should not be automatically bound:
      // 1. Expected ReactClass methods (in the "interface").
      // 2. Overridden methods (that were mixed in).
      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
      var isFunction = typeof property === 'function';
      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

      if (shouldAutoBind) {
        autoBindPairs.push(name, property);
        proto[name] = property;
      } else {
        if (isAlreadyDefined) {
          var specPolicy = ReactClassInterface[name];

          // These cases should already be caught by validateMethodOverride.
          !(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY')) ? "development" !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;

          // For methods which are defined more than once, call the existing
          // methods before calling the new property, merging if appropriate.
          if (specPolicy === 'DEFINE_MANY_MERGED') {
            proto[name] = createMergedResultFunction(proto[name], property);
          } else if (specPolicy === 'DEFINE_MANY') {
            proto[name] = createChainedFunction(proto[name], property);
          }
        } else {
          proto[name] = property;
          if ("development" !== 'production') {
            // Add verbose displayName to the function, which helps when looking
            // at profiling tools.
            if (typeof property === 'function' && spec.displayName) {
              proto[name].displayName = spec.displayName + '_' + name;
            }
          }
        }
      }
    }
  }
}

function mixStaticSpecIntoComponent(Constructor, statics) {
  if (!statics) {
    return;
  }
  for (var name in statics) {
    var property = statics[name];
    if (!statics.hasOwnProperty(name)) {
      continue;
    }

    var isReserved = name in RESERVED_SPEC_KEYS;
    !!isReserved ? "development" !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;

    var isInherited = name in Constructor;
    !!isInherited ? "development" !== 'production' ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;
    Constructor[name] = property;
  }
}

/**
 * Merge two objects, but throw if both contain the same key.
 *
 * @param {object} one The first object, which is mutated.
 * @param {object} two The second object
 * @return {object} one after it has been mutated to contain everything in two.
 */
function mergeIntoWithNoDuplicateKeys(one, two) {
  !(one && two && typeof one === 'object' && typeof two === 'object') ? "development" !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;

  for (var key in two) {
    if (two.hasOwnProperty(key)) {
      !(one[key] === undefined) ? "development" !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;
      one[key] = two[key];
    }
  }
  return one;
}

/**
 * Creates a function that invokes two functions and merges their return values.
 *
 * @param {function} one Function to invoke first.
 * @param {function} two Function to invoke second.
 * @return {function} Function that invokes the two argument functions.
 * @private
 */
function createMergedResultFunction(one, two) {
  return function mergedResult() {
    var a = one.apply(this, arguments);
    var b = two.apply(this, arguments);
    if (a == null) {
      return b;
    } else if (b == null) {
      return a;
    }
    var c = {};
    mergeIntoWithNoDuplicateKeys(c, a);
    mergeIntoWithNoDuplicateKeys(c, b);
    return c;
  };
}

/**
 * Creates a function that invokes two functions and ignores their return vales.
 *
 * @param {function} one Function to invoke first.
 * @param {function} two Function to invoke second.
 * @return {function} Function that invokes the two argument functions.
 * @private
 */
function createChainedFunction(one, two) {
  return function chainedFunction() {
    one.apply(this, arguments);
    two.apply(this, arguments);
  };
}

/**
 * Binds a method to the component.
 *
 * @param {object} component Component whose method is going to be bound.
 * @param {function} method Method to be bound.
 * @return {function} The bound method.
 */
function bindAutoBindMethod(component, method) {
  var boundMethod = method.bind(component);
  if ("development" !== 'production') {
    boundMethod.__reactBoundContext = component;
    boundMethod.__reactBoundMethod = method;
    boundMethod.__reactBoundArguments = null;
    var componentName = component.constructor.displayName;
    var _bind = boundMethod.bind;
    boundMethod.bind = function (newThis) {
      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      // User is trying to bind() an autobound method; we effectively will
      // ignore the value of "this" that the user is trying to use, so
      // let's warn.
      if (newThis !== component && newThis !== null) {
        "development" !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;
      } else if (!args.length) {
        "development" !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;
        return boundMethod;
      }
      var reboundMethod = _bind.apply(boundMethod, arguments);
      reboundMethod.__reactBoundContext = component;
      reboundMethod.__reactBoundMethod = method;
      reboundMethod.__reactBoundArguments = args;
      return reboundMethod;
    };
  }
  return boundMethod;
}

/**
 * Binds all auto-bound methods in a component.
 *
 * @param {object} component Component whose method is going to be bound.
 */
function bindAutoBindMethods(component) {
  var pairs = component.__reactAutoBindPairs;
  for (var i = 0; i < pairs.length; i += 2) {
    var autoBindKey = pairs[i];
    var method = pairs[i + 1];
    component[autoBindKey] = bindAutoBindMethod(component, method);
  }
}

/**
 * Add more to the ReactClass base class. These are all legacy features and
 * therefore not already part of the modern ReactComponent.
 */
var ReactClassMixin = {

  /**
   * TODO: This will be deprecated because state should always keep a consistent
   * type signature and the only use case for this, is to avoid that.
   */
  replaceState: function (newState, callback) {
    this.updater.enqueueReplaceState(this, newState);
    if (callback) {
      this.updater.enqueueCallback(this, callback, 'replaceState');
    }
  },

  /**
   * Checks whether or not this composite component is mounted.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function () {
    return this.updater.isMounted(this);
  }
};

var ReactClassComponent = function () {};
_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

var didWarnDeprecated = false;

/**
 * Module for creating composite components.
 *
 * @class ReactClass
 */
var ReactClass = {

  /**
   * Creates a composite component class given a class specification.
   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
   *
   * @param {object} spec Class specification (which must define `render`).
   * @return {function} Component constructor function.
   * @public
   */
  createClass: function (spec) {
    if ("development" !== 'production') {
      "development" !== 'production' ? warning(didWarnDeprecated, '%s: React.createClass is deprecated and will be removed in version 16. ' + 'Use plain JavaScript classes instead. If you\'re not yet ready to ' + 'migrate, create-react-class is available on npm as a ' + 'drop-in replacement.', spec && spec.displayName || 'A Component') : void 0;
      didWarnDeprecated = true;
    }

    // To keep our warnings more understandable, we'll use a little hack here to
    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't
    // unnecessarily identify a class without displayName as 'Constructor'.
    var Constructor = identity(function (props, context, updater) {
      // This constructor gets overridden by mocks. The argument is used
      // by mocks to assert on what gets mounted.

      if ("development" !== 'production') {
        "development" !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;
      }

      // Wire up auto-binding
      if (this.__reactAutoBindPairs.length) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;

      this.state = null;

      // ReactClasses doesn't have constructors. Instead, they use the
      // getInitialState and componentWillMount methods for initialization.

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if ("development" !== 'production') {
        // We allow auto-mocks to proceed as if they're returning null.
        if (initialState === undefined && this.getInitialState._isMockFunction) {
          // This is probably bad practice. Consider warning here and
          // deprecating this convenience.
          initialState = null;
        }
      }
      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? "development" !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;

      this.state = initialState;
    });
    Constructor.prototype = new ReactClassComponent();
    Constructor.prototype.constructor = Constructor;
    Constructor.prototype.__reactAutoBindPairs = [];

    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

    mixSpecIntoComponent(Constructor, spec);

    // Initialize the defaultProps property after all mixins have been merged.
    if (Constructor.getDefaultProps) {
      Constructor.defaultProps = Constructor.getDefaultProps();
    }

    if ("development" !== 'production') {
      // This is a tag to indicate that the use of these method names is ok,
      // since it's used with createClass. If it's not, then it's likely a
      // mistake so we'll warn you to use the static property, property
      // initializer or constructor respectively.
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps.isReactClassApproved = {};
      }
      if (Constructor.prototype.getInitialState) {
        Constructor.prototype.getInitialState.isReactClassApproved = {};
      }
    }

    !Constructor.prototype.render ? "development" !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;

    if ("development" !== 'production') {
      "development" !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;
      "development" !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;
    }

    // Reduce time spent doing lookups by setting these on the prototype.
    for (var methodName in ReactClassInterface) {
      if (!Constructor.prototype[methodName]) {
        Constructor.prototype[methodName] = null;
      }
    }

    return Constructor;
  },

  injection: {
    injectMixin: function (mixin) {
      injectedMixins.push(mixin);
    }
  }

};

module.exports = ReactClass;
},{"10":10,"13":13,"14":14,"25":25,"28":28,"29":29,"30":30,"31":31,"6":6}],6:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = _dereq_(25);

var ReactNoopUpdateQueue = _dereq_(13);

var canDefineProperty = _dereq_(20);
var emptyObject = _dereq_(28);
var invariant = _dereq_(29);
var warning = _dereq_(30);

/**
 * Base class helpers for the updating state of a component.
 */
function ReactComponent(props, context, updater) {
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

ReactComponent.prototype.isReactComponent = {};

/**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */
ReactComponent.prototype.setState = function (partialState, callback) {
  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? "development" !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
  this.updater.enqueueSetState(this, partialState);
  if (callback) {
    this.updater.enqueueCallback(this, callback, 'setState');
  }
};

/**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */
ReactComponent.prototype.forceUpdate = function (callback) {
  this.updater.enqueueForceUpdate(this);
  if (callback) {
    this.updater.enqueueCallback(this, callback, 'forceUpdate');
  }
};

/**
 * Deprecated APIs. These APIs used to exist on classic React classes but since
 * we would like to deprecate them, we're not going to move them over to this
 * modern base class. Instead, we define a getter that warns if it's accessed.
 */
if ("development" !== 'production') {
  var deprecatedAPIs = {
    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
  };
  var defineDeprecationWarning = function (methodName, info) {
    if (canDefineProperty) {
      Object.defineProperty(ReactComponent.prototype, methodName, {
        get: function () {
          "development" !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;
          return undefined;
        }
      });
    }
  };
  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

module.exports = ReactComponent;
},{"13":13,"20":20,"25":25,"28":28,"29":29,"30":30}],7:[function(_dereq_,module,exports){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = _dereq_(25);

var ReactCurrentOwner = _dereq_(8);

var invariant = _dereq_(29);
var warning = _dereq_(30);

function isNative(fn) {
  // Based on isNative() from Lodash
  var funcToString = Function.prototype.toString;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var reIsNative = RegExp('^' + funcToString
  // Take an example native function source for comparison
  .call(hasOwnProperty)
  // Strip regex characters so we can use it for regex
  .replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
  // Remove hasOwnProperty from the template to make it generic
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
  try {
    var source = funcToString.call(fn);
    return reIsNative.test(source);
  } catch (err) {
    return false;
  }
}

var canUseCollections =
// Array.from
typeof Array.from === 'function' &&
// Map
typeof Map === 'function' && isNative(Map) &&
// Map.prototype.keys
Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&
// Set
typeof Set === 'function' && isNative(Set) &&
// Set.prototype.keys
Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);

var setItem;
var getItem;
var removeItem;
var getItemIDs;
var addRoot;
var removeRoot;
var getRootIDs;

if (canUseCollections) {
  var itemMap = new Map();
  var rootIDSet = new Set();

  setItem = function (id, item) {
    itemMap.set(id, item);
  };
  getItem = function (id) {
    return itemMap.get(id);
  };
  removeItem = function (id) {
    itemMap['delete'](id);
  };
  getItemIDs = function () {
    return Array.from(itemMap.keys());
  };

  addRoot = function (id) {
    rootIDSet.add(id);
  };
  removeRoot = function (id) {
    rootIDSet['delete'](id);
  };
  getRootIDs = function () {
    return Array.from(rootIDSet.keys());
  };
} else {
  var itemByKey = {};
  var rootByKey = {};

  // Use non-numeric keys to prevent V8 performance issues:
  // https://github.com/facebook/react/pull/7232
  var getKeyFromID = function (id) {
    return '.' + id;
  };
  var getIDFromKey = function (key) {
    return parseInt(key.substr(1), 10);
  };

  setItem = function (id, item) {
    var key = getKeyFromID(id);
    itemByKey[key] = item;
  };
  getItem = function (id) {
    var key = getKeyFromID(id);
    return itemByKey[key];
  };
  removeItem = function (id) {
    var key = getKeyFromID(id);
    delete itemByKey[key];
  };
  getItemIDs = function () {
    return Object.keys(itemByKey).map(getIDFromKey);
  };

  addRoot = function (id) {
    var key = getKeyFromID(id);
    rootByKey[key] = true;
  };
  removeRoot = function (id) {
    var key = getKeyFromID(id);
    delete rootByKey[key];
  };
  getRootIDs = function () {
    return Object.keys(rootByKey).map(getIDFromKey);
  };
}

var unmountedIDs = [];

function purgeDeep(id) {
  var item = getItem(id);
  if (item) {
    var childIDs = item.childIDs;

    removeItem(id);
    childIDs.forEach(purgeDeep);
  }
}

function describeComponentFrame(name, source, ownerName) {
  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
}

function getDisplayName(element) {
  if (element == null) {
    return '#empty';
  } else if (typeof element === 'string' || typeof element === 'number') {
    return '#text';
  } else if (typeof element.type === 'string') {
    return element.type;
  } else {
    return element.type.displayName || element.type.name || 'Unknown';
  }
}

function describeID(id) {
  var name = ReactComponentTreeHook.getDisplayName(id);
  var element = ReactComponentTreeHook.getElement(id);
  var ownerID = ReactComponentTreeHook.getOwnerID(id);
  var ownerName;
  if (ownerID) {
    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
  }
  "development" !== 'production' ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
  return describeComponentFrame(name, element && element._source, ownerName);
}

var ReactComponentTreeHook = {
  onSetChildren: function (id, nextChildIDs) {
    var item = getItem(id);
    !item ? "development" !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
    item.childIDs = nextChildIDs;

    for (var i = 0; i < nextChildIDs.length; i++) {
      var nextChildID = nextChildIDs[i];
      var nextChild = getItem(nextChildID);
      !nextChild ? "development" !== 'production' ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;
      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ? "development" !== 'production' ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;
      !nextChild.isMounted ? "development" !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
      if (nextChild.parentID == null) {
        nextChild.parentID = id;
        // TODO: This shouldn't be necessary but mounting a new root during in
        // componentWillMount currently causes not-yet-mounted components to
        // be purged from our tree data so their parent id is missing.
      }
      !(nextChild.parentID === id) ? "development" !== 'production' ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;
    }
  },
  onBeforeMountComponent: function (id, element, parentID) {
    var item = {
      element: element,
      parentID: parentID,
      text: null,
      childIDs: [],
      isMounted: false,
      updateCount: 0
    };
    setItem(id, item);
  },
  onBeforeUpdateComponent: function (id, element) {
    var item = getItem(id);
    if (!item || !item.isMounted) {
      // We may end up here as a result of setState() in componentWillUnmount().
      // In this case, ignore the element.
      return;
    }
    item.element = element;
  },
  onMountComponent: function (id) {
    var item = getItem(id);
    !item ? "development" !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
    item.isMounted = true;
    var isRoot = item.parentID === 0;
    if (isRoot) {
      addRoot(id);
    }
  },
  onUpdateComponent: function (id) {
    var item = getItem(id);
    if (!item || !item.isMounted) {
      // We may end up here as a result of setState() in componentWillUnmount().
      // In this case, ignore the element.
      return;
    }
    item.updateCount++;
  },
  onUnmountComponent: function (id) {
    var item = getItem(id);
    if (item) {
      // We need to check if it exists.
      // `item` might not exist if it is inside an error boundary, and a sibling
      // error boundary child threw while mounting. Then this instance never
      // got a chance to mount, but it still gets an unmounting event during
      // the error boundary cleanup.
      item.isMounted = false;
      var isRoot = item.parentID === 0;
      if (isRoot) {
        removeRoot(id);
      }
    }
    unmountedIDs.push(id);
  },
  purgeUnmountedComponents: function () {
    if (ReactComponentTreeHook._preventPurging) {
      // Should only be used for testing.
      return;
    }

    for (var i = 0; i < unmountedIDs.length; i++) {
      var id = unmountedIDs[i];
      purgeDeep(id);
    }
    unmountedIDs.length = 0;
  },
  isMounted: function (id) {
    var item = getItem(id);
    return item ? item.isMounted : false;
  },
  getCurrentStackAddendum: function (topElement) {
    var info = '';
    if (topElement) {
      var name = getDisplayName(topElement);
      var owner = topElement._owner;
      info += describeComponentFrame(name, topElement._source, owner && owner.getName());
    }

    var currentOwner = ReactCurrentOwner.current;
    var id = currentOwner && currentOwner._debugID;

    info += ReactComponentTreeHook.getStackAddendumByID(id);
    return info;
  },
  getStackAddendumByID: function (id) {
    var info = '';
    while (id) {
      info += describeID(id);
      id = ReactComponentTreeHook.getParentID(id);
    }
    return info;
  },
  getChildIDs: function (id) {
    var item = getItem(id);
    return item ? item.childIDs : [];
  },
  getDisplayName: function (id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (!element) {
      return null;
    }
    return getDisplayName(element);
  },
  getElement: function (id) {
    var item = getItem(id);
    return item ? item.element : null;
  },
  getOwnerID: function (id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (!element || !element._owner) {
      return null;
    }
    return element._owner._debugID;
  },
  getParentID: function (id) {
    var item = getItem(id);
    return item ? item.parentID : null;
  },
  getSource: function (id) {
    var item = getItem(id);
    var element = item ? item.element : null;
    var source = element != null ? element._source : null;
    return source;
  },
  getText: function (id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (typeof element === 'string') {
      return element;
    } else if (typeof element === 'number') {
      return '' + element;
    } else {
      return null;
    }
  },
  getUpdateCount: function (id) {
    var item = getItem(id);
    return item ? item.updateCount : 0;
  },


  getRootIDs: getRootIDs,
  getRegisteredIDs: getItemIDs
};

module.exports = ReactComponentTreeHook;
},{"25":25,"29":29,"30":30,"8":8}],8:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */
var ReactCurrentOwner = {

  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null

};

module.exports = ReactCurrentOwner;
},{}],9:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactElement = _dereq_(10);

/**
 * Create a factory that creates HTML tag elements.
 *
 * @private
 */
var createDOMFactory = ReactElement.createFactory;
if ("development" !== 'production') {
  var ReactElementValidator = _dereq_(12);
  createDOMFactory = ReactElementValidator.createFactory;
}

/**
 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
 * This is also accessible via `React.DOM`.
 *
 * @public
 */
var ReactDOMFactories = {
  a: createDOMFactory('a'),
  abbr: createDOMFactory('abbr'),
  address: createDOMFactory('address'),
  area: createDOMFactory('area'),
  article: createDOMFactory('article'),
  aside: createDOMFactory('aside'),
  audio: createDOMFactory('audio'),
  b: createDOMFactory('b'),
  base: createDOMFactory('base'),
  bdi: createDOMFactory('bdi'),
  bdo: createDOMFactory('bdo'),
  big: createDOMFactory('big'),
  blockquote: createDOMFactory('blockquote'),
  body: createDOMFactory('body'),
  br: createDOMFactory('br'),
  button: createDOMFactory('button'),
  canvas: createDOMFactory('canvas'),
  caption: createDOMFactory('caption'),
  cite: createDOMFactory('cite'),
  code: createDOMFactory('code'),
  col: createDOMFactory('col'),
  colgroup: createDOMFactory('colgroup'),
  data: createDOMFactory('data'),
  datalist: createDOMFactory('datalist'),
  dd: createDOMFactory('dd'),
  del: createDOMFactory('del'),
  details: createDOMFactory('details'),
  dfn: createDOMFactory('dfn'),
  dialog: createDOMFactory('dialog'),
  div: createDOMFactory('div'),
  dl: createDOMFactory('dl'),
  dt: createDOMFactory('dt'),
  em: createDOMFactory('em'),
  embed: createDOMFactory('embed'),
  fieldset: createDOMFactory('fieldset'),
  figcaption: createDOMFactory('figcaption'),
  figure: createDOMFactory('figure'),
  footer: createDOMFactory('footer'),
  form: createDOMFactory('form'),
  h1: createDOMFactory('h1'),
  h2: createDOMFactory('h2'),
  h3: createDOMFactory('h3'),
  h4: createDOMFactory('h4'),
  h5: createDOMFactory('h5'),
  h6: createDOMFactory('h6'),
  head: createDOMFactory('head'),
  header: createDOMFactory('header'),
  hgroup: createDOMFactory('hgroup'),
  hr: createDOMFactory('hr'),
  html: createDOMFactory('html'),
  i: createDOMFactory('i'),
  iframe: createDOMFactory('iframe'),
  img: createDOMFactory('img'),
  input: createDOMFactory('input'),
  ins: createDOMFactory('ins'),
  kbd: createDOMFactory('kbd'),
  keygen: createDOMFactory('keygen'),
  label: createDOMFactory('label'),
  legend: createDOMFactory('legend'),
  li: createDOMFactory('li'),
  link: createDOMFactory('link'),
  main: createDOMFactory('main'),
  map: createDOMFactory('map'),
  mark: createDOMFactory('mark'),
  menu: createDOMFactory('menu'),
  menuitem: createDOMFactory('menuitem'),
  meta: createDOMFactory('meta'),
  meter: createDOMFactory('meter'),
  nav: createDOMFactory('nav'),
  noscript: createDOMFactory('noscript'),
  object: createDOMFactory('object'),
  ol: createDOMFactory('ol'),
  optgroup: createDOMFactory('optgroup'),
  option: createDOMFactory('option'),
  output: createDOMFactory('output'),
  p: createDOMFactory('p'),
  param: createDOMFactory('param'),
  picture: createDOMFactory('picture'),
  pre: createDOMFactory('pre'),
  progress: createDOMFactory('progress'),
  q: createDOMFactory('q'),
  rp: createDOMFactory('rp'),
  rt: createDOMFactory('rt'),
  ruby: createDOMFactory('ruby'),
  s: createDOMFactory('s'),
  samp: createDOMFactory('samp'),
  script: createDOMFactory('script'),
  section: createDOMFactory('section'),
  select: createDOMFactory('select'),
  small: createDOMFactory('small'),
  source: createDOMFactory('source'),
  span: createDOMFactory('span'),
  strong: createDOMFactory('strong'),
  style: createDOMFactory('style'),
  sub: createDOMFactory('sub'),
  summary: createDOMFactory('summary'),
  sup: createDOMFactory('sup'),
  table: createDOMFactory('table'),
  tbody: createDOMFactory('tbody'),
  td: createDOMFactory('td'),
  textarea: createDOMFactory('textarea'),
  tfoot: createDOMFactory('tfoot'),
  th: createDOMFactory('th'),
  thead: createDOMFactory('thead'),
  time: createDOMFactory('time'),
  title: createDOMFactory('title'),
  tr: createDOMFactory('tr'),
  track: createDOMFactory('track'),
  u: createDOMFactory('u'),
  ul: createDOMFactory('ul'),
  'var': createDOMFactory('var'),
  video: createDOMFactory('video'),
  wbr: createDOMFactory('wbr'),

  // SVG
  circle: createDOMFactory('circle'),
  clipPath: createDOMFactory('clipPath'),
  defs: createDOMFactory('defs'),
  ellipse: createDOMFactory('ellipse'),
  g: createDOMFactory('g'),
  image: createDOMFactory('image'),
  line: createDOMFactory('line'),
  linearGradient: createDOMFactory('linearGradient'),
  mask: createDOMFactory('mask'),
  path: createDOMFactory('path'),
  pattern: createDOMFactory('pattern'),
  polygon: createDOMFactory('polygon'),
  polyline: createDOMFactory('polyline'),
  radialGradient: createDOMFactory('radialGradient'),
  rect: createDOMFactory('rect'),
  stop: createDOMFactory('stop'),
  svg: createDOMFactory('svg'),
  text: createDOMFactory('text'),
  tspan: createDOMFactory('tspan')
};

module.exports = ReactDOMFactories;
},{"10":10,"12":12}],10:[function(_dereq_,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = _dereq_(31);

var ReactCurrentOwner = _dereq_(8);

var warning = _dereq_(30);
var canDefineProperty = _dereq_(20);
var hasOwnProperty = Object.prototype.hasOwnProperty;

var REACT_ELEMENT_TYPE = _dereq_(11);

var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};

var specialPropKeyWarningShown, specialPropRefWarningShown;

function hasValidRef(config) {
  if ("development" !== 'production') {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.ref !== undefined;
}

function hasValidKey(config) {
  if ("development" !== 'production') {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.key !== undefined;
}

function defineKeyPropWarningGetter(props, displayName) {
  var warnAboutAccessingKey = function () {
    if (!specialPropKeyWarningShown) {
      specialPropKeyWarningShown = true;
      "development" !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
    }
  };
  warnAboutAccessingKey.isReactWarning = true;
  Object.defineProperty(props, 'key', {
    get: warnAboutAccessingKey,
    configurable: true
  });
}

function defineRefPropWarningGetter(props, displayName) {
  var warnAboutAccessingRef = function () {
    if (!specialPropRefWarningShown) {
      specialPropRefWarningShown = true;
      "development" !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
    }
  };
  warnAboutAccessingRef.isReactWarning = true;
  Object.defineProperty(props, 'ref', {
    get: warnAboutAccessingRef,
    configurable: true
  });
}

/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, no instanceof check
 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} key
 * @param {string|object} ref
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @param {*} owner
 * @param {*} props
 * @internal
 */
var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allow us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,

    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,

    // Record the component responsible for creating this element.
    _owner: owner
  };

  if ("development" !== 'production') {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {};

    // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.
    if (canDefineProperty) {
      Object.defineProperty(element._store, 'validated', {
        configurable: false,
        enumerable: false,
        writable: true,
        value: false
      });
      // self and source are DEV only properties.
      Object.defineProperty(element, '_self', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: self
      });
      // Two elements created in two different places should be considered
      // equal for testing purposes and therefore we hide it from enumeration.
      Object.defineProperty(element, '_source', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: source
      });
    } else {
      element._store.validated = false;
      element._self = self;
      element._source = source;
    }
    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};

/**
 * Create and return a new ReactElement of the given type.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
 */
ReactElement.createElement = function (type, config, children) {
  var propName;

  // Reserved names are extracted
  var props = {};

  var key = null;
  var ref = null;
  var self = null;
  var source = null;

  if (config != null) {
    if (hasValidRef(config)) {
      ref = config.ref;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    self = config.__self === undefined ? null : config.__self;
    source = config.__source === undefined ? null : config.__source;
    // Remaining properties are added to a new props object
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    if ("development" !== 'production') {
      if (Object.freeze) {
        Object.freeze(childArray);
      }
    }
    props.children = childArray;
  }

  // Resolve default props
  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;
    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }
  if ("development" !== 'production') {
    if (key || ref) {
      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
        if (key) {
          defineKeyPropWarningGetter(props, displayName);
        }
        if (ref) {
          defineRefPropWarningGetter(props, displayName);
        }
      }
    }
  }
  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
};

/**
 * Return a function that produces ReactElements of a given type.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
 */
ReactElement.createFactory = function (type) {
  var factory = ReactElement.createElement.bind(null, type);
  // Expose the type on the factory and the prototype so that it can be
  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
  // This should not be named `constructor` since this may not be the function
  // that created the element, and it may not even be a constructor.
  // Legacy hook TODO: Warn if this is accessed
  factory.type = type;
  return factory;
};

ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

  return newElement;
};

/**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
 */
ReactElement.cloneElement = function (element, config, children) {
  var propName;

  // Original props are copied
  var props = _assign({}, element.props);

  // Reserved names are extracted
  var key = element.key;
  var ref = element.ref;
  // Self is preserved since the owner is preserved.
  var self = element._self;
  // Source is preserved since cloneElement is unlikely to be targeted by a
  // transpiler, and the original source is probably a better indicator of the
  // true owner.
  var source = element._source;

  // Owner will be preserved, unless ref is overridden
  var owner = element._owner;

  if (config != null) {
    if (hasValidRef(config)) {
      // Silently steal the ref from the parent.
      ref = config.ref;
      owner = ReactCurrentOwner.current;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    // Remaining properties override existing props
    var defaultProps;
    if (element.type && element.type.defaultProps) {
      defaultProps = element.type.defaultProps;
    }
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        if (config[propName] === undefined && defaultProps !== undefined) {
          // Resolve default props
          props[propName] = defaultProps[propName];
        } else {
          props[propName] = config[propName];
        }
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    props.children = childArray;
  }

  return ReactElement(element.type, key, ref, self, source, owner, props);
};

/**
 * Verifies the object is a ReactElement.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a valid component.
 * @final
 */
ReactElement.isValidElement = function (object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
};

module.exports = ReactElement;
},{"11":11,"20":20,"30":30,"31":31,"8":8}],11:[function(_dereq_,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

// The Symbol used to tag the ReactElement type. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.

var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

module.exports = REACT_ELEMENT_TYPE;
},{}],12:[function(_dereq_,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/**
 * ReactElementValidator provides a wrapper around a element factory
 * which validates the props passed to the element. This is intended to be
 * used only in DEV and could be replaced by a static type checker for languages
 * that support it.
 */

'use strict';

var ReactCurrentOwner = _dereq_(8);
var ReactComponentTreeHook = _dereq_(7);
var ReactElement = _dereq_(10);

var checkReactTypeSpec = _dereq_(21);

var canDefineProperty = _dereq_(20);
var getIteratorFn = _dereq_(22);
var warning = _dereq_(30);

function getDeclarationErrorAddendum() {
  if (ReactCurrentOwner.current) {
    var name = ReactCurrentOwner.current.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

function getSourceInfoErrorAddendum(elementProps) {
  if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {
    var source = elementProps.__source;
    var fileName = source.fileName.replace(/^.*[\\\/]/, '');
    var lineNumber = source.lineNumber;
    return ' Check your code at ' + fileName + ':' + lineNumber + '.';
  }
  return '';
}

/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */
var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  var info = getDeclarationErrorAddendum();

  if (!info) {
    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
    if (parentName) {
      info = ' Check the top-level render call using <' + parentName + '>.';
    }
  }
  return info;
}

/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */
function validateExplicitKey(element, parentType) {
  if (!element._store || element._store.validated || element.key != null) {
    return;
  }
  element._store.validated = true;

  var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});

  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
  if (memoizer[currentComponentErrorInfo]) {
    return;
  }
  memoizer[currentComponentErrorInfo] = true;

  // Usually the current owner is the offender, but if it accepts children as a
  // property, it may be the creator of the child that's responsible for
  // assigning it a key.
  var childOwner = '';
  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
    // Give the component that originally created this child.
    childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
  }

  "development" !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, ReactComponentTreeHook.getCurrentStackAddendum(element)) : void 0;
}

/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */
function validateChildKeys(node, parentType) {
  if (typeof node !== 'object') {
    return;
  }
  if (Array.isArray(node)) {
    for (var i = 0; i < node.length; i++) {
      var child = node[i];
      if (ReactElement.isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (ReactElement.isValidElement(node)) {
    // This element was passed in a valid location.
    if (node._store) {
      node._store.validated = true;
    }
  } else if (node) {
    var iteratorFn = getIteratorFn(node);
    // Entry iterators provide implicit keys.
    if (iteratorFn) {
      if (iteratorFn !== node.entries) {
        var iterator = iteratorFn.call(node);
        var step;
        while (!(step = iterator.next()).done) {
          if (ReactElement.isValidElement(step.value)) {
            validateExplicitKey(step.value, parentType);
          }
        }
      }
    }
  }
}

/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */
function validatePropTypes(element) {
  var componentClass = element.type;
  if (typeof componentClass !== 'function') {
    return;
  }
  var name = componentClass.displayName || componentClass.name;
  if (componentClass.propTypes) {
    checkReactTypeSpec(componentClass.propTypes, element.props, 'prop', name, element, null);
  }
  if (typeof componentClass.getDefaultProps === 'function') {
    "development" !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
  }
}

var ReactElementValidator = {

  createElement: function (type, props, children) {
    var validType = typeof type === 'string' || typeof type === 'function';
    // We warn in this case but don't throw. We expect the element creation to
    // succeed and there will likely be errors in render.
    if (!validType) {
      if (typeof type !== 'function' && typeof type !== 'string') {
        var info = '';
        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
          info += ' You likely forgot to export your component from the file ' + 'it\'s defined in.';
        }

        var sourceInfo = getSourceInfoErrorAddendum(props);
        if (sourceInfo) {
          info += sourceInfo;
        } else {
          info += getDeclarationErrorAddendum();
        }

        info += ReactComponentTreeHook.getCurrentStackAddendum();

        "development" !== 'production' ? warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', type == null ? type : typeof type, info) : void 0;
      }
    }

    var element = ReactElement.createElement.apply(this, arguments);

    // The result can be nullish if a mock or a custom function is used.
    // TODO: Drop this when these are no longer allowed as the type argument.
    if (element == null) {
      return element;
    }

    // Skip key warning if the type isn't valid since our key validation logic
    // doesn't expect a non-string/function type and can throw confusing errors.
    // We don't want exception behavior to differ between dev and prod.
    // (Rendering will throw with a helpful message and as soon as the type is
    // fixed, the key warnings will appear.)
    if (validType) {
      for (var i = 2; i < arguments.length; i++) {
        validateChildKeys(arguments[i], type);
      }
    }

    validatePropTypes(element);

    return element;
  },

  createFactory: function (type) {
    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
    // Legacy hook TODO: Warn if this is accessed
    validatedFactory.type = type;

    if ("development" !== 'production') {
      if (canDefineProperty) {
        Object.defineProperty(validatedFactory, 'type', {
          enumerable: false,
          get: function () {
            "development" !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : void 0;
            Object.defineProperty(this, 'type', {
              value: type
            });
            return type;
          }
        });
      }
    }

    return validatedFactory;
  },

  cloneElement: function (element, props, children) {
    var newElement = ReactElement.cloneElement.apply(this, arguments);
    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], newElement.type);
    }
    validatePropTypes(newElement);
    return newElement;
  }

};

module.exports = ReactElementValidator;
},{"10":10,"20":20,"21":21,"22":22,"30":30,"7":7,"8":8}],13:[function(_dereq_,module,exports){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var warning = _dereq_(30);

function warnNoop(publicInstance, callerName) {
  if ("development" !== 'production') {
    var constructor = publicInstance.constructor;
    "development" !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
  }
}

/**
 * This is the abstract API for an update queue.
 */
var ReactNoopUpdateQueue = {

  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    return false;
  },

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @internal
   */
  enqueueCallback: function (publicInstance, callback) {},

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance) {
    warnNoop(publicInstance, 'forceUpdate');
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState) {
    warnNoop(publicInstance, 'replaceState');
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState) {
    warnNoop(publicInstance, 'setState');
  }
};

module.exports = ReactNoopUpdateQueue;
},{"30":30}],14:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var ReactPropTypeLocationNames = {};

if ("development" !== 'production') {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
}

module.exports = ReactPropTypeLocationNames;
},{}],15:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _require = _dereq_(10),
    isValidElement = _require.isValidElement;

var factory = _dereq_(33);

module.exports = factory(isValidElement);
},{"10":10,"33":33}],16:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;
},{}],17:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = _dereq_(31);

var ReactComponent = _dereq_(6);
var ReactNoopUpdateQueue = _dereq_(13);

var emptyObject = _dereq_(28);

/**
 * Base class helpers for the updating state of a component.
 */
function ReactPureComponent(props, context, updater) {
  // Duplicated from ReactComponent.
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

function ComponentDummy() {}
ComponentDummy.prototype = ReactComponent.prototype;
ReactPureComponent.prototype = new ComponentDummy();
ReactPureComponent.prototype.constructor = ReactPureComponent;
// Avoid an extra prototype jump for these methods.
_assign(ReactPureComponent.prototype, ReactComponent.prototype);
ReactPureComponent.prototype.isPureReactComponent = true;

module.exports = ReactPureComponent;
},{"13":13,"28":28,"31":31,"6":6}],18:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = _dereq_(31);

var React = _dereq_(3);

// `version` will be added here by the React module.
var ReactUMDEntry = _assign(React, {
  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
    ReactCurrentOwner: _dereq_(8)
  }
});

if ("development" !== 'production') {
  _assign(ReactUMDEntry.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, {
    // ReactComponentTreeHook should not be included in production.
    ReactComponentTreeHook: _dereq_(7),
    getNextDebugID: _dereq_(23)
  });
}

module.exports = ReactUMDEntry;
},{"23":23,"3":3,"31":31,"7":7,"8":8}],19:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

module.exports = '15.5.4';
},{}],20:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var canDefineProperty = false;
if ("development" !== 'production') {
  try {
    // $FlowFixMe https://github.com/facebook/flow/issues/285
    Object.defineProperty({}, 'x', { get: function () {} });
    canDefineProperty = true;
  } catch (x) {
    // IE will fail on defineProperty
  }
}

module.exports = canDefineProperty;
},{}],21:[function(_dereq_,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = _dereq_(25);

var ReactPropTypeLocationNames = _dereq_(14);
var ReactPropTypesSecret = _dereq_(16);

var invariant = _dereq_(29);
var warning = _dereq_(30);

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && "development" === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = _dereq_(7);
}

var loggedTypeFailures = {};

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?object} element The React element that is being type-checked
 * @param {?number} debugID The React component instance that is being type-checked
 * @private
 */
function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
  for (var typeSpecName in typeSpecs) {
    if (typeSpecs.hasOwnProperty(typeSpecName)) {
      var error;
      // Prop type validation may throw. In case they do, we don't want to
      // fail the render phase where it didn't fail before. So we log it.
      // After these have been cleaned up, we'll let them throw.
      try {
        // This is intentionally an invariant that gets caught. It's the same
        // behavior as without this statement except with a better message.
        !(typeof typeSpecs[typeSpecName] === 'function') ? "development" !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
      } catch (ex) {
        error = ex;
      }
      "development" !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var componentStackInfo = '';

        if ("development" !== 'production') {
          if (!ReactComponentTreeHook) {
            ReactComponentTreeHook = _dereq_(7);
          }
          if (debugID !== null) {
            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
          } else if (element !== null) {
            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
          }
        }

        "development" !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
      }
    }
  }
}

module.exports = checkReactTypeSpec;
}).call(this,undefined)
},{"14":14,"16":16,"25":25,"29":29,"30":30,"7":7}],22:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

/* global Symbol */

var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

/**
 * Returns the iterator method function contained on the iterable object.
 *
 * Be sure to invoke the function with the iterable as context:
 *
 *     var iteratorFn = getIteratorFn(myIterable);
 *     if (iteratorFn) {
 *       var iterator = iteratorFn.call(myIterable);
 *       ...
 *     }
 *
 * @param {?object} maybeIterable
 * @return {?function}
 */
function getIteratorFn(maybeIterable) {
  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
  if (typeof iteratorFn === 'function') {
    return iteratorFn;
  }
}

module.exports = getIteratorFn;
},{}],23:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var nextDebugID = 1;

function getNextDebugID() {
  return nextDebugID++;
}

module.exports = getNextDebugID;
},{}],24:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
'use strict';

var _prodInvariant = _dereq_(25);

var ReactElement = _dereq_(10);

var invariant = _dereq_(29);

/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */
function onlyChild(children) {
  !ReactElement.isValidElement(children) ? "development" !== 'production' ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;
  return children;
}

module.exports = onlyChild;
},{"10":10,"25":25,"29":29}],25:[function(_dereq_,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
'use strict';

/**
 * WARNING: DO NOT manually require this module.
 * This is a replacement for `invariant(...)` used by the error code system
 * and will _only_ be required by the corresponding babel pass.
 * It always throws.
 */

function reactProdInvariant(code) {
  var argCount = arguments.length - 1;

  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

  for (var argIdx = 0; argIdx < argCount; argIdx++) {
    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
  }

  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

  var error = new Error(message);
  error.name = 'Invariant Violation';
  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

  throw error;
}

module.exports = reactProdInvariant;
},{}],26:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = _dereq_(25);

var ReactCurrentOwner = _dereq_(8);
var REACT_ELEMENT_TYPE = _dereq_(11);

var getIteratorFn = _dereq_(22);
var invariant = _dereq_(29);
var KeyEscapeUtils = _dereq_(1);
var warning = _dereq_(30);

var SEPARATOR = '.';
var SUBSEPARATOR = ':';

/**
 * This is inlined from ReactElement since this file is shared between
 * isomorphic and renderers. We could extract this to a
 *
 */

/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */

var didWarnAboutMaps = false;

/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
function getComponentKey(component, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (component && typeof component === 'object' && component.key != null) {
    // Explicit key
    return KeyEscapeUtils.escape(component.key);
  }
  // Implicit key determined by the index in the set
  return index.toString(36);
}

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  if (children === null || type === 'string' || type === 'number' ||
  // The following is inlined from ReactElement. This means we can optimize
  // some checks. React Fiber also inlines this logic for similar purposes.
  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
    callback(traverseContext, children,
    // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows.
    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.
  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);
    if (iteratorFn) {
      var iterator = iteratorFn.call(children);
      var step;
      if (iteratorFn !== children.entries) {
        var ii = 0;
        while (!(step = iterator.next()).done) {
          child = step.value;
          nextName = nextNamePrefix + getComponentKey(child, ii++);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        if ("development" !== 'production') {
          var mapsAsChildrenAddendum = '';
          if (ReactCurrentOwner.current) {
            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
            if (mapsAsChildrenOwnerName) {
              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
            }
          }
          "development" !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
          didWarnAboutMaps = true;
        }
        // Iterator will provide entry [k,v] tuples rather than values.
        while (!(step = iterator.next()).done) {
          var entry = step.value;
          if (entry) {
            child = entry[1];
            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
          }
        }
      }
    } else if (type === 'object') {
      var addendum = '';
      if ("development" !== 'production') {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
        if (children._isReactElement) {
          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
        }
        if (ReactCurrentOwner.current) {
          var name = ReactCurrentOwner.current.getName();
          if (name) {
            addendum += ' Check the render method of `' + name + '`.';
          }
        }
      }
      var childrenString = String(children);
      !false ? "development" !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
    }
  }

  return subtreeCount;
}

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}

module.exports = traverseAllChildren;
},{"1":1,"11":11,"22":22,"25":25,"29":29,"30":30,"8":8}],27:[function(_dereq_,module,exports){
"use strict";

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
var emptyFunction = function emptyFunction() {};

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

module.exports = emptyFunction;
},{}],28:[function(_dereq_,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var emptyObject = {};

if ("development" !== 'production') {
  Object.freeze(emptyObject);
}

module.exports = emptyObject;
},{}],29:[function(_dereq_,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var validateFormat = function validateFormat(format) {};

if ("development" !== 'production') {
  validateFormat = function validateFormat(format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
}

module.exports = invariant;
},{}],30:[function(_dereq_,module,exports){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var emptyFunction = _dereq_(27);

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = emptyFunction;

if ("development" !== 'production') {
  (function () {
    var printWarning = function printWarning(format) {
      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      var argIndex = 0;
      var message = 'Warning: ' + format.replace(/%s/g, function () {
        return args[argIndex++];
      });
      if (typeof console !== 'undefined') {
        console.error(message);
      }
      try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
      } catch (x) {}
    };

    warning = function warning(condition, format) {
      if (format === undefined) {
        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
      }

      if (format.indexOf('Failed Composite propType: ') === 0) {
        return; // Ignore CompositeComponent proptype check.
      }

      if (!condition) {
        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
          args[_key2 - 2] = arguments[_key2];
        }

        printWarning.apply(undefined, [format].concat(args));
      }
    };
  })();
}

module.exports = warning;
},{"27":27}],31:[function(_dereq_,module,exports){
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/

'use strict';
/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};

},{}],32:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

'use strict';

if ("development" !== 'production') {
  var invariant = _dereq_(29);
  var warning = _dereq_(30);
  var ReactPropTypesSecret = _dereq_(35);
  var loggedTypeFailures = {};
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if ("development" !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (typeSpecs.hasOwnProperty(typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', location, typeSpecName);
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
        }
      }
    }
  }
}

module.exports = checkPropTypes;

},{"29":29,"30":30,"35":35}],33:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

'use strict';

// React 15.5 references this module, and assumes PropTypes are still callable in production.
// Therefore we re-export development-only version with all the PropTypes checks here.
// However if one is migrating to the `prop-types` npm library, they will go through the
// `index.js` entry point, and it will branch depending on the environment.
var factory = _dereq_(34);
module.exports = function(isValidElement) {
  // It is still allowed in 15.5.
  var throwOnDirectAccess = false;
  return factory(isValidElement, throwOnDirectAccess);
};

},{"34":34}],34:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

'use strict';

var emptyFunction = _dereq_(27);
var invariant = _dereq_(29);
var warning = _dereq_(30);

var ReactPropTypesSecret = _dereq_(35);
var checkPropTypes = _dereq_(32);

module.exports = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if ("development" !== 'production') {
      var manualPropTypeCallCache = {};
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          invariant(
            false,
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
        } else if ("development" !== 'production' && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (!manualPropTypeCallCache[cacheKey]) {
            warning(
              false,
              'You are manually calling a React.PropTypes validation ' +
              'function for the `%s` prop on `%s`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',
              propFullName,
              componentName
            );
            manualPropTypeCallCache[cacheKey] = true;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunction.thatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      "development" !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues);
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (propValue.hasOwnProperty(key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      "development" !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

},{"27":27,"29":29,"30":30,"32":32,"35":35}],35:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

'use strict';

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;

},{}]},{},[18])(18)
});
(function ($global) { "use strict";
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = ["EReg"];
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.dateStr = function(date) {
	var m = date.getMonth() + 1;
	var d = date.getDate();
	var h = date.getHours();
	var mi = date.getMinutes();
	var s = date.getSeconds();
	return date.getFullYear() + "-" + (m < 10 ? "0" + m : "" + m) + "-" + (d < 10 ? "0" + d : "" + d) + " " + (h < 10 ? "0" + h : "" + h) + ":" + (mi < 10 ? "0" + mi : "" + mi) + ":" + (s < 10 ? "0" + s : "" + s);
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Lambda = function() { };
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = ["Lambda"];
Lambda.has = function(it,elt) {
	var x = $iterator(it)();
	while(x.hasNext()) {
		var x1 = x.next();
		if(x1 == elt) {
			return true;
		}
	}
	return false;
};
Lambda.exists = function(it,f) {
	var x = $iterator(it)();
	while(x.hasNext()) {
		var x1 = x.next();
		if(f(x1)) {
			return true;
		}
	}
	return false;
};
var List = function() {
	this.length = 0;
};
$hxClasses["List"] = List;
List.__name__ = ["List"];
List.prototype = {
	iterator: function() {
		return new _$List_ListIterator(this.h);
	}
	,__class__: List
};
var _$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["_List.ListNode"] = _$List_ListNode;
_$List_ListNode.__name__ = ["_List","ListNode"];
_$List_ListNode.prototype = {
	__class__: _$List_ListNode
};
var _$List_ListIterator = function(head) {
	this.head = head;
};
$hxClasses["_List.ListIterator"] = _$List_ListIterator;
_$List_ListIterator.__name__ = ["_List","ListIterator"];
_$List_ListIterator.prototype = {
	hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return val;
	}
	,__class__: _$List_ListIterator
};
var Main = function() {
	this.ccTypeArray = [art_CC100,art_TestExport,art_ZipTest,art_CCLoader,art_TestGo];
	var _gthis = this;
	window.document.addEventListener("DOMContentLoaded",function(event) {
		window.console.log("" + cc_model_constants_App.NAME + " :: build: " + cc_model_constants_App.BUILD);
		_gthis.setupCC();
		_gthis.setupNav();
	});
};
$hxClasses["Main"] = Main;
Main.__name__ = ["Main"];
Main.main = function() {
	var app = new Main();
};
Main.prototype = {
	setupCC: function() {
		var ctx = Sketch.create("creative_code_mck");
		this.hash = window.location.hash;
		this.hash = StringTools.replace(this.hash,"#","");
		var clazz = Type.resolveClass("art." + this.hash);
		if(clazz == null) {
			clazz = this.ccTypeArray[this.ccTypeArray.length - 1];
		}
		this.count = this.ccTypeArray.indexOf(clazz);
		var cc = Type.createInstance(clazz,[ctx]);
		this.changeHash();
	}
	,setupNav: function() {
		var _gthis = this;
		window.addEventListener("hashchange",function() {
			window.location.reload();
		},false);
		window.addEventListener("keydown",function(e) {
			var _g = e.key;
			switch(_g) {
			case "ArrowDown":
				_gthis.count = 0;
				break;
			case "ArrowLeft":
				_gthis.count--;
				break;
			case "ArrowRight":
				_gthis.count++;
				break;
			case "ArrowUp":
				_gthis.count = _gthis.ccTypeArray.length - 1;
				break;
			}
			_gthis.changeHash();
		},false);
	}
	,changeHash: function() {
		var tmp = Type.getClassName(this.ccTypeArray[this.count]);
		window.location.hash = StringTools.replace(tmp,"art.","");
	}
	,__class__: Main
};
Math.__name__ = ["Math"];
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = ["Reflect"];
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + field];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[field] = value;
	}
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
var SketchOption = function() {
	this._dpi = 72;
	this._padding = 20;
	this._scale = false;
	this._type = "canvas";
	this._container = window.document.body;
	this._autopause = true;
	this._autostart = true;
	this._autoclear = true;
	this._fullscreen = true;
};
$hxClasses["SketchOption"] = SketchOption;
SketchOption.__name__ = ["SketchOption"];
SketchOption.prototype = {
	get_width: function() {
		return this._width;
	}
	,set_width: function(value) {
		this._fullscreen = false;
		if(this._height == null) {
			this._height = value;
		}
		return this._width = value;
	}
	,get_height: function() {
		return this._height;
	}
	,set_height: function(value) {
		this._fullscreen = false;
		if(this._width == null) {
			this._width = value;
		}
		return this._height = value;
	}
	,get_fullscreen: function() {
		return this._fullscreen;
	}
	,set_fullscreen: function(value) {
		return this._fullscreen = value;
	}
	,get_autoclear: function() {
		return this._autoclear;
	}
	,set_autoclear: function(value) {
		return this._autostart = value;
	}
	,get_autostart: function() {
		return this._autostart;
	}
	,set_autostart: function(value) {
		return this._autostart = value;
	}
	,get_autopause: function() {
		return this._autopause;
	}
	,set_autopause: function(value) {
		return this._autopause = value;
	}
	,get_container: function() {
		return this._container;
	}
	,set_container: function(value) {
		return this._container = value;
	}
	,get_type: function() {
		return this._type;
	}
	,set_type: function(value) {
		return this._type = value;
	}
	,get_scale: function() {
		return this._scale;
	}
	,set_scale: function(value) {
		return this._scale = value;
	}
	,get_padding: function() {
		return this._padding;
	}
	,set_padding: function(value) {
		return this._padding = value;
	}
	,get_dpi: function() {
		return this._dpi;
	}
	,set_dpi: function(value) {
		return this._dpi = value;
	}
	,__class__: SketchOption
	,__properties__: {set_dpi:"set_dpi",get_dpi:"get_dpi",set_padding:"set_padding",get_padding:"get_padding",set_scale:"set_scale",get_scale:"get_scale",set_type:"set_type",get_type:"get_type",set_container:"set_container",get_container:"get_container",set_autopause:"set_autopause",get_autopause:"get_autopause",set_autostart:"set_autostart",get_autostart:"get_autostart",set_autoclear:"set_autoclear",get_autoclear:"get_autoclear",set_fullscreen:"set_fullscreen",get_fullscreen:"get_fullscreen",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width"}
};
var Sketch = function() {
	this.document = window.document;
	this.window = window;
};
$hxClasses["Sketch"] = Sketch;
Sketch.__name__ = ["Sketch"];
Sketch.create = function(name,opt) {
	if(opt != null) {
		Sketch.option = opt;
	}
	if(Sketch.option.get_type() == "canvas") {
		return new Sketch().createCanvas(name);
	} else {
		return new Sketch().createGLCanvas(name);
	}
};
Sketch.createHiddenCanvas = function(name,option,isDebug) {
	if(isDebug == null) {
		isDebug = false;
	}
	if(option == null) {
		option = new SketchOption();
	}
	var body = window.document.querySelector("body");
	var canvas = window.document.createElement("canvas");
	body.appendChild(canvas);
	var __w = Math.min(Global.w * 0.50,option.get_width());
	canvas.setAttribute("id","hiddencanvas-" + name);
	canvas.style.position = "absolute";
	canvas.style.left = "0px";
	canvas.style.top = "0px";
	canvas.style.border = "1px solid pink";
	canvas.style.width = "" + __w + "px";
	canvas.width = option.get_width();
	canvas.height = option.get_height();
	if(!isDebug) {
		var tmp = option.get_width();
		canvas.style.left = -(tmp * 1.5) + "px";
	}
	var ctx = canvas.getContext("2d");
	return ctx;
};
Sketch.prototype = {
	createCanvas: function(name) {
		var body = this.document.querySelector("body");
		if(this.document.getElementById("canvas-wrapper") != null) {
			var element = this.document.getElementById("canvas-wrapper");
			element.parentNode.removeChild(element);
			this.window.addEventListener(Global.RESIZE,null,false);
			this.window.addEventListener(Global.MOUSE_MOVE,null,false);
			this.window.addEventListener(Global.MOUSE_DOWN,null,false);
			this.window.addEventListener(Global.MOUSE_UP,null,false);
			this.window.addEventListener(Global.KEY_DOWN,null,false);
		}
		var container = this.document.createElement("div");
		container.setAttribute("id","canvas-wrapper");
		container.className = "canvas-wrapper-container";
		this.canvas = this.document.createElement("canvas");
		this.canvas.setAttribute("id",name);
		body.appendChild(container);
		container.appendChild(this.canvas);
		this.ctx = this.canvas.getContext("2d");
		new Sketch().init(this.ctx);
		this.onResizeHandler();
		this.window.addEventListener(Global.RESIZE,$bind(this,this.onResizeHandler),false);
		return this.ctx;
	}
	,createGLCanvas: function(name) {
		return null;
	}
	,checkForId: function(id) {
		return true;
	}
	,onResizeHandler: function() {
		var c = this.document.getElementsByTagName("canvas");
		if(Sketch.option == null) {
			return;
		}
		if(Sketch.option.get_fullscreen()) {
			Global.w = this.window.innerWidth;
			Global.h = this.window.innerHeight;
			Sketch.option.set_width(Global.w);
			Sketch.option.set_height(Global.h);
		} else {
			Global.w = Sketch.option.get_width();
			Global.h = Sketch.option.get_height();
		}
		var _g1 = 0;
		var _g = c.length;
		while(_g1 < _g) {
			var i = _g1++;
			var _c = c[i];
			if(Sketch.option.get_scale()) {
				var padding = Sketch.option.get_padding();
				var scaleX = (this.window.innerWidth - 2 * padding) / Global.w;
				var scaleY = (this.window.innerHeight - 2 * padding) / Global.h;
				var scale = Math.min(scaleX,scaleY);
				var tmp = "" + Sketch.option.get_width() * scale;
				_c.style.width = tmp + "px";
				var tmp1 = "" + Sketch.option.get_height() * scale;
				_c.style.height = tmp1 + "px";
			}
			if(_c.id.indexOf("hiddencanvas-") != -1) {
				continue;
			}
			_c.width = Global.w;
			_c.height = Global.h;
		}
		window.console.log("RESIZE :: w=" + Global.w + " , h=" + Global.h);
	}
	,init: function(ctx) {
		var _gthis = this;
		this.window.addEventListener(Global.MOUSE_MOVE,function(e) {
			Global.mouseX = e.clientX;
			Global.mouseY = e.clientY;
			Global.mouseMoved = true;
		});
		this.window.addEventListener(Global.MOUSE_DOWN,function(e1) {
			Global.mouseDown = true;
		});
		this.window.addEventListener(Global.MOUSE_UP,function(e2) {
			Global.mouseDown = false;
		});
		this.window.addEventListener(Global.KEY_DOWN,function(e3) {
			if(e3.metaKey == true && e3.key == "r") {
				haxe_Log.trace("cmd + r",{ fileName : "Sketch.hx", lineNumber : 197, className : "Sketch", methodName : "init"});
				window.location.reload();
			}
			if(e3.metaKey == true && e3.key == "s" && e3.shiftKey == false) {
				e3.preventDefault();
				e3.stopPropagation();
				haxe_Log.trace("cmd + s",{ fileName : "Sketch.hx", lineNumber : 203, className : "Sketch", methodName : "init"});
				cc_tool_ExportFile.downloadImageBg(ctx,true);
			}
			if(e3.metaKey == true && e3.key == "s" && e3.shiftKey == true) {
				e3.preventDefault();
				e3.stopPropagation();
				haxe_Log.trace("cmd + shift + s",{ fileName : "Sketch.hx", lineNumber : 209, className : "Sketch", methodName : "init"});
				cc_tool_ExportFile.downloadImage(ctx,false);
			}
			if(e3.metaKey == true && (e3.code == "KeyS" && e3.altKey == true)) {
				e3.preventDefault();
				e3.stopPropagation();
				haxe_Log.trace("cmd + alt + s",{ fileName : "Sketch.hx", lineNumber : 215, className : "Sketch", methodName : "init"});
				cc_tool_ExportFile.onBase64Handler(ctx,true);
			}
			if(e3.metaKey == true && e3.key == "f") {
				if(!Global.isFullscreen) {
					_gthis.openFullscreen();
					Global.isFullscreen = true;
				} else {
					_gthis.closeFullscreen();
					Global.isFullscreen = false;
				}
			}
		},false);
	}
	,openFullscreen: function() {
		var elem = this.document.documentElement;
		if($bind(elem,elem.requestFullscreen) != null) {
			elem.requestFullscreen();
		} else if(elem.mozRequestFullScreen) {
			elem.mozRequestFullScreen();
		} else if(elem.webkitRequestFullscreen) {
			elem.webkitRequestFullscreen();
		} else if(elem.msRequestFullscreen) {
			elem.msRequestFullscreen();
		}
	}
	,closeFullscreen: function() {
		if(($_=this.document,$bind($_,$_.exitFullscreen)) != null) {
			this.document.exitFullscreen();
		} else if(this.document.mozCancelFullScreen) {
			this.document.mozCancelFullScreen();
		} else if(this.document.webkitExitFullscreen) {
			this.document.webkitExitFullscreen();
		} else if(this.document.msExitFullscreen) {
			this.document.msExitFullscreen();
		}
	}
	,__class__: Sketch
};
var SketchBase = function(ctx) {
	this.dpiScale = 1;
	this.isDebug = false;
	this.isDrawActive = true;
	if(this.isDebug) {
		haxe_Log.trace("START :: " + this.toString(),{ fileName : "Sketch.hx", lineNumber : 514, className : "SketchBase", methodName : "new"});
	}
	if(ctx == null) {
		var option = new SketchOption();
		option.set_width(1080);
		option.set_autostart(true);
		option.set_padding(10);
		option.set_scale(true);
		ctx = Sketch.create("creative_code_mck",option);
	}
	this.dpiScale = Sketch.option.get_dpi() / 72;
	this.ctx = ctx;
	window.addEventListener(Global.RESIZE,$bind(this,this._reset),false);
	window.addEventListener(Global.KEY_DOWN,$bind(this,this._keyDown),false);
	window.addEventListener(Global.KEY_UP,$bind(this,this._keyUp),false);
	this.setup();
	this._draw();
};
$hxClasses["SketchBase"] = SketchBase;
SketchBase.__name__ = ["SketchBase"];
SketchBase.prototype = {
	_keyDown: function(e) {
		var _g = e.key;
		if(_g == " ") {
			this.draw();
		}
	}
	,_keyUp: function(e) {
	}
	,_reset: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		this._draw();
	}
	,_draw: function(timestamp) {
		this.draw();
		this.__export();
		if(this.isDrawActive) {
			window.requestAnimationFrame($bind(this,this._draw));
		}
	}
	,setup: function() {
		if(this.isDebug) {
			haxe_Log.trace("SETUP :: " + this.toString() + " -> override public function draw()",{ fileName : "Sketch.hx", lineNumber : 576, className : "SketchBase", methodName : "setup"});
		}
	}
	,draw: function() {
		if(this.isDebug) {
			haxe_Log.trace("DRAW :: " + this.toString() + " -> override public function draw()",{ fileName : "Sketch.hx", lineNumber : 584, className : "SketchBase", methodName : "draw"});
		}
	}
	,__export: function() {
	}
	,pause: function() {
		this.isDrawActive = !this.isDrawActive;
	}
	,stop: function() {
		this.isDrawActive = false;
	}
	,play: function() {
		this.isDrawActive = true;
		this._draw();
	}
	,start: function() {
		this.play();
	}
	,onKeyDown: function(e) {
	}
	,scaled: function(value) {
		return value * this.dpiScale;
	}
	,scaledInt: function(value) {
		return value * this.dpiScale | 0;
	}
	,get_w2: function() {
		return Global.w / 2;
	}
	,get_h2: function() {
		return Global.h / 2;
	}
	,get_w4: function() {
		return Global.w / 4;
	}
	,get_h4: function() {
		return Global.h / 4;
	}
	,get_w3: function() {
		return Global.w / 3;
	}
	,get_h3: function() {
		return Global.h / 3;
	}
	,toString: function() {
		var className = Type.getClassName(js_Boot.getClass(this));
		return className;
	}
	,__class__: SketchBase
	,__properties__: {get_h3:"get_h3",get_w3:"get_w3",get_h4:"get_h4",get_w4:"get_w4",get_h2:"get_h2",get_w2:"get_w2"}
};
var Global = function() { };
$hxClasses["Global"] = Global;
Global.__name__ = ["Global"];
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = ["Std"];
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = ["StringTools"];
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.lpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	while(s.length < l) s = c + s;
	return s;
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
StringTools.hex = function(n,digits) {
	var s = "";
	var hexChars = "0123456789ABCDEF";
	while(true) {
		s = hexChars.charAt(n & 15) + s;
		n >>>= 4;
		if(!(n > 0)) {
			break;
		}
	}
	if(digits != null) {
		while(s.length < digits) s = "0" + s;
	}
	return s;
};
var ValueType = { __ename__ : true, __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"] };
ValueType.TNull = ["TNull",0];
ValueType.TNull.toString = $estr;
ValueType.TNull.__enum__ = ValueType;
ValueType.TInt = ["TInt",1];
ValueType.TInt.toString = $estr;
ValueType.TInt.__enum__ = ValueType;
ValueType.TFloat = ["TFloat",2];
ValueType.TFloat.toString = $estr;
ValueType.TFloat.__enum__ = ValueType;
ValueType.TBool = ["TBool",3];
ValueType.TBool.toString = $estr;
ValueType.TBool.__enum__ = ValueType;
ValueType.TObject = ["TObject",4];
ValueType.TObject.toString = $estr;
ValueType.TObject.__enum__ = ValueType;
ValueType.TFunction = ["TFunction",5];
ValueType.TFunction.toString = $estr;
ValueType.TFunction.__enum__ = ValueType;
ValueType.TClass = function(c) { var $x = ["TClass",6,c]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TEnum = function(e) { var $x = ["TEnum",7,e]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TUnknown = ["TUnknown",8];
ValueType.TUnknown.toString = $estr;
ValueType.TUnknown.__enum__ = ValueType;
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = ["Type"];
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) {
		return null;
	}
	return a.join(".");
};
Type.resolveClass = function(name) {
	var cl = $hxClasses[name];
	if(cl == null || !cl.__name__) {
		return null;
	}
	return cl;
};
Type.createInstance = function(cl,args) {
	var _g = args.length;
	switch(_g) {
	case 0:
		return new cl();
	case 1:
		return new cl(args[0]);
	case 2:
		return new cl(args[0],args[1]);
	case 3:
		return new cl(args[0],args[1],args[2]);
	case 4:
		return new cl(args[0],args[1],args[2],args[3]);
	case 5:
		return new cl(args[0],args[1],args[2],args[3],args[4]);
	case 6:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5]);
	case 7:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);
	case 8:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);
	case 9:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8]);
	case 10:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9]);
	case 11:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10]);
	case 12:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11]);
	case 13:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12]);
	case 14:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12],args[13]);
	default:
		throw new js__$Boot_HaxeError("Too many arguments");
	}
};
Type["typeof"] = function(v) {
	var _g = typeof(v);
	switch(_g) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum(e);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
var art_CC100 = function() {
	this._color4 = null;
	this._color3 = null;
	this._color2 = null;
	this._color1 = null;
	this._color0 = null;
	this._cellsize = 150;
	this._radius = 150;
	this.grid = new cc_util_GridUtil();
	this.shapeArray = [];
	this.init();
	SketchBase.call(this,null);
	haxe_Log.trace(new cc_model_constants_Sizes().INSTAGRAM,{ fileName : "CC100.hx", lineNumber : 32, className : "art.CC100", methodName : "new"});
};
$hxClasses["art.CC100"] = art_CC100;
art_CC100.__name__ = ["art","CC100"];
art_CC100.__super__ = SketchBase;
art_CC100.prototype = $extend(SketchBase.prototype,{
	init: function() {
		this.dot = this.createShape(100,{ x : Global.w / 2, y : Global.h / 2});
		cc_draw_Text.embedGoogleFont("Oswald:200,300,400,500,600,700",$bind(this,this.onEmbedHandler));
		this.createQuickSettings();
		this.onAnimateHandler(this.dot);
	}
	,onEmbedHandler: function(e) {
		haxe_Log.trace("onEmbedHandler :: " + this.toString() + " -> \"" + e + "\"",{ fileName : "CC100.hx", lineNumber : 44, className : "art.CC100", methodName : "onEmbedHandler"});
		this.drawShape();
	}
	,createQuickSettings: function() {
		this.panel1 = QuickSettings.create(10,10,"Settings").setGlobalChangeHandler($bind(this,this.drawShape)).addHTML("Reason","Sometimes I need to find the best settings").addTextArea("Quote","text",function(value) {
			haxe_Log.trace(value,{ fileName : "CC100.hx", lineNumber : 55, className : "art.CC100", methodName : "createQuickSettings"});
		}).addBoolean("All Caps",false,function(value1) {
			haxe_Log.trace(value1,{ fileName : "CC100.hx", lineNumber : 56, className : "art.CC100", methodName : "createQuickSettings"});
		}).setKey("h").saveInLocalStorage("store-data-" + this.toString());
	}
	,createShape: function(i,point) {
		var shape = { _id : "" + i, _type : "circle", x : point.x, y : point.y, radius : this._radius};
		return shape;
	}
	,onAnimateHandler: function(obj) {
		var padding = 50;
		var time = cc_util_MathUtil.random(1,2);
		var xpos = cc_util_MathUtil.random(padding,Global.w - 2 * padding);
		var ypos = cc_util_MathUtil.random(padding,Global.h - 2 * padding);
		var Go = new cc_lets_Go(obj,time);
		Go._isFrom = false;
		var _this = Go;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"x")) {
			objValue = Reflect.getProperty(_this._target,"x");
		}
		var _range = { key : "x", from : _this._isFrom ? xpos : objValue, to : !_this._isFrom ? xpos : objValue};
		_this._props.set("x",_range);
		if(_this._isFrom) {
			_this.updateProperties(0);
		}
		var _this1 = _this;
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"y")) {
			objValue1 = Reflect.getProperty(_this1._target,"y");
		}
		var _range1 = { key : "y", from : _this1._isFrom ? ypos : objValue1, to : !_this1._isFrom ? ypos : objValue1};
		_this1._props.set("y",_range1);
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this2 = _this1;
		_this2._easing = cc_lets_easing_Sine.get_easeInOut();
		var _this3 = _this2;
		_this3._options.onComplete = $bind(this,this.onAnimateHandler);
		_this3._options.onCompleteParams = [obj];
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		if(this.isDebug) {
			cc_util_ShapeUtil.gridField(this.ctx,this.grid);
		}
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
		}
		this.ctx.fillStyle = cc_util_ColorUtil.getColourObj(this._color4);
		cc_draw_Text.fillText(this.ctx,"text",Global.w / 2,Global.h / 2,"'Oswald', sans-serif;",160);
		cc_CanvasTools.strokeColourRGB(this.ctx,this._color3);
		cc_CanvasTools.strokeWeight(this.ctx,2);
		cc_CanvasTools.circleStroke(this.ctx,this.dot.x,this.dot.y,20);
	}
	,setup: function() {
		haxe_Log.trace("SETUP :: " + this.toString(),{ fileName : "CC100.hx", lineNumber : 111, className : "art.CC100", methodName : "setup"});
		var colorArray = cc_util_ColorUtil.niceColor100SortedString[cc_util_MathUtil.randomInt(cc_util_ColorUtil.niceColor100SortedString.length - 1)];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._color0 = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		this._color1 = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
		var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		this._color2 = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
		var int3 = Std.parseInt(StringTools.replace(colorArray[3],"#","0x"));
		this._color3 = { r : int3 >> 16 & 255, g : int3 >> 8 & 255, b : int3 & 255};
		var int4 = Std.parseInt(StringTools.replace(colorArray[4],"#","0x"));
		this._color4 = { r : int4 >> 16 & 255, g : int4 >> 8 & 255, b : int4 & 255};
		this.isDebug = true;
		this.grid.setCellSize(this._cellsize);
		this.grid.setIsCenterPoint(true);
		this.shapeArray = [];
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i,this.grid.array[i]));
		}
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_CC100
});
var art_CCLoader = function() {
	this._color4 = null;
	this._color3 = null;
	this._color2 = null;
	this._color1 = null;
	this._color0 = null;
	this._cellsize = 150;
	this._radius = 150;
	this.grid = new cc_util_GridUtil();
	this.shapeArray = [];
	SketchBase.call(this,null);
};
$hxClasses["art.CCLoader"] = art_CCLoader;
art_CCLoader.__name__ = ["art","CCLoader"];
art_CCLoader.__super__ = SketchBase;
art_CCLoader.prototype = $extend(SketchBase.prototype,{
	setup: function() {
		haxe_Log.trace("SETUP :: " + this.toString(),{ fileName : "CCLoader.hx", lineNumber : 27, className : "art.CCLoader", methodName : "setup"});
		var loader = new cc_tool_Loader("name");
		var _this = loader;
		var _type = _this.fileType("img/aaron-burden-38410-unsplash.jpg");
		var _obj = { path : "img/aaron-burden-38410-unsplash.jpg", type : _type, func : null};
		if(_this.get__isDebug()) {
			haxe_Log.trace(_obj,{ fileName : "Loader.hx", lineNumber : 76, className : "cc.tool.Loader", methodName : "add"});
		}
		_this.get__loadingArray().push(_obj);
		var _this1 = _this;
		var _type1 = _this1.fileType("img/miguel-ibanez-643801-unsplash.jpg");
		var _obj1 = { path : "img/miguel-ibanez-643801-unsplash.jpg", type : _type1, func : null};
		if(_this1.get__isDebug()) {
			haxe_Log.trace(_obj1,{ fileName : "Loader.hx", lineNumber : 76, className : "cc.tool.Loader", methodName : "add"});
		}
		_this1.get__loadingArray().push(_obj1);
		var _this2 = _this1;
		var _type2 = _this2.fileType("img/nathan-dumlao-526295-unsplash.jpg");
		var _obj2 = { path : "img/nathan-dumlao-526295-unsplash.jpg", type : _type2, func : null};
		if(_this2.get__isDebug()) {
			haxe_Log.trace(_obj2,{ fileName : "Loader.hx", lineNumber : 76, className : "cc.tool.Loader", methodName : "add"});
		}
		_this2.get__loadingArray().push(_obj2);
		var _this3 = _this2;
		var _type3 = _this3.fileType("img/foobar.jpg");
		var _obj3 = { path : "img/foobar.jpg", type : _type3, func : null};
		if(_this3.get__isDebug()) {
			haxe_Log.trace(_obj3,{ fileName : "Loader.hx", lineNumber : 76, className : "cc.tool.Loader", methodName : "add"});
		}
		_this3.get__loadingArray().push(_obj3);
		var _this4 = _this3;
		_this4._onComplete = $bind(this,this.onCompleteHandler);
		_this4._onCompleteParams = null;
		var _this5 = _this4;
		_this5._onUpdate = $bind(this,this.onUpdateHandler);
		_this5._onUpdateParams = null;
		var _this6 = _this5;
		_this6._onProgress = $bind(this,this.onProgressHandler);
		_this6._onProgressParams = null;
		var _this7 = _this6;
		_this7._onError = $bind(this,this.onErrorHandler);
		_this7._onErrorParams = null;
		var _this8 = _this7;
		if(_this8.get__isDebug()) {
			haxe_Log.trace("start loading",{ fileName : "Loader.hx", lineNumber : 121, className : "cc.tool.Loader", methodName : "load"});
		}
		_this8.loadingHandler();
	}
	,onCompleteHandler: function(completeArray) {
		haxe_Log.trace("onCompleteHandler: " + completeArray.length,{ fileName : "CCLoader.hx", lineNumber : 49, className : "art.CCLoader", methodName : "onCompleteHandler"});
	}
	,onUpdateHandler: function(e) {
		haxe_Log.trace("onUpdateHandler: " + e.src,{ fileName : "CCLoader.hx", lineNumber : 53, className : "art.CCLoader", methodName : "onUpdateHandler"});
	}
	,onProgressHandler: function(e) {
		haxe_Log.trace("onProgressHandler: " + Std.string(e),{ fileName : "CCLoader.hx", lineNumber : 57, className : "art.CCLoader", methodName : "onProgressHandler"});
	}
	,onErrorHandler: function(e) {
		haxe_Log.trace("onErrorHandler: " + e.src,{ fileName : "CCLoader.hx", lineNumber : 61, className : "art.CCLoader", methodName : "onErrorHandler"});
	}
	,draw: function() {
	}
	,__class__: art_CCLoader
});
var cc_tool_export_ExportBase = function(ctx) {
	this._isDebug = false;
	this.imageStringArray = [];
	this["export"] = new cc_tool_export_ExportWrapper(ctx,this.toString());
	this["export"].delay(0);
	this["export"].recordInSeconds(10);
	this["export"].menu(false);
	this["export"].type(cc_tool_export_ExportType.NONE);
	this["export"].onRecordStart($bind(this,this.onRecordStartHandler));
	this["export"].onRecordComplete($bind(this,this.onRecordCompleteHandler));
	this["export"].onExportComplete($bind(this,this.onExportCompleteHandler));
	SketchBase.call(this,ctx);
};
$hxClasses["cc.tool.export.ExportBase"] = cc_tool_export_ExportBase;
cc_tool_export_ExportBase.__name__ = ["cc","tool","export","ExportBase"];
cc_tool_export_ExportBase.__super__ = SketchBase;
cc_tool_export_ExportBase.prototype = $extend(SketchBase.prototype,{
	onRecordStartHandler: function() {
		if(this["export"].get__isDebug()) {
			haxe_Log.trace("" + this.toString() + " onRecordStartHandler",{ fileName : "ExportBase.hx", lineNumber : 46, className : "cc.tool.export.ExportBase", methodName : "onRecordStartHandler"});
		}
	}
	,onRecordCompleteHandler: function() {
		if(this["export"].get__isDebug()) {
			haxe_Log.trace("" + this.toString() + " onRecordCompleteHandler",{ fileName : "ExportBase.hx", lineNumber : 51, className : "cc.tool.export.ExportBase", methodName : "onRecordCompleteHandler"});
		}
		this.stop();
	}
	,onExportCompleteHandler: function() {
		if(this["export"].get__isDebug()) {
			haxe_Log.trace("" + this.toString() + " onExportCompleteHandler",{ fileName : "ExportBase.hx", lineNumber : 57, className : "cc.tool.export.ExportBase", methodName : "onExportCompleteHandler"});
		}
		this.start();
	}
	,debug: function(isDebug) {
		if(isDebug == null) {
			isDebug = false;
		}
		this._isDebug = isDebug;
	}
	,__export: function() {
		this["export"].pulse();
	}
	,__class__: cc_tool_export_ExportBase
});
var art_TestExport = function() {
	this._color4 = null;
	this._color3 = null;
	this._color2 = null;
	this._color1 = null;
	this._color0 = null;
	this._cellsize = 150;
	this._radius = 150;
	this.grid = new cc_util_GridUtil();
	this.shapeArray = [];
	var option = new SketchOption();
	option.set_width(1080);
	option.set_autostart(true);
	option.set_padding(10);
	option.set_scale(true);
	this.ctx = Sketch.create("creative_code_mck",option);
	cc_tool_export_ExportBase.call(this,this.ctx);
	this.init();
};
$hxClasses["art.TestExport"] = art_TestExport;
art_TestExport.__name__ = ["art","TestExport"];
art_TestExport.__super__ = cc_tool_export_ExportBase;
art_TestExport.prototype = $extend(cc_tool_export_ExportBase.prototype,{
	init: function() {
		this["export"].delayInSeconds(2);
		this["export"].recordInSeconds(2);
		this["export"].type(cc_tool_export_ExportType.NODE);
		this["export"].isDebug(false);
		this["export"].start();
		this.dot = this.createShape(100,{ x : Global.w / 2, y : Global.h / 2});
		this.onAnimateHandler(this.dot);
	}
	,createShape: function(i,point) {
		var shape = { _id : "" + i, _type : "circle", x : point.x, y : point.y, radius : this._radius};
		return shape;
	}
	,onAnimateHandler: function(obj) {
		var padding = 50;
		var time = cc_util_MathUtil.random(1,2);
		var xpos = cc_util_MathUtil.random(padding,Global.w - 2 * padding);
		var ypos = cc_util_MathUtil.random(padding,Global.h - 2 * padding);
		var Go = new cc_lets_Go(obj,time);
		Go._isFrom = false;
		var _this = Go;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"x")) {
			objValue = Reflect.getProperty(_this._target,"x");
		}
		var _range = { key : "x", from : _this._isFrom ? xpos : objValue, to : !_this._isFrom ? xpos : objValue};
		_this._props.set("x",_range);
		if(_this._isFrom) {
			_this.updateProperties(0);
		}
		var _this1 = _this;
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"y")) {
			objValue1 = Reflect.getProperty(_this1._target,"y");
		}
		var _range1 = { key : "y", from : _this1._isFrom ? ypos : objValue1, to : !_this1._isFrom ? ypos : objValue1};
		_this1._props.set("y",_range1);
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this2 = _this1;
		_this2._easing = cc_lets_easing_Sine.get_easeInOut();
		var _this3 = _this2;
		_this3._options.onComplete = $bind(this,this.onAnimateHandler);
		_this3._options.onCompleteParams = [obj];
	}
	,drawShape: function() {
		if(this.dot == null) {
			return;
		}
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		if(this.isDebug) {
			cc_util_ShapeUtil.gridField(this.ctx,this.grid);
		}
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
		}
		var rgb = cc_util_ColorUtil.randomColourObject();
		cc_CanvasTools.strokeColour(this.ctx,rgb.r,rgb.g,rgb.b);
		cc_util_ShapeUtil.xcross(this.ctx,Global.w / 2,Global.h / 2,200);
		cc_CanvasTools.strokeColourRGB(this.ctx,this._color3);
		cc_CanvasTools.strokeWeight(this.ctx,100);
		cc_CanvasTools.circleStroke(this.ctx,this.dot.x,this.dot.y,100);
	}
	,setup: function() {
		haxe_Log.trace("SETUP :: " + this.toString(),{ fileName : "TestExport.hx", lineNumber : 103, className : "art.TestExport", methodName : "setup"});
		var colorArray = cc_util_ColorUtil.niceColor100SortedString[cc_util_MathUtil.randomInt(cc_util_ColorUtil.niceColor100SortedString.length - 1)];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._color0 = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		this._color1 = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
		var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		this._color2 = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
		var int3 = Std.parseInt(StringTools.replace(colorArray[3],"#","0x"));
		this._color3 = { r : int3 >> 16 & 255, g : int3 >> 8 & 255, b : int3 & 255};
		var int4 = Std.parseInt(StringTools.replace(colorArray[4],"#","0x"));
		this._color4 = { r : int4 >> 16 & 255, g : int4 >> 8 & 255, b : int4 & 255};
		this.isDebug = true;
		this.grid.setCellSize(this._cellsize);
		this.grid.setIsCenterPoint(true);
		this.shapeArray = [];
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i,this.grid.array[i]));
		}
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_TestExport
});
var art_TestGo = function() {
	this._radius = 50;
	this.init();
	SketchBase.call(this,null);
};
$hxClasses["art.TestGo"] = art_TestGo;
art_TestGo.__name__ = ["art","TestGo"];
art_TestGo.__super__ = SketchBase;
art_TestGo.prototype = $extend(SketchBase.prototype,{
	init: function() {
		this.dot = this.createShape(100,{ x : Global.w / 2, y : Global.h / 2});
		this.dot2 = this.createShape(100,{ x : Global.w / 2, y : Global.h / 2});
		this.dot3 = this.createShape(100,{ x : Global.w / 2, y : Global.h / 2});
		var target = this.dot2;
		var x = this.get_w2();
		var y = this.get_h2();
		var _go1 = 1 + Math.random();
		var _go11 = new cc_lets_Go(target,_go1);
		_go11._isWiggle = true;
		var max = 50;
		var min = -50;
		var value1 = Math.random() * (max - min);
		var value11 = x + value1 + min;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_go11._target,"x")) {
			objValue = Reflect.getProperty(_go11._target,"x");
		}
		var _range = { key : "x", from : _go11._isFrom ? value11 : objValue, to : !_go11._isFrom ? value11 : objValue};
		_go11._props.set("x",_range);
		if(_go11._isFrom) {
			_go11.updateProperties(0);
		}
		var value3 = Math.random() * (max - min);
		var value31 = y + value3 + min;
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(_go11._target,"y")) {
			objValue1 = Reflect.getProperty(_go11._target,"y");
		}
		var _range1 = { key : "y", from : _go11._isFrom ? value31 : objValue1, to : !_go11._isFrom ? value31 : objValue1};
		_go11._props.set("y",_range1);
		if(_go11._isFrom) {
			_go11.updateProperties(0);
		}
		_go11._easing = cc_lets_easing_Sine.get_easeInOut();
		_go11._options.onComplete = function() {
			cc_lets_Go.wiggle(target,x,y,50);
		};
		_go11._options.onCompleteParams = null;
		var target1 = this.dot3;
		var x1 = this.get_w2();
		var y1 = this.get_h2();
		var _go = new cc_lets_Go(target1,1 + Math.random());
		_go._isOrbit = true;
		var objValue2 = 0;
		if(Object.prototype.hasOwnProperty.call(_go._target,"x")) {
			objValue2 = Reflect.getProperty(_go._target,"x");
		}
		var _range2 = { key : "x", from : _go._isFrom ? x1 : objValue2, to : !_go._isFrom ? x1 : objValue2};
		_go._props.set("x",_range2);
		if(_go._isFrom) {
			_go.updateProperties(0);
		}
		var objValue11 = 0;
		if(Object.prototype.hasOwnProperty.call(_go._target,"y")) {
			objValue11 = Reflect.getProperty(_go._target,"y");
		}
		var _range11 = { key : "y", from : _go._isFrom ? y1 : objValue11, to : !_go._isFrom ? y1 : objValue11};
		_go._props.set("y",_range11);
		if(_go._isFrom) {
			_go.updateProperties(0);
		}
		var objValue21 = 0;
		if(Object.prototype.hasOwnProperty.call(_go._target,"cx")) {
			objValue21 = Reflect.getProperty(_go._target,"cx");
		}
		var _range21 = { key : "cx", from : _go._isFrom ? x1 : objValue21, to : !_go._isFrom ? x1 : objValue21};
		_go._props.set("cx",_range21);
		if(_go._isFrom) {
			_go.updateProperties(0);
		}
		var objValue3 = 0;
		if(Object.prototype.hasOwnProperty.call(_go._target,"cy")) {
			objValue3 = Reflect.getProperty(_go._target,"cy");
		}
		var _range3 = { key : "cy", from : _go._isFrom ? y1 : objValue3, to : !_go._isFrom ? y1 : objValue3};
		_go._props.set("cy",_range3);
		if(_go._isFrom) {
			_go.updateProperties(0);
		}
		var objValue4 = 0;
		if(Object.prototype.hasOwnProperty.call(_go._target,"radius")) {
			objValue4 = Reflect.getProperty(_go._target,"radius");
		}
		var _range4 = { key : "radius", from : _go._isFrom ? 50 : objValue4, to : !_go._isFrom ? 50 : objValue4};
		_go._props.set("radius",_range4);
		if(_go._isFrom) {
			_go.updateProperties(0);
		}
		var objValue5 = 0;
		if(Object.prototype.hasOwnProperty.call(_go._target,"speed")) {
			objValue5 = Reflect.getProperty(_go._target,"speed");
		}
		var _range5 = { key : "speed", from : _go._isFrom ? 2 : objValue5, to : !_go._isFrom ? 2 : objValue5};
		_go._props.set("speed",_range5);
		if(_go._isFrom) {
			_go.updateProperties(0);
		}
		var objValue6 = 0;
		if(Object.prototype.hasOwnProperty.call(_go._target,"angle")) {
			objValue6 = Reflect.getProperty(_go._target,"angle");
		}
		var _range6 = { key : "angle", from : _go._isFrom ? 2 : objValue6, to : !_go._isFrom ? 2 : objValue6};
		_go._props.set("angle",_range6);
		if(_go._isFrom) {
			_go.updateProperties(0);
		}
		target1["cx"] = x1;
		target1["cy"] = y1;
		target1["angle"] = 0;
		target1["speed"] = 2;
		target1["radius"] = 50;
		this.onAnimateHandler(this.dot);
	}
	,createQuickSettings: function() {
		this.panel1 = QuickSettings.create(10,10,"Settings").setGlobalChangeHandler($bind(this,this.drawShape)).addHTML("Reason","Sometimes I need to find the best settings").addTextArea("Quote","text",function(value) {
			haxe_Log.trace(value,{ fileName : "TestGo.hx", lineNumber : 41, className : "art.TestGo", methodName : "createQuickSettings"});
		}).addBoolean("All Caps",false,function(value1) {
			haxe_Log.trace(value1,{ fileName : "TestGo.hx", lineNumber : 42, className : "art.TestGo", methodName : "createQuickSettings"});
		}).setKey("h").saveInLocalStorage("store-data-" + this.toString());
	}
	,createShape: function(i,point) {
		var shape = { _id : "" + i, _type : "circle", x : point.x, y : point.y, radius : this._radius};
		return shape;
	}
	,onAnimateHandler: function(obj) {
		var padding = 50;
		var time = cc_util_MathUtil.random(1,2);
		var xpos = cc_util_MathUtil.random(padding,Global.w - 2 * padding);
		var ypos = cc_util_MathUtil.random(padding,Global.h - 2 * padding);
		var Go = new cc_lets_Go(obj,time);
		Go._isFrom = false;
		var _this = Go;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"x")) {
			objValue = Reflect.getProperty(_this._target,"x");
		}
		var _range = { key : "x", from : _this._isFrom ? xpos : objValue, to : !_this._isFrom ? xpos : objValue};
		_this._props.set("x",_range);
		if(_this._isFrom) {
			_this.updateProperties(0);
		}
		var _this1 = _this;
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"y")) {
			objValue1 = Reflect.getProperty(_this1._target,"y");
		}
		var _range1 = { key : "y", from : _this1._isFrom ? ypos : objValue1, to : !_this1._isFrom ? ypos : objValue1};
		_this1._props.set("y",_range1);
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this2 = _this1;
		_this2._arc = 0;
		var _this3 = _this2;
		_this3._easing = cc_lets_easing_Sine.get_easeInOut();
		var _this4 = _this3;
		_this4._options.onComplete = $bind(this,this.onAnimateHandler);
		_this4._options.onCompleteParams = [obj];
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		cc_CanvasTools.strokeColourRGB(this.ctx,cc_util_ColorUtil.BLACK);
		cc_CanvasTools.strokeWeight(this.ctx,2);
		cc_CanvasTools.circleStroke(this.ctx,this.dot.x,this.dot.y,20);
		cc_CanvasTools.strokeColourRGB(this.ctx,cc_util_ColorUtil.RED);
		cc_CanvasTools.circleStroke(this.ctx,this.dot2.x,this.dot2.y,100);
		cc_CanvasTools.strokeColourRGB(this.ctx,cc_util_ColorUtil.GREEN);
		cc_CanvasTools.circleStroke(this.ctx,this.dot3.x,this.dot3.y,50);
	}
	,setup: function() {
		haxe_Log.trace("SETUP :: " + this.toString(),{ fileName : "TestGo.hx", lineNumber : 90, className : "art.TestGo", methodName : "setup"});
		this.isDebug = true;
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_TestGo
});
var art_ZipTest = function() {
	this._color4 = null;
	this._color3 = null;
	this._color2 = null;
	this._color1 = null;
	this._color0 = null;
	this._cellsize = 150;
	this._radius = 150;
	this.grid = new cc_util_GridUtil();
	this.shapeArray = [];
	this.init();
	SketchBase.call(this,null);
	haxe_Log.trace(new cc_model_constants_Sizes().INSTAGRAM,{ fileName : "ZipTest.hx", lineNumber : 26, className : "art.ZipTest", methodName : "new"});
};
$hxClasses["art.ZipTest"] = art_ZipTest;
art_ZipTest.__name__ = ["art","ZipTest"];
art_ZipTest.__super__ = SketchBase;
art_ZipTest.prototype = $extend(SketchBase.prototype,{
	init: function() {
		this.dot = this.createShape(100,{ x : Global.w / 2, y : Global.h / 2});
		cc_draw_Text.embedGoogleFont("Oswald:200,300,400,500,600,700",$bind(this,this.onEmbedHandler));
		this.createQuickSettings();
		this.onAnimateHandler(this.dot);
	}
	,onEmbedHandler: function(e) {
		haxe_Log.trace("onEmbedHandler :: " + this.toString() + " -> \"" + e + "\"",{ fileName : "ZipTest.hx", lineNumber : 38, className : "art.ZipTest", methodName : "onEmbedHandler"});
		this.drawShape();
	}
	,createQuickSettings: function() {
		this.panel1 = QuickSettings.create(10,10,"Settings").setGlobalChangeHandler($bind(this,this.drawShape)).addHTML("Reason","Sometimes I need to find the best settings").addTextArea("Quote","text",function(value) {
			haxe_Log.trace(value,{ fileName : "ZipTest.hx", lineNumber : 49, className : "art.ZipTest", methodName : "createQuickSettings"});
		}).addBoolean("All Caps",false,function(value1) {
			haxe_Log.trace(value1,{ fileName : "ZipTest.hx", lineNumber : 50, className : "art.ZipTest", methodName : "createQuickSettings"});
		}).setKey("h").saveInLocalStorage("store-data-" + this.toString());
	}
	,createShape: function(i,point) {
		var shape = { _id : "" + i, _type : "circle", x : point.x, y : point.y, radius : this._radius};
		return shape;
	}
	,onAnimateHandler: function(obj) {
		var padding = 50;
		var time = cc_util_MathUtil.random(1,2);
		var xpos = cc_util_MathUtil.random(padding,Global.w - 2 * padding);
		var ypos = cc_util_MathUtil.random(padding,Global.h - 2 * padding);
		var Go = new cc_lets_Go(obj,time);
		Go._isFrom = false;
		var _this = Go;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"x")) {
			objValue = Reflect.getProperty(_this._target,"x");
		}
		var _range = { key : "x", from : _this._isFrom ? xpos : objValue, to : !_this._isFrom ? xpos : objValue};
		_this._props.set("x",_range);
		if(_this._isFrom) {
			_this.updateProperties(0);
		}
		var _this1 = _this;
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"y")) {
			objValue1 = Reflect.getProperty(_this1._target,"y");
		}
		var _range1 = { key : "y", from : _this1._isFrom ? ypos : objValue1, to : !_this1._isFrom ? ypos : objValue1};
		_this1._props.set("y",_range1);
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this2 = _this1;
		_this2._easing = cc_lets_easing_Sine.get_easeInOut();
		var _this3 = _this2;
		_this3._options.onComplete = $bind(this,this.onAnimateHandler);
		_this3._options.onCompleteParams = [obj];
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		if(this.isDebug) {
			cc_util_ShapeUtil.gridField(this.ctx,this.grid);
		}
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
		}
		this.ctx.fillStyle = cc_util_ColorUtil.getColourObj(this._color4);
		cc_draw_Text.fillText(this.ctx,"text",Global.w / 2,Global.h / 2,"'Oswald', sans-serif;",160);
		cc_CanvasTools.strokeColourRGB(this.ctx,this._color3);
		cc_CanvasTools.strokeWeight(this.ctx,2);
		cc_CanvasTools.circleStroke(this.ctx,this.dot.x,this.dot.y,20);
	}
	,setup: function() {
		haxe_Log.trace("SETUP :: " + this.toString(),{ fileName : "ZipTest.hx", lineNumber : 105, className : "art.ZipTest", methodName : "setup"});
		var colorArray = cc_util_ColorUtil.niceColor100SortedString[cc_util_MathUtil.randomInt(cc_util_ColorUtil.niceColor100SortedString.length - 1)];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._color0 = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		this._color1 = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
		var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		this._color2 = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
		var int3 = Std.parseInt(StringTools.replace(colorArray[3],"#","0x"));
		this._color3 = { r : int3 >> 16 & 255, g : int3 >> 8 & 255, b : int3 & 255};
		var int4 = Std.parseInt(StringTools.replace(colorArray[4],"#","0x"));
		this._color4 = { r : int4 >> 16 & 255, g : int4 >> 8 & 255, b : int4 & 255};
		this.isDebug = true;
		this.grid.setCellSize(this._cellsize);
		this.grid.setIsCenterPoint(true);
		this.shapeArray = [];
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i,this.grid.array[i]));
		}
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_ZipTest
});
var cc_AST = function() { };
$hxClasses["cc.AST"] = cc_AST;
cc_AST.__name__ = ["cc","AST"];
var cc_CanvasTools = function() { };
$hxClasses["cc.CanvasTools"] = cc_CanvasTools;
cc_CanvasTools.__name__ = ["cc","CanvasTools"];
cc_CanvasTools.square = function(ctx,x,y,width,height) {
	if(height == null) {
		height = width;
	}
	ctx.fillRect(x,y,width,height);
};
cc_CanvasTools.leftStrokeRect = function(ctx,x,y,width,height) {
	if(height == null) {
		height = width;
	}
	ctx.strokeRect(x,y,width,height);
};
cc_CanvasTools.centreStrokeRect = function(ctx,x,y,width,height) {
	if(height == null) {
		height = width;
	}
	ctx.strokeRect(x - width / 2,y - height / 2,width,height);
};
cc_CanvasTools.rectangleFillStroke = function(ctx,x,y,width,height) {
	if(height == null) {
		height = width;
	}
	ctx.strokeRect(x,y,width,height);
	ctx.fillRect(x,y,width,height);
};
cc_CanvasTools.centreFillRect = function(ctx,x,y,width,height) {
	if(height == null) {
		height = width;
	}
	ctx.fillRect(x - width / 2,y - height / 2,width,height);
};
cc_CanvasTools.roundRect = function(ctx,_x,_y,_width,_height,_radius,_fill,_stroke) {
	if(_stroke == null) {
		_stroke = false;
	}
	if(_fill == null) {
		_fill = true;
	}
	if(_radius == null) {
		_radius = 5;
	}
	_width = Math.abs(_width);
	_height = Math.abs(_height);
	_x -= _width / 2;
	_y -= _height / 2;
	var radius_tr;
	var radius_tl;
	var radius_br;
	var radius_bl;
	radius_tl = _radius;
	radius_tr = _radius;
	radius_br = _radius;
	radius_bl = _radius;
	ctx.beginPath();
	ctx.moveTo(_x + radius_tl,_y);
	ctx.lineTo(_x + _width - radius_tr,_y);
	ctx.quadraticCurveTo(_x + _width,_y,_x + _width,_y + radius_tr);
	ctx.lineTo(_x + _width,_y + _height - radius_br);
	ctx.quadraticCurveTo(_x + _width,_y + _height,_x + _width - radius_br,_y + _height);
	ctx.lineTo(_x + radius_bl,_y + _height);
	ctx.quadraticCurveTo(_x,_y + _height,_x,_y + _height - radius_bl);
	ctx.lineTo(_x,_y + radius_tl);
	ctx.quadraticCurveTo(_x,_y,_x + radius_tl,_y);
	ctx.closePath();
	if(_fill) {
		ctx.fill();
	}
	if(_stroke) {
		ctx.stroke();
	}
};
cc_CanvasTools.makeCircle = function(ctx,x,y,radius) {
	ctx.beginPath();
	ctx.arc(x,y,radius,0,Math.PI * 2,true);
};
cc_CanvasTools.circle = function(ctx,x,y,radius) {
	cc_CanvasTools.makeCircle(ctx,x,y,radius);
	ctx.fill();
	ctx.closePath();
};
cc_CanvasTools.circleFillStroke = function(ctx,x,y,radius) {
	cc_CanvasTools.makeCircle(ctx,x,y,radius);
	ctx.fill();
	ctx.stroke();
	ctx.closePath();
};
cc_CanvasTools.circleFill = function(ctx,x,y,radius) {
	cc_CanvasTools.fillCircle(ctx,x,y,radius);
};
cc_CanvasTools.fillCircle = function(ctx,x,y,radius) {
	cc_CanvasTools.makeCircle(ctx,x,y,radius);
	ctx.fill();
	ctx.closePath();
};
cc_CanvasTools.circleStroke = function(ctx,x,y,radius) {
	cc_CanvasTools.strokeCircle(ctx,x,y,radius);
};
cc_CanvasTools.strokeCircle = function(ctx,x,y,radius) {
	cc_CanvasTools.makeCircle(ctx,x,y,radius);
	ctx.stroke();
	ctx.closePath();
};
cc_CanvasTools.strokePolygon = function(ctx,x,y,sides,size) {
	cc_CanvasTools.polygon(ctx,x,y,sides,size);
	ctx.stroke();
};
cc_CanvasTools.fillPolygon = function(ctx,x,y,sides,size) {
	cc_CanvasTools.polygon(ctx,x,y,sides,size);
	ctx.fill();
};
cc_CanvasTools.outlinedPolygon = function(ctx,x,y,_sides,_size,_fill,_stroke) {
	ctx.fillStyle = _fill;
	cc_CanvasTools.fillPolygon(ctx,x,y,_sides,_size);
	ctx.strokeStyle = _stroke;
	cc_CanvasTools.strokePolygon(ctx,x,y,_sides,_size);
};
cc_CanvasTools.polygon = function(ctx,x,y,sides,size) {
	ctx.beginPath();
	ctx.moveTo(x + size * Math.cos(0),y + size * Math.sin(0));
	var _g1 = 0;
	var _g = sides;
	while(_g1 < _g) {
		var i = _g1++;
		ctx.lineTo(x + size * Math.cos(i * 2 * Math.PI / sides),y + size * Math.sin(i * 2 * Math.PI / sides));
	}
	ctx.closePath();
};
cc_CanvasTools.eellipse = function(ctx,x,y,width,height) {
	ctx.beginPath();
	var i = 0;
	var counter = 0;
	while(i < Math.PI * 2) {
		haxe_Log.trace("" + counter + ". - " + i + " < " + Math.PI * 2,{ fileName : "CanvasTools.hx", lineNumber : 196, className : "cc.CanvasTools", methodName : "eellipse"});
		ctx.lineTo(x + Math.cos(i) * width / 2,y + Math.sin(i) * height / 2);
		i += Math.PI / 16;
		++counter;
	}
	ctx.closePath();
};
cc_CanvasTools.ellipseFill = function(ctx,x,y,width,height) {
	cc_CanvasTools.fillEllipse(ctx,x,y,width,height);
};
cc_CanvasTools.fillEllipse = function(ctx,x,y,width,height) {
	ctx.beginPath();
	ctx.ellipse(x,y,width,height,0,0,2 * Math.PI);
	ctx.fill();
};
cc_CanvasTools.ellipseStroke = function(ctx,x,y,width,height) {
	cc_CanvasTools.strokeEllipse(ctx,x,y,width,height);
};
cc_CanvasTools.strokeEllipse = function(ctx,x,y,width,height) {
	ctx.beginPath();
	ctx.ellipse(x,y,width,height,0,0,2 * Math.PI);
	ctx.stroke();
};
cc_CanvasTools.ellipseFillStroke = function(ctx,x,y,width,height) {
	cc_CanvasTools.fillStrokeEllipse(ctx,x,y,width,height);
};
cc_CanvasTools.fillStrokeEllipse = function(ctx,x,y,width,height) {
	ctx.beginPath();
	ctx.ellipse(x,y,width,height,0,0,2 * Math.PI);
	ctx.fill();
	ctx.stroke();
};
cc_CanvasTools.line = function(ctx,x1,y1,x2,y2) {
	ctx.beginPath();
	ctx.moveTo(x1,y1);
	ctx.lineTo(x2,y2);
	ctx.stroke();
	ctx.beginPath();
};
cc_CanvasTools.triangle = function(ctx,x1,y1,x2,y2,x3,y3) {
	ctx.beginPath();
	ctx.moveTo(x1,y1);
	ctx.lineTo(x2,y2);
	ctx.lineTo(x3,y3);
	ctx.lineTo(x1,y1);
	ctx.stroke();
	ctx.closePath();
};
cc_CanvasTools.strokeTriangle = function(ctx,x1,y1,x2,y2,x3,y3) {
	ctx.beginPath();
	ctx.moveTo(x1,y1);
	ctx.lineTo(x2,y2);
	ctx.lineTo(x3,y3);
	ctx.lineTo(x1,y1);
	ctx.stroke();
	ctx.closePath();
};
cc_CanvasTools.fillTriangle = function(ctx,x1,y1,x2,y2,x3,y3) {
	ctx.beginPath();
	ctx.moveTo(x1,y1);
	ctx.lineTo(x2,y2);
	ctx.lineTo(x3,y3);
	ctx.lineTo(x1,y1);
	ctx.fill();
	ctx.closePath();
};
cc_CanvasTools.eqDownFillTriangle = function(ctx,x,y,sz) {
	ctx.translate(x,y);
	ctx.rotate(cc_util_MathUtil.radians(180));
	cc_CanvasTools.fillTriangle(ctx,0,0 - sz,sz,sz / 2,0 - sz,sz / 2);
	ctx.rotate(cc_util_MathUtil.radians(-180));
	ctx.translate(-x,-y);
};
cc_CanvasTools.eqDownTriangle = function(ctx,x,y,sz) {
	ctx.translate(x,y);
	ctx.rotate(cc_util_MathUtil.radians(180));
	cc_CanvasTools.triangle(ctx,0,0 - sz,sz,sz / 2,0 - sz,sz / 2);
	ctx.rotate(cc_util_MathUtil.radians(-180));
	ctx.translate(-x,-y);
};
cc_CanvasTools.eqFillTriangle = function(ctx,x,y,sz) {
	cc_CanvasTools.fillTriangle(ctx,x,y - sz,x + sz,y + sz / 2,x - sz,y + sz / 2);
};
cc_CanvasTools.eqTriangle = function(ctx,x,y,sz) {
	cc_CanvasTools.triangle(ctx,x,y - sz,x + sz,y + sz / 2,x - sz,y + sz / 2);
};
cc_CanvasTools.strokeWeight = function(ctx,inPx) {
	ctx.lineWidth = inPx;
};
cc_CanvasTools.fillColour = function(ctx,r,g,b,a) {
	cc_CanvasTools.colour(ctx,r,g,b,a);
};
cc_CanvasTools.fillColourRGB = function(ctx,rgb,a) {
	cc_CanvasTools.colour(ctx,rgb.r,rgb.g,rgb.b,a);
};
cc_CanvasTools.colour = function(ctx,r,g,b,a) {
	var c = cc_util_ColorUtil.getColour(r,g,b,a);
	ctx.fillStyle = c;
};
cc_CanvasTools.colourObj = function(ctx,rgb,a) {
	var c = cc_util_ColorUtil.getColour(rgb.r,rgb.g,rgb.b,a);
	ctx.fillStyle = c;
};
cc_CanvasTools.colourRGB = function(ctx,rgb,a) {
	var c = cc_util_ColorUtil.getColour(rgb.r,rgb.g,rgb.b,a);
	ctx.fillStyle = c;
};
cc_CanvasTools.shadowColorRGB = function(ctx,rgb,a) {
	var c = cc_util_ColorUtil.getColour(rgb.r,rgb.g,rgb.b,a);
	ctx.shadowColor = c;
};
cc_CanvasTools.shadowSet = function(ctx,rgb,a,blur) {
	if(blur == null) {
		blur = 15;
	}
	if(a == null) {
		a = 1;
	}
	var c = cc_util_ColorUtil.getColour(rgb.r,rgb.g,rgb.b,a);
	ctx.shadowColor = c;
	ctx.shadowBlur = blur;
};
cc_CanvasTools.strokeColourObj = function(ctx,rgb,a) {
	cc_CanvasTools.lineColour(ctx,rgb.r,rgb.g,rgb.b,a);
};
cc_CanvasTools.lineColourRGB = function(ctx,rgb,a) {
	cc_CanvasTools.lineColour(ctx,rgb.r,rgb.g,rgb.b,a);
};
cc_CanvasTools.strokeColourRGB = function(ctx,rgb,a) {
	cc_CanvasTools.lineColour(ctx,rgb.r,rgb.g,rgb.b,a);
};
cc_CanvasTools.strokeColour = function(ctx,r,g,b,a) {
	cc_CanvasTools.lineColour(ctx,r,g,b,a);
};
cc_CanvasTools.lineColour = function(ctx,r,g,b,a) {
	ctx.strokeStyle = cc_util_ColorUtil.getColour(r,g,b,a);
};
cc_CanvasTools.colourName = function(ctx,name) {
	ctx.fillStyle = name;
};
cc_CanvasTools.background = function(ctx,r,g,b,a) {
	if(g == null) {
		ctx.fillStyle = cc_util_ColorUtil.rgb(r,r,r);
	} else if(b == null && a == null) {
		ctx.fillStyle = cc_util_ColorUtil.rgba(r,r,r,g);
	} else if(a == null) {
		ctx.fillStyle = cc_util_ColorUtil.rgb(r,g,b);
	} else {
		ctx.fillStyle = cc_util_ColorUtil.rgba(r,g,b,a);
	}
	ctx.fillRect(0,0,Global.w,Global.h);
};
cc_CanvasTools.backgroundObj = function(ctx,rgb) {
	cc_CanvasTools.background(ctx,rgb.r,rgb.g,rgb.b);
};
cc_CanvasTools.backgroundRGB = function(ctx,rgb) {
	cc_CanvasTools.background(ctx,rgb.r,rgb.g,rgb.b);
};
var cc_draw_Text = function(ctx,text) {
	this._textBaseline = "alphabetic";
	this._textAlign = "left";
	this._fontWeight = "";
	this._css = "";
	this._font = "Arial";
	this._rotate = 0;
	this._alpha = 1;
	this._radius = 100;
	this._y = 100;
	this._x = 100;
	this._ctx = ctx;
	this._text = text;
};
$hxClasses["cc.draw.Text"] = cc_draw_Text;
cc_draw_Text.__name__ = ["cc","draw","Text"];
cc_draw_Text.create = function(ctx,text) {
	var Text = new cc_draw_Text(ctx,text);
	return Text;
};
cc_draw_Text.fillText = function(ctx,text,x,y,css,size) {
	if(size == null) {
		size = 20;
	}
	ctx.font = "" + size + "px " + StringTools.replace(css,";","");
	ctx.textAlign = "left";
	ctx.fillText(text,x,y);
};
cc_draw_Text.centerFillText = function(ctx,text,x,y,css,size) {
	if(size == null) {
		size = 20;
	}
	ctx.font = "" + size + "px " + StringTools.replace(css,";","");
	ctx.textAlign = "center";
	ctx.fillText(text,x,y);
};
cc_draw_Text.hackCenterFillText = function(ctx,text,x,y,css) {
	ctx.font = "" + StringTools.replace(css,";","");
	ctx.textAlign = "center";
	ctx.fillText(text,x,y);
};
cc_draw_Text.embedGoogleFont = function(family,callback,callbackArray) {
	var _id = "embededGoogleFonts";
	var _url = "https://fonts.googleapis.com/css?family=";
	var link = window.document.getElementById(_id);
	if(link != null) {
		var temp = StringTools.replace(link.href,_url,"");
		family = temp + "|" + family;
	} else {
		link = window.document.createElement("link");
	}
	if(callbackArray == null) {
		callbackArray = [family];
	}
	link.href = "" + _url + family;
	link.rel = "stylesheet";
	link.id = _id;
	link.onload = function() {
		if(callback != null) {
			callback.apply(callback,callbackArray);
		}
	};
	window.document.head.appendChild(link);
};
cc_draw_Text.prototype = {
	text: function(text) {
		this._text = text;
		return this;
	}
	,x: function(x) {
		this.set__x(x);
		return this;
	}
	,y: function(y) {
		this.set__y(y);
		return this;
	}
	,pos: function(x,y) {
		this.set__x(x);
		this.set__y(y);
		return this;
	}
	,font: function(font) {
		this._font = StringTools.replace(StringTools.replace(font,";",""),"+"," ");
		return this;
	}
	,css: function(css) {
		this._css = css;
		return this;
	}
	,fontWeight: function(weight) {
		this._fontWeight = weight;
		return this;
	}
	,size: function(px) {
		this.set__size(px);
		if(this.get__leading() == null) {
			this.set__leading(px);
		}
		return this;
	}
	,leading: function(px) {
		this.set__leading(px);
		return this;
	}
	,textAlign: function(pos) {
		this._textAlign = pos;
		return this;
	}
	,leftAlign: function() {
		this._textAlign = "left";
		return this;
	}
	,rightAlign: function() {
		this._textAlign = "right";
		return this;
	}
	,centerAlign: function() {
		this._textAlign = "center";
		return this;
	}
	,topBaseline: function() {
		this._textBaseline = "top";
		return this;
	}
	,middleBaseline: function() {
		this._textBaseline = "middle";
		return this;
	}
	,bottomBaseline: function() {
		this._textBaseline = "bottom";
		return this;
	}
	,textBaseline: function(pos) {
		this._textBaseline = pos;
		return this;
	}
	,rotate: function(degree) {
		this.set__rotate(degree);
		return this;
	}
	,rotateLeft: function() {
		this.set__rotate(-90);
		return this;
	}
	,rotateRight: function() {
		this.set__rotate(90);
		return this;
	}
	,rotateDown: function() {
		this.set__rotate(180);
		return this;
	}
	,color: function(value,alpha) {
		if(alpha == null) {
			alpha = 1;
		}
		this._color = value;
		this.set__alpha(cc_util_MathUtil.clamp(alpha,0,1));
		return this;
	}
	,alpha: function(alpha) {
		this.set__alpha(cc_util_MathUtil.clamp(alpha,0,1));
		return this;
	}
	,visible: function(isVisible) {
		if(isVisible) {
			this.set__alpha(cc_util_MathUtil.clamp(1,0,1));
		} else {
			this.set__alpha(cc_util_MathUtil.clamp(0,0,1));
		}
		return this;
	}
	,draw: function() {
		var isLines = false;
		this._ctx.save();
		if(this._text.indexOf("\n") != -1) {
			this._lineArray = this._text.split("\n");
			isLines = true;
		}
		var previousColor = this._ctx.fillStyle;
		if(this._color != null) {
			cc_CanvasTools.fillColourRGB(this._ctx,this._color,this.get__alpha());
		} else {
			var tmp = this._ctx;
			var $int = Std.parseInt(StringTools.replace(previousColor,"#","0x"));
			var tmp1 = this.get__alpha();
			cc_CanvasTools.fillColourRGB(tmp,{ r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255},tmp1);
		}
		var tmp2 = "" + this._css + " " + this.get__size() + "px " + this._font;
		this._ctx.font = StringTools.ltrim(tmp2);
		this._ctx.textAlign = this._textAlign;
		this._ctx.textBaseline = this._textBaseline;
		this._ctx.translate(this.get__x(),this.get__y());
		this._ctx.rotate(cc_util_MathUtil.radians(this.get__rotate()));
		if(!isLines) {
			this._ctx.fillText(this._text,0,0);
		} else {
			var _g1 = 0;
			var _g = this._lineArray.length;
			while(_g1 < _g) {
				var i = _g1++;
				var line = this._lineArray[i];
				this._ctx.fillText(line,0,i * this.get__leading());
			}
		}
		this._ctx.restore();
		this._ctx.fillStyle = previousColor;
		return this;
	}
	,get__x: function() {
		return this._x;
	}
	,set__x: function(value) {
		return this._x = value;
	}
	,get__y: function() {
		return this._y;
	}
	,set__y: function(value) {
		return this._y = value;
	}
	,get__radius: function() {
		return this._radius;
	}
	,set__radius: function(value) {
		return this._radius = value;
	}
	,get__alpha: function() {
		return this._alpha;
	}
	,set__alpha: function(value) {
		return this._alpha = value;
	}
	,get__rotate: function() {
		return this._rotate;
	}
	,set__rotate: function(value) {
		return this._rotate = value;
	}
	,get__gradient: function() {
		return this._gradient;
	}
	,set__gradient: function(value) {
		return this._gradient = value;
	}
	,get__size: function() {
		return this._size;
	}
	,set__size: function(value) {
		return this._size = value;
	}
	,get__leading: function() {
		return this._leading;
	}
	,set__leading: function(value) {
		return this._leading = value;
	}
	,toString: function() {
		return "Text: " + Std.string(JSON.parse(JSON.stringify(this)));
	}
	,__class__: cc_draw_Text
	,__properties__: {set__leading:"set__leading",get__leading:"get__leading",set__gradient:"set__gradient",get__gradient:"get__gradient",set__size:"set__size",get__size:"get__size",set__rotate:"set__rotate",get__rotate:"get__rotate",set__alpha:"set__alpha",get__alpha:"get__alpha",set__radius:"set__radius",get__radius:"get__radius",set__y:"set__y",get__y:"get__y",set__x:"set__x",get__x:"get__x"}
};
var cc_lets_Easing = function() { };
$hxClasses["cc.lets.Easing"] = cc_lets_Easing;
cc_lets_Easing.__name__ = ["cc","lets","Easing"];
cc_lets_Easing.linear = function(v) {
	return v;
};
cc_lets_Easing.quad = function(v) {
	return v * v;
};
cc_lets_Easing.cubic = function(v) {
	return v * v * v;
};
cc_lets_Easing.quart = function(v) {
	return v * v * v;
};
cc_lets_Easing.quint = function(v) {
	return v * v * v;
};
cc_lets_Easing.sine = function(v) {
	return 1 - Math.cos(v * Math.PI / 2);
};
cc_lets_Easing.circ = function(v) {
	return 1 - Math.sqrt(1 - v * v);
};
cc_lets_Easing.expo = function(v) {
	if(v == 0) {
		return 0;
	} else {
		return Math.pow(2,10 * (v - 1));
	}
};
cc_lets_Easing.back = function(v) {
	var s = 1.70158;
	return v * v * ((s + 1) * v - s);
};
cc_lets_Easing.bounce = function(v) {
	v = 1 - v;
	return 1 - (v < 0.363636363636363646 ? 7.5625 * v * v : v < 0.727272727272727293 ? 7.5625 * (v -= 0.545454545454545414) * v + .75 : v < 0.909090909090909061 ? 7.5625 * (v -= 0.818181818181818232) * v + .9375 : 7.5625 * (v -= 0.954545454545454586) * v + .984375);
};
cc_lets_Easing.elastic = function(v) {
	if(v == 0) {
		return 0;
	}
	if(v == 1) {
		return 1;
	}
	var p = .3;
	var s = p / 4;
	return -(Math.pow(2,10 * --v) * Math.sin((v - 0.075) * (2 * Math.PI) / 0.3));
};
cc_lets_Easing.reverse = function(f) {
	return function(v) {
		return 1 - f(1 - v);
	};
};
cc_lets_Easing.reflect = function(f) {
	return function(v) {
		if(v < 0.5) {
			return f(v * 2) / 2;
		} else {
			return 1 - f(2 - v * 2) / 2;
		}
	};
};
var cc_lets_Go = function(target,duration) {
	this.VERSION = "1.0.8";
	this.DEBUG = false;
	this.FRAME_RATE = 60;
	this._arc = 0;
	this._seconds = 0;
	this._delay = 0;
	this._initTime = 0;
	this._isDelayDone = false;
	this._isTimeBased = false;
	this._isOrbit = false;
	this._isWiggle = false;
	this._isYoyo = false;
	this._isFrom = false;
	this._props = new haxe_ds_StringMap();
	this._options = { };
	this._easing = cc_lets_easing_Quad.get_easeOut();
	this._id = "[lets.Go]" + this.VERSION + "." + new Date().getTime();
	this._seconds = duration;
	this._target = target;
	this._duration = this.getDuration(duration);
	if(this._isTimeBased) {
		this._initTime = this.getTimer();
	} else {
		this._initTime = this._duration;
	}
	cc_lets_Go._tweens.push(this);
	if(this.DEBUG) {
		window.console.log("New Go - _id: \"" + this._id + "\" / _duration: " + this._duration + " / _initTime: " + this._initTime + " / _tweens.length: " + cc_lets_Go._tweens.length);
	}
	haxe_Timer.delay($bind(this,this.init),1);
};
$hxClasses["cc.lets.Go"] = cc_lets_Go;
cc_lets_Go.__name__ = ["cc","lets","Go"];
cc_lets_Go.to = function(target,duration) {
	var Go = new cc_lets_Go(target,duration);
	Go._isFrom = false;
	return Go;
};
cc_lets_Go.from = function(target,duration) {
	var Go = new cc_lets_Go(target,duration);
	Go._isFrom = true;
	Go.updateProperties(0);
	return Go;
};
cc_lets_Go.timer = function(duration) {
	var Go = new cc_lets_Go({ },duration);
	return Go;
};
cc_lets_Go.frames = function(frames) {
	var Go = new cc_lets_Go({ },frames * 60);
	return Go;
};
cc_lets_Go.wiggle = function(target,x,y,wiggleRoom) {
	if(wiggleRoom == null) {
		wiggleRoom = 10;
	}
	var _go = 1 + Math.random();
	var _go1 = new cc_lets_Go(target,_go);
	_go1._isWiggle = true;
	var max = wiggleRoom;
	var min = -wiggleRoom;
	var value = Math.random() * (max - min);
	var value1 = x + value + min;
	var objValue = 0;
	if(Object.prototype.hasOwnProperty.call(_go1._target,"x")) {
		objValue = Reflect.getProperty(_go1._target,"x");
	}
	var _range = { key : "x", from : _go1._isFrom ? value1 : objValue, to : !_go1._isFrom ? value1 : objValue};
	_go1._props.set("x",_range);
	if(_go1._isFrom) {
		_go1.updateProperties(0);
	}
	var value2 = Math.random() * (max - min);
	var value3 = y + value2 + min;
	var objValue1 = 0;
	if(Object.prototype.hasOwnProperty.call(_go1._target,"y")) {
		objValue1 = Reflect.getProperty(_go1._target,"y");
	}
	var _range1 = { key : "y", from : _go1._isFrom ? value3 : objValue1, to : !_go1._isFrom ? value3 : objValue1};
	_go1._props.set("y",_range1);
	if(_go1._isFrom) {
		_go1.updateProperties(0);
	}
	_go1._easing = cc_lets_easing_Sine.get_easeInOut();
	_go1._options.onComplete = function() {
		cc_lets_Go.wiggle(target,x,y,wiggleRoom);
	};
	_go1._options.onCompleteParams = null;
	return _go1;
};
cc_lets_Go.orbit = function(target,x,y,radius,speed) {
	var _go = new cc_lets_Go(target,1 + Math.random());
	_go._isOrbit = true;
	var objValue = 0;
	if(Object.prototype.hasOwnProperty.call(_go._target,"x")) {
		objValue = Reflect.getProperty(_go._target,"x");
	}
	var _range = { key : "x", from : _go._isFrom ? x : objValue, to : !_go._isFrom ? x : objValue};
	_go._props.set("x",_range);
	if(_go._isFrom) {
		_go.updateProperties(0);
	}
	var objValue1 = 0;
	if(Object.prototype.hasOwnProperty.call(_go._target,"y")) {
		objValue1 = Reflect.getProperty(_go._target,"y");
	}
	var _range1 = { key : "y", from : _go._isFrom ? y : objValue1, to : !_go._isFrom ? y : objValue1};
	_go._props.set("y",_range1);
	if(_go._isFrom) {
		_go.updateProperties(0);
	}
	var objValue2 = 0;
	if(Object.prototype.hasOwnProperty.call(_go._target,"cx")) {
		objValue2 = Reflect.getProperty(_go._target,"cx");
	}
	var _range2 = { key : "cx", from : _go._isFrom ? x : objValue2, to : !_go._isFrom ? x : objValue2};
	_go._props.set("cx",_range2);
	if(_go._isFrom) {
		_go.updateProperties(0);
	}
	var objValue3 = 0;
	if(Object.prototype.hasOwnProperty.call(_go._target,"cy")) {
		objValue3 = Reflect.getProperty(_go._target,"cy");
	}
	var _range3 = { key : "cy", from : _go._isFrom ? y : objValue3, to : !_go._isFrom ? y : objValue3};
	_go._props.set("cy",_range3);
	if(_go._isFrom) {
		_go.updateProperties(0);
	}
	var objValue4 = 0;
	if(Object.prototype.hasOwnProperty.call(_go._target,"radius")) {
		objValue4 = Reflect.getProperty(_go._target,"radius");
	}
	var _range4 = { key : "radius", from : _go._isFrom ? radius : objValue4, to : !_go._isFrom ? radius : objValue4};
	_go._props.set("radius",_range4);
	if(_go._isFrom) {
		_go.updateProperties(0);
	}
	var objValue5 = 0;
	if(Object.prototype.hasOwnProperty.call(_go._target,"speed")) {
		objValue5 = Reflect.getProperty(_go._target,"speed");
	}
	var _range5 = { key : "speed", from : _go._isFrom ? speed : objValue5, to : !_go._isFrom ? speed : objValue5};
	_go._props.set("speed",_range5);
	if(_go._isFrom) {
		_go.updateProperties(0);
	}
	var objValue6 = 0;
	if(Object.prototype.hasOwnProperty.call(_go._target,"angle")) {
		objValue6 = Reflect.getProperty(_go._target,"angle");
	}
	var _range6 = { key : "angle", from : _go._isFrom ? speed : objValue6, to : !_go._isFrom ? speed : objValue6};
	_go._props.set("angle",_range6);
	if(_go._isFrom) {
		_go.updateProperties(0);
	}
	target["cx"] = x;
	target["cy"] = y;
	target["angle"] = 0;
	target["speed"] = speed;
	target["radius"] = radius;
	return _go;
};
cc_lets_Go.prototype = {
	isTimeBased: function(isTimeBased) {
		if(isTimeBased == null) {
			isTimeBased = true;
		}
		haxe_Log.trace("Fixme: this doesn\t work right now",{ fileName : "Go.hx", lineNumber : 189, className : "cc.lets.Go", methodName : "isTimeBased"});
		this._isTimeBased = isTimeBased;
		this._duration = this._duration / this.FRAME_RATE | 0;
		return this;
	}
	,width: function(value) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"width")) {
			objValue = Reflect.getProperty(this._target,"width");
		}
		var _range = { key : "width", from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.set("width",_range);
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,height: function(value) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"height")) {
			objValue = Reflect.getProperty(this._target,"height");
		}
		var _range = { key : "height", from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.set("height",_range);
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,x: function(value) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"x")) {
			objValue = Reflect.getProperty(this._target,"x");
		}
		var _range = { key : "x", from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.set("x",_range);
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,y: function(value) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"y")) {
			objValue = Reflect.getProperty(this._target,"y");
		}
		var _range = { key : "y", from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.set("y",_range);
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,pos: function(x,y) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"x")) {
			objValue = Reflect.getProperty(this._target,"x");
		}
		var _range = { key : "x", from : this._isFrom ? x : objValue, to : !this._isFrom ? x : objValue};
		this._props.set("x",_range);
		if(this._isFrom) {
			this.updateProperties(0);
		}
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"y")) {
			objValue1 = Reflect.getProperty(this._target,"y");
		}
		var _range1 = { key : "y", from : this._isFrom ? y : objValue1, to : !this._isFrom ? y : objValue1};
		this._props.set("y",_range1);
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,rotation: function(degree) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"rotation")) {
			objValue = Reflect.getProperty(this._target,"rotation");
		}
		var _range = { key : "rotation", from : this._isFrom ? degree : objValue, to : !this._isFrom ? degree : objValue};
		this._props.set("rotation",_range);
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,degree: function(degree) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"rotation")) {
			objValue = Reflect.getProperty(this._target,"rotation");
		}
		var _range = { key : "rotation", from : this._isFrom ? degree : objValue, to : !this._isFrom ? degree : objValue};
		this._props.set("rotation",_range);
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,radians: function(degree) {
		var value = degree * Math.PI / 180;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"rotation")) {
			objValue = Reflect.getProperty(this._target,"rotation");
		}
		var _range = { key : "rotation", from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.set("rotation",_range);
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,alpha: function(value) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"alpha")) {
			objValue = Reflect.getProperty(this._target,"alpha");
		}
		var _range = { key : "alpha", from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.set("alpha",_range);
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,scale: function(value) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"scaleX")) {
			objValue = Reflect.getProperty(this._target,"scaleX");
		}
		var _range = { key : "scaleX", from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.set("scaleX",_range);
		if(this._isFrom) {
			this.updateProperties(0);
		}
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"scaleY")) {
			objValue1 = Reflect.getProperty(this._target,"scaleY");
		}
		var _range1 = { key : "scaleY", from : this._isFrom ? value : objValue1, to : !this._isFrom ? value : objValue1};
		this._props.set("scaleY",_range1);
		if(this._isFrom) {
			this.updateProperties(0);
		}
		var objValue2 = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"scale")) {
			objValue2 = Reflect.getProperty(this._target,"scale");
		}
		var _range2 = { key : "scale", from : this._isFrom ? value : objValue2, to : !this._isFrom ? value : objValue2};
		this._props.set("scale",_range2);
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,yoyo: function() {
		this._isYoyo = true;
		return this;
	}
	,arc: function(dir) {
		this._arc = 0;
		return this;
	}
	,delay: function(duration) {
		this._delay = this.getDuration(duration);
		return this;
	}
	,prop: function(key,value) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,key)) {
			objValue = Reflect.getProperty(this._target,key);
		}
		var _range = { key : key, from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		var _this = this._props;
		if(__map_reserved[key] != null) {
			_this.setReserved(key,_range);
		} else {
			_this.h[key] = _range;
		}
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,onComplete: function(func,arr) {
		this._options.onComplete = func;
		this._options.onCompleteParams = arr;
		return this;
	}
	,onAnimationStart: function(func,arr) {
		this._options.onAnimationStart = func;
		this._options.onAnimationStartParams = arr;
		return this;
	}
	,onUpdate: function(func,arr) {
		this._options.onUpdate = func;
		this._options.onUpdateParams = arr;
		return this;
	}
	,ease: function(easing) {
		this._easing = easing;
		return this;
	}
	,stop: function() {
		this.destroy();
	}
	,init: function() {
		if(this._isTimeBased) {
			haxe_Log.trace("TODO: build timebased animation",{ fileName : "Go.hx", lineNumber : 440, className : "cc.lets.Go", methodName : "init"});
		} else if(cc_lets_Go._requestId == null) {
			cc_lets_Go._requestId = window.requestAnimationFrame($bind(this,this.onEnterFrameHandler));
		}
	}
	,onEnterFrameHandler: function(time) {
		if(cc_lets_Go._tweens.length <= 0) {
			if(!this._isTimeBased) {
				window.cancelAnimationFrame(cc_lets_Go._requestId);
				return;
			}
		} else {
			var _g1 = 0;
			var _g = cc_lets_Go._tweens.length;
			while(_g1 < _g) {
				var i = _g1++;
				if(cc_lets_Go._tweens[i] != null) {
					cc_lets_Go._tweens[i].update();
				}
			}
		}
		cc_lets_Go._requestId = window.requestAnimationFrame($bind(this,this.onEnterFrameHandler));
	}
	,update: function() {
		if(this._delay > 0 && this._isTimeBased) {
			haxe_Log.trace("FIXME this doesn't work yet",{ fileName : "Go.hx", lineNumber : 479, className : "cc.lets.Go", methodName : "update"});
		}
		if(this._delay > 0) {
			this._delay--;
			return;
		}
		if(!this._isDelayDone) {
			if(this.DEBUG) {
				haxe_Log.trace("should trigger only once: " + this._id,{ fileName : "Go.hx", lineNumber : 486, className : "cc.lets.Go", methodName : "update"});
			}
			if(Reflect.isFunction(this._options.onAnimationStart)) {
				var func = this._options.onAnimationStart;
				var arr = this._options.onAnimationStartParams != null ? this._options.onAnimationStartParams : [];
				func.apply(func,arr);
			}
		}
		this._isDelayDone = true;
		this._initTime--;
		var progressed = this._duration - this._initTime;
		if(this._isTimeBased) {
			progressed = this.getTimer() - this._initTime;
		}
		if(progressed >= this._duration) {
			this.updateProperties(this._duration);
			this.complete();
		} else {
			this.updateProperties(progressed);
		}
	}
	,updateProperties: function(time) {
		if(Reflect.isFunction(this._options.onUpdate)) {
			var func = this._options.onUpdate;
			var arr = this._options.onUpdateParams != null ? this._options.onUpdateParams : [];
			func.apply(func,arr);
		}
		if(this._props == null) {
			return;
		}
		var n = this._props.keys();
		while(n.hasNext()) {
			var n1 = n.next();
			var _this = this._props;
			var range = __map_reserved[n1] != null ? _this.getReserved(n1) : _this.h[n1];
			if(this._isOrbit) {
				var _this1 = this._props;
				var __cx = __map_reserved["cx"] != null ? _this1.getReserved("cx") : _this1.h["cx"];
				var _this2 = this._props;
				var __cy = __map_reserved["cy"] != null ? _this2.getReserved("cy") : _this2.h["cy"];
				var _this3 = this._props;
				var __angle = __map_reserved["angle"] != null ? _this3.getReserved("angle") : _this3.h["angle"];
				var _this4 = this._props;
				var __speed = __map_reserved["speed"] != null ? _this4.getReserved("speed") : _this4.h["speed"];
				var _this5 = this._props;
				var __rad = __map_reserved["radius"] != null ? _this5.getReserved("radius") : _this5.h["radius"];
				haxe_Log.trace("cx: " + __cx.to + ",  cy: " + __cy.to + " , " + __angle.to + ", " + __speed.to + ", " + __rad.to,{ fileName : "Go.hx", lineNumber : 544, className : "cc.lets.Go", methodName : "updateProperties"});
				haxe_Log.trace("" + n1 + " == \"angle\" : " + Std.string(n1 == "angle"),{ fileName : "Go.hx", lineNumber : 555, className : "cc.lets.Go", methodName : "updateProperties"});
				haxe_Log.trace(this._target,{ fileName : "Go.hx", lineNumber : 557, className : "cc.lets.Go", methodName : "updateProperties"});
				if(n1 == "angle") {
					var aa = __angle.to + __speed.to;
					Reflect.setProperty(this._target,n1,aa);
				}
			} else {
				Reflect.setProperty(this._target,n1,this._easing.ease(time,range.from,range.to - range.from,this._duration));
			}
		}
	}
	,complete: function() {
		if(this.DEBUG) {
			haxe_Log.trace("complete :: \"" + this._id + "\", _duration: " + this._duration + ", _seconds: " + this._seconds + ", _initTime: " + this._initTime + " / _tweens.length: " + cc_lets_Go._tweens.length,{ fileName : "Go.hx", lineNumber : 580, className : "cc.lets.Go", methodName : "complete"});
		}
		if(this._isYoyo) {
			var n = this._props.keys();
			while(n.hasNext()) {
				var n1 = n.next();
				var _this = this._props;
				var range = __map_reserved[n1] != null ? _this.getReserved(n1) : _this.h[n1];
				var _rangeReverse = { key : n1, from : range.to, to : range.from};
				var _this1 = this._props;
				if(__map_reserved[n1] != null) {
					_this1.setReserved(n1,_rangeReverse);
				} else {
					_this1.h[n1] = _rangeReverse;
				}
			}
			if(this._isTimeBased) {
				this._initTime = this.getTimer();
			} else {
				this._initTime = this._duration;
			}
			this._isYoyo = false;
			return;
		}
		var func = this._options.onComplete;
		var arr = this._options.onCompleteParams != null ? this._options.onCompleteParams : [];
		this.destroy();
		if(Reflect.isFunction(func)) {
			func.apply(func,arr);
		}
	}
	,getDuration: function(duration) {
		var d = 0;
		if(this._isTimeBased) {
			d = duration * 1000 | 0;
		} else {
			if(duration <= 0) {
				duration = 0.1;
			}
			d = duration * this.FRAME_RATE | 0;
		}
		return d;
	}
	,getTimer: function() {
		return new Date().getTime() | 0;
	}
	,destroy: function() {
		if(Lambda.has(cc_lets_Go._tweens,this)) {
			HxOverrides.remove(cc_lets_Go._tweens,this);
		}
		if(this._options) {
			this._easing = cc_lets_easing_Quad.get_easeOut();
			this._options = { };
			this._target = null;
			this._props = null;
			this._duration = 0;
			this._initTime = 0;
			this._delay = 0;
		}
	}
	,__class__: cc_lets_Go
};
var cc_lets_easing_IEasing = function() { };
$hxClasses["cc.lets.easing.IEasing"] = cc_lets_easing_IEasing;
cc_lets_easing_IEasing.__name__ = ["cc","lets","easing","IEasing"];
cc_lets_easing_IEasing.prototype = {
	__class__: cc_lets_easing_IEasing
};
var cc_lets_easing_Quad = function() { };
$hxClasses["cc.lets.easing.Quad"] = cc_lets_easing_Quad;
cc_lets_easing_Quad.__name__ = ["cc","lets","easing","Quad"];
cc_lets_easing_Quad.__properties__ = {get_easeOut:"get_easeOut",get_easeInOut:"get_easeInOut",get_easeIn:"get_easeIn"};
cc_lets_easing_Quad.get_easeIn = function() {
	return new cc_lets_easing_QuadEaseIn();
};
cc_lets_easing_Quad.get_easeInOut = function() {
	return new cc_lets_easing_QuadEaseInOut();
};
cc_lets_easing_Quad.get_easeOut = function() {
	return new cc_lets_easing_QuadEaseOut();
};
var cc_lets_easing_QuadEaseIn = function() {
};
$hxClasses["cc.lets.easing.QuadEaseIn"] = cc_lets_easing_QuadEaseIn;
cc_lets_easing_QuadEaseIn.__name__ = ["cc","lets","easing","QuadEaseIn"];
cc_lets_easing_QuadEaseIn.__interfaces__ = [cc_lets_easing_IEasing];
cc_lets_easing_QuadEaseIn.prototype = {
	calculate: function(k) {
		return k * k;
	}
	,ease: function(t,b,c,d) {
		return c * (t /= d) * t + b;
	}
	,__class__: cc_lets_easing_QuadEaseIn
};
var cc_lets_easing_QuadEaseInOut = function() {
};
$hxClasses["cc.lets.easing.QuadEaseInOut"] = cc_lets_easing_QuadEaseInOut;
cc_lets_easing_QuadEaseInOut.__name__ = ["cc","lets","easing","QuadEaseInOut"];
cc_lets_easing_QuadEaseInOut.__interfaces__ = [cc_lets_easing_IEasing];
cc_lets_easing_QuadEaseInOut.prototype = {
	calculate: function(k) {
		if((k *= 2) < 1) {
			return 0.5 * k * k;
		}
		return -0.5 * ((k - 1) * (k - 3) - 1);
	}
	,ease: function(t,b,c,d) {
		if((t /= d / 2) < 1) {
			return c / 2 * t * t + b;
		}
		return -c / 2 * ((t - 1) * (t - 3) - 1) + b;
	}
	,__class__: cc_lets_easing_QuadEaseInOut
};
var cc_lets_easing_QuadEaseOut = function() {
};
$hxClasses["cc.lets.easing.QuadEaseOut"] = cc_lets_easing_QuadEaseOut;
cc_lets_easing_QuadEaseOut.__name__ = ["cc","lets","easing","QuadEaseOut"];
cc_lets_easing_QuadEaseOut.__interfaces__ = [cc_lets_easing_IEasing];
cc_lets_easing_QuadEaseOut.prototype = {
	calculate: function(k) {
		return -k * (k - 2);
	}
	,ease: function(t,b,c,d) {
		return -c * (t /= d) * (t - 2) + b;
	}
	,__class__: cc_lets_easing_QuadEaseOut
};
var cc_lets_easing_Sine = function() { };
$hxClasses["cc.lets.easing.Sine"] = cc_lets_easing_Sine;
cc_lets_easing_Sine.__name__ = ["cc","lets","easing","Sine"];
cc_lets_easing_Sine.__properties__ = {get_easeOut:"get_easeOut",get_easeInOut:"get_easeInOut",get_easeIn:"get_easeIn"};
cc_lets_easing_Sine.get_easeIn = function() {
	return new cc_lets_easing_SineEaseIn();
};
cc_lets_easing_Sine.get_easeInOut = function() {
	return new cc_lets_easing_SineEaseInOut();
};
cc_lets_easing_Sine.get_easeOut = function() {
	return new cc_lets_easing_SineEaseOut();
};
var cc_lets_easing_SineEaseIn = function() {
};
$hxClasses["cc.lets.easing.SineEaseIn"] = cc_lets_easing_SineEaseIn;
cc_lets_easing_SineEaseIn.__name__ = ["cc","lets","easing","SineEaseIn"];
cc_lets_easing_SineEaseIn.__interfaces__ = [cc_lets_easing_IEasing];
cc_lets_easing_SineEaseIn.prototype = {
	calculate: function(k) {
		return 1 - Math.cos(k * (Math.PI / 2));
	}
	,ease: function(t,b,c,d) {
		return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;
	}
	,__class__: cc_lets_easing_SineEaseIn
};
var cc_lets_easing_SineEaseInOut = function() {
};
$hxClasses["cc.lets.easing.SineEaseInOut"] = cc_lets_easing_SineEaseInOut;
cc_lets_easing_SineEaseInOut.__name__ = ["cc","lets","easing","SineEaseInOut"];
cc_lets_easing_SineEaseInOut.__interfaces__ = [cc_lets_easing_IEasing];
cc_lets_easing_SineEaseInOut.prototype = {
	calculate: function(k) {
		return -(Math.cos(Math.PI * k) - 1) / 2;
	}
	,ease: function(t,b,c,d) {
		return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;
	}
	,__class__: cc_lets_easing_SineEaseInOut
};
var cc_lets_easing_SineEaseOut = function() {
};
$hxClasses["cc.lets.easing.SineEaseOut"] = cc_lets_easing_SineEaseOut;
cc_lets_easing_SineEaseOut.__name__ = ["cc","lets","easing","SineEaseOut"];
cc_lets_easing_SineEaseOut.__interfaces__ = [cc_lets_easing_IEasing];
cc_lets_easing_SineEaseOut.prototype = {
	calculate: function(k) {
		return Math.sin(k * (Math.PI / 2));
	}
	,ease: function(t,b,c,d) {
		return c * Math.sin(t / d * (Math.PI / 2)) + b;
	}
	,__class__: cc_lets_easing_SineEaseOut
};
var cc_model_constants_App = function() { };
$hxClasses["cc.model.constants.App"] = cc_model_constants_App;
cc_model_constants_App.__name__ = ["cc","model","constants","App"];
var cc_model_constants_Sizes = function() {
	this.APAPER = [];
	this.INSTAGRAM = [];
	this.INSTA_SQUARE_VIDEO = { width : 1080, height : 1080, dpi : 72, description : "Instagram square video"};
	this.INSTAGRAM = [this.INSTA_SQUARE_VIDEO];
};
$hxClasses["cc.model.constants.Sizes"] = cc_model_constants_Sizes;
cc_model_constants_Sizes.__name__ = ["cc","model","constants","Sizes"];
cc_model_constants_Sizes.prototype = {
	__class__: cc_model_constants_Sizes
};
var cc_tool_Embed = function() {
};
$hxClasses["cc.tool.Embed"] = cc_tool_Embed;
cc_tool_Embed.__name__ = ["cc","tool","Embed"];
cc_tool_Embed.check = function(id) {
	if(window.document.getElementById(id) != null) {
		return true;
	} else {
		return false;
	}
};
cc_tool_Embed.script = function(id,src,callback,callbackArray) {
	var el = window.document.createElement("script");
	el.id = id;
	el.src = src;
	el.crossOrigin = "anonymous";
	el.onload = function() {
		if(callback != null) {
			if(callbackArray == null) {
				callback.apply(callback,[id]);
			} else {
				callback.apply(callback,callbackArray);
			}
		}
	};
	window.document.body.appendChild(el);
};
cc_tool_Embed.prototype = {
	__class__: cc_tool_Embed
};
var cc_tool_ExportFile = function() { };
$hxClasses["cc.tool.ExportFile"] = cc_tool_ExportFile;
cc_tool_ExportFile.__name__ = ["cc","tool","ExportFile"];
cc_tool_ExportFile.downloadImage = function(ctx,isJpg,fileName) {
	if(isJpg == null) {
		isJpg = false;
	}
	if(fileName == null) {
		var hash = window.location.hash;
		hash = StringTools.replace(hash,"#","").toLowerCase();
		if(hash == "") {
			hash = "image";
		}
		fileName = "" + hash + "-" + new Date().getTime();
	}
	var link = window.document.createElement("a");
	link.href = ctx.canvas.toDataURL(isJpg ? "image/jpeg" : "",1);
	link.download = fileName;
	link.click();
};
cc_tool_ExportFile.onBase64Handler = function(ctx,isJpg) {
	if(isJpg == null) {
		isJpg = false;
	}
	var base64 = ctx.canvas.toDataURL(isJpg ? "image/jpeg" : "",1);
	cc_tool_ExportFile.clipboard(base64);
};
cc_tool_ExportFile.downloadTextFile = function(text,fileName) {
	if(fileName == null) {
		fileName = "CC-txt-" + new Date().getTime() + ".txt";
	}
	var element = window.document.createElement("a");
	element.setAttribute("href","data:text/plain;charset=utf-8," + encodeURIComponent(text));
	element.setAttribute("download",fileName);
	element.style.display = "none";
	window.document.body.appendChild(element);
	element.click();
	window.document.body.removeChild(element);
};
cc_tool_ExportFile.clipboard = function(text) {
	var win = "Ctrl+C";
	var mac = "Cmd+C";
	var copyCombo = win;
	var userAgent = window.navigator.userAgent;
	var ereg = new EReg("iPhone|iPod|iPad|Android|BlackBerry","i");
	var ismac = ereg.match(userAgent);
	if(ismac) {
		copyCombo = mac;
	}
	window.prompt("Copy to clipboard: " + copyCombo + ", Enter",text);
};
cc_tool_ExportFile.downloadImageBg = function(ctx,isJpg,fileName) {
	if(isJpg == null) {
		isJpg = false;
	}
	var canvas = ctx.canvas;
	if(fileName == null) {
		var hash = window.location.hash;
		hash = StringTools.replace(hash,"#","").toLowerCase();
		if(hash == "") {
			hash = "image";
		}
		fileName = "" + hash + "-" + new Date().getTime();
	}
	var w = canvas.width;
	var h = canvas.height;
	var data;
	var compositeOperation;
	data = ctx.getImageData(0,0,w,h);
	compositeOperation = ctx.globalCompositeOperation;
	ctx.globalCompositeOperation = "destination-over";
	ctx.fillStyle = "#ffffff";
	ctx.fillRect(0,0,w,h);
	var imageData = canvas.toDataURL("image/png");
	ctx.clearRect(0,0,w,h);
	ctx.putImageData(data,0,0);
	ctx.globalCompositeOperation = compositeOperation;
	var link = window.document.createElement("a");
	link.download = fileName;
	if(!HTMLCanvasElement.prototype.toBlob) {
		link.href = ctx.canvas.toDataURL(isJpg ? "image/jpeg" : "",1);
		link.click();
	} else {
		ctx.canvas.toBlob(function(blob) {
			link.href = URL.createObjectURL(blob);
			link.click();
		},isJpg ? "image/jpeg" : "",1);
	}
};
cc_tool_ExportFile.prototype = {
	toString: function() {
		return "[ExportFile]";
	}
	,__class__: cc_tool_ExportFile
};
var cc_tool_Loader = function(id) {
	this._loadCounter = 0;
	this._isDebug = false;
	this.completeArray = [];
	this._loadingArray = [];
	if(id == null) {
		this.set__id("" + this.toString() + "_" + new Date().getTime());
	} else {
		this.set__id(id);
	}
};
$hxClasses["cc.tool.Loader"] = cc_tool_Loader;
cc_tool_Loader.__name__ = ["cc","tool","Loader"];
cc_tool_Loader.create = function(id) {
	var loader = new cc_tool_Loader(id);
	return loader;
};
cc_tool_Loader.prototype = {
	isDebug: function(isDebug) {
		if(isDebug == null) {
			isDebug = true;
		}
		this.set__isDebug(isDebug);
		return this;
	}
	,add: function(path,func,type) {
		var _type = type == null ? this.fileType(path) : type;
		var _obj = { path : path, type : _type, func : func};
		if(this.get__isDebug()) {
			haxe_Log.trace(_obj,{ fileName : "Loader.hx", lineNumber : 76, className : "cc.tool.Loader", methodName : "add"});
		}
		this.get__loadingArray().push(_obj);
		return this;
	}
	,onComplete: function(func,arr) {
		this._onComplete = func;
		this._onCompleteParams = arr;
		return this;
	}
	,onUpdate: function(func,arr) {
		this._onUpdate = func;
		this._onUpdateParams = arr;
		return this;
	}
	,onProgress: function(func,arr) {
		this._onProgress = func;
		this._onProgressParams = arr;
		return this;
	}
	,onError: function(func,arr) {
		this._onError = func;
		this._onErrorParams = arr;
		return this;
	}
	,load: function() {
		if(this.get__isDebug()) {
			haxe_Log.trace("start loading",{ fileName : "Loader.hx", lineNumber : 121, className : "cc.tool.Loader", methodName : "load"});
		}
		this.loadingHandler();
		return this;
	}
	,fileType: function(path) {
		var type = cc_tool_FileType.Unknown;
		var ext = path.split(".")[1];
		var _g = ext.toLowerCase();
		switch(_g) {
		case "csv":
			type = cc_tool_FileType.Csv;
			break;
		case "gif":
			type = cc_tool_FileType.Gif;
			break;
		case "jpeg":case "jpg":
			type = cc_tool_FileType.JPG;
			break;
		case "json":
			type = cc_tool_FileType.Json;
			break;
		case "png":
			type = cc_tool_FileType.Png;
			break;
		case "txt":
			type = cc_tool_FileType.Txt;
			break;
		case "xml":
			type = cc_tool_FileType.Xml;
			break;
		default:
			type = cc_tool_FileType.Unknown;
		}
		return type;
	}
	,loadingHandler: function() {
		if(this._loadCounter >= this.get__loadingArray().length) {
			if(this.get__isDebug()) {
				haxe_Log.trace("" + this.toString() + " :: Loading queue is done",{ fileName : "Loader.hx", lineNumber : 165, className : "cc.tool.Loader", methodName : "loadingHandler"});
			}
			if(this.get__isDebug()) {
				haxe_Log.trace("show completed array: " + Std.string(this.completeArray),{ fileName : "Loader.hx", lineNumber : 167, className : "cc.tool.Loader", methodName : "loadingHandler"});
			}
			if(this.get__isDebug()) {
				haxe_Log.trace("length of complete files: " + this.completeArray.length,{ fileName : "Loader.hx", lineNumber : 169, className : "cc.tool.Loader", methodName : "loadingHandler"});
			}
			if(Reflect.isFunction(this._onComplete)) {
				this._onComplete.apply(this._onComplete,[this.completeArray]);
			}
			return;
		}
		var _l = this.get__loadingArray()[this._loadCounter];
		var _g = _l.type;
		switch(_g[1]) {
		case 3:case 5:case 13:case 15:case 17:
			this.textLoader(_l);
			break;
		case 1:case 7:case 9:case 11:case 12:
			this.imageLoader(_l);
			break;
		default:
			haxe_Log.trace("not sure what this type is?: \"" + _l.path + "\"",{ fileName : "Loader.hx", lineNumber : 184, className : "cc.tool.Loader", methodName : "loadingHandler"});
		}
	}
	,imageLoader: function(_l) {
		var _gthis = this;
		var _img = new Image();
		_img.crossOrigin = "Anonymous";
		_img.src = _l.path;
		_img.onload = function() {
			if(_gthis.get__isDebug()) {
				haxe_Log.trace("image source: " + _img.src,{ fileName : "Loader.hx", lineNumber : 194, className : "cc.tool.Loader", methodName : "imageLoader"});
				haxe_Log.trace("image width: " + _img.width,{ fileName : "Loader.hx", lineNumber : 195, className : "cc.tool.Loader", methodName : "imageLoader"});
				haxe_Log.trace("image height: " + _img.height,{ fileName : "Loader.hx", lineNumber : 196, className : "cc.tool.Loader", methodName : "imageLoader"});
			}
			if(_gthis.get__isDebug()) {
				haxe_Log.trace("complete array length: " + _gthis.completeArray.length,{ fileName : "Loader.hx", lineNumber : 199, className : "cc.tool.Loader", methodName : "imageLoader"});
			}
			_l.image = _img;
			_gthis.completeArray.push(_l);
			if(_gthis.get__isDebug()) {
				haxe_Log.trace("complete array: " + Std.string(_gthis.completeArray),{ fileName : "Loader.hx", lineNumber : 203, className : "cc.tool.Loader", methodName : "imageLoader"});
			}
			if(_gthis.get__isDebug()) {
				haxe_Log.trace("complete array length: " + _gthis.completeArray.length,{ fileName : "Loader.hx", lineNumber : 205, className : "cc.tool.Loader", methodName : "imageLoader"});
			}
			if(Reflect.isFunction(_l.func)) {
				_l.func.apply(_l.func,[_l]);
			}
			if(Reflect.isFunction(_gthis._onUpdate)) {
				_gthis._onUpdate.apply(_gthis._onUpdate,[_img]);
			}
			_gthis._loadCounter++;
			_gthis.loadingHandler();
		};
		_img.onerror = function() {
			if(Reflect.isFunction(_gthis._onError)) {
				_gthis._onError.apply(_gthis._onError,[_img]);
			}
			_gthis._loadCounter++;
			_gthis.loadingHandler();
		};
		_img.onprogress = function() {
			if(Reflect.isFunction(_gthis._onProgress)) {
				_gthis._onProgress.apply(_gthis._onProgress,[_img]);
			}
		};
	}
	,textLoader: function(_l) {
		var _gthis = this;
		var url = _l.path;
		var req = new haxe_Http(url);
		req.onData = function(data) {
			try {
				_l.str = data;
				if(_l.type == cc_tool_FileType.Json) {
					_l.json = JSON.parse(data);
				} else {
					_l.json = "";
				}
				_gthis.completeArray.push(_l);
				if(Reflect.isFunction(_l.func)) {
					_l.func.apply(_l.func,[_l]);
				}
				if(Reflect.isFunction(_gthis._onUpdate)) {
					_gthis._onUpdate.apply(_gthis._onUpdate,["_img"]);
				}
				_gthis._loadCounter++;
				_gthis.loadingHandler();
			} catch( e ) {
				if (e instanceof js__$Boot_HaxeError) e = e.val;
				if(_gthis.get__isDebug()) {
					haxe_Log.trace(e,{ fileName : "Loader.hx", lineNumber : 253, className : "cc.tool.Loader", methodName : "textLoader"});
				}
				_gthis._loadCounter++;
				_gthis.loadingHandler();
			}
		};
		req.onError = function(error) {
			if(_gthis.get__isDebug()) {
				haxe_Log.trace("error: " + error,{ fileName : "Loader.hx", lineNumber : 261, className : "cc.tool.Loader", methodName : "textLoader"});
			}
			_gthis._loadCounter++;
			_gthis.loadingHandler();
		};
		req.onStatus = function(status) {
			if(_gthis.get__isDebug()) {
				haxe_Log.trace("status: " + status,{ fileName : "Loader.hx", lineNumber : 267, className : "cc.tool.Loader", methodName : "textLoader"});
			}
		};
		req.request(true);
	}
	,get__id: function() {
		return this._id;
	}
	,set__id: function(value) {
		return this._id = value;
	}
	,get__loadingArray: function() {
		return this._loadingArray;
	}
	,set__loadingArray: function(value) {
		return this._loadingArray = value;
	}
	,get__isDebug: function() {
		return this._isDebug;
	}
	,set__isDebug: function(value) {
		return this._isDebug = value;
	}
	,toString: function() {
		return "[Loader]";
	}
	,__class__: cc_tool_Loader
	,__properties__: {set__isDebug:"set__isDebug",get__isDebug:"get__isDebug",set__loadingArray:"set__loadingArray",get__loadingArray:"get__loadingArray",set__id:"set__id",get__id:"get__id"}
};
var cc_tool_FileType = { __ename__ : true, __constructs__ : ["Unknown","Img","IMG","Txt","TXT","Json","JSON","Gif","GIF","Png","PNG","JPEG","JPG","Xml","XML","Svg","SVG","Csv","CSV"] };
cc_tool_FileType.Unknown = ["Unknown",0];
cc_tool_FileType.Unknown.toString = $estr;
cc_tool_FileType.Unknown.__enum__ = cc_tool_FileType;
cc_tool_FileType.Img = ["Img",1];
cc_tool_FileType.Img.toString = $estr;
cc_tool_FileType.Img.__enum__ = cc_tool_FileType;
cc_tool_FileType.IMG = ["IMG",2];
cc_tool_FileType.IMG.toString = $estr;
cc_tool_FileType.IMG.__enum__ = cc_tool_FileType;
cc_tool_FileType.Txt = ["Txt",3];
cc_tool_FileType.Txt.toString = $estr;
cc_tool_FileType.Txt.__enum__ = cc_tool_FileType;
cc_tool_FileType.TXT = ["TXT",4];
cc_tool_FileType.TXT.toString = $estr;
cc_tool_FileType.TXT.__enum__ = cc_tool_FileType;
cc_tool_FileType.Json = ["Json",5];
cc_tool_FileType.Json.toString = $estr;
cc_tool_FileType.Json.__enum__ = cc_tool_FileType;
cc_tool_FileType.JSON = ["JSON",6];
cc_tool_FileType.JSON.toString = $estr;
cc_tool_FileType.JSON.__enum__ = cc_tool_FileType;
cc_tool_FileType.Gif = ["Gif",7];
cc_tool_FileType.Gif.toString = $estr;
cc_tool_FileType.Gif.__enum__ = cc_tool_FileType;
cc_tool_FileType.GIF = ["GIF",8];
cc_tool_FileType.GIF.toString = $estr;
cc_tool_FileType.GIF.__enum__ = cc_tool_FileType;
cc_tool_FileType.Png = ["Png",9];
cc_tool_FileType.Png.toString = $estr;
cc_tool_FileType.Png.__enum__ = cc_tool_FileType;
cc_tool_FileType.PNG = ["PNG",10];
cc_tool_FileType.PNG.toString = $estr;
cc_tool_FileType.PNG.__enum__ = cc_tool_FileType;
cc_tool_FileType.JPEG = ["JPEG",11];
cc_tool_FileType.JPEG.toString = $estr;
cc_tool_FileType.JPEG.__enum__ = cc_tool_FileType;
cc_tool_FileType.JPG = ["JPG",12];
cc_tool_FileType.JPG.toString = $estr;
cc_tool_FileType.JPG.__enum__ = cc_tool_FileType;
cc_tool_FileType.Xml = ["Xml",13];
cc_tool_FileType.Xml.toString = $estr;
cc_tool_FileType.Xml.__enum__ = cc_tool_FileType;
cc_tool_FileType.XML = ["XML",14];
cc_tool_FileType.XML.toString = $estr;
cc_tool_FileType.XML.__enum__ = cc_tool_FileType;
cc_tool_FileType.Svg = ["Svg",15];
cc_tool_FileType.Svg.toString = $estr;
cc_tool_FileType.Svg.__enum__ = cc_tool_FileType;
cc_tool_FileType.SVG = ["SVG",16];
cc_tool_FileType.SVG.toString = $estr;
cc_tool_FileType.SVG.__enum__ = cc_tool_FileType;
cc_tool_FileType.Csv = ["Csv",17];
cc_tool_FileType.Csv.toString = $estr;
cc_tool_FileType.Csv.__enum__ = cc_tool_FileType;
cc_tool_FileType.CSV = ["CSV",18];
cc_tool_FileType.CSV.toString = $estr;
cc_tool_FileType.CSV.__enum__ = cc_tool_FileType;
var cc_tool_export_ExportNames = function() {
};
$hxClasses["cc.tool.export.ExportNames"] = cc_tool_export_ExportNames;
cc_tool_export_ExportNames.__name__ = ["cc","tool","export","ExportNames"];
cc_tool_export_ExportNames.prototype = {
	__class__: cc_tool_export_ExportNames
};
var cc_tool_export_ExportWrapperBase = function() {
	this._isDebug = false;
};
$hxClasses["cc.tool.export.ExportWrapperBase"] = cc_tool_export_ExportWrapperBase;
cc_tool_export_ExportWrapperBase.__name__ = ["cc","tool","export","ExportWrapperBase"];
cc_tool_export_ExportWrapperBase.prototype = {
	progress: function(func) {
		this._onProgressHandler = func;
	}
	,complete: function(func) {
		this._onExportComplete = func;
	}
	,getMarkdownLite: function() {
		var md = "# " + this.toString() + "\n\n- Generated on: " + Std.string(new Date()) + "\n\n## Instagram\n\n```\n#codeart #coding #creativecode #generative #generativeArt\n#minimalism #minimalist #minimal\n#haxe #javascript #js #nodejs\n#illustration #graphicdesign #graphic\n#animation #motion #motiondesign #motiongraphics\n```\n\n## convert\n\nopen terminal\n\n```\nsh convert.sh\n```\n\n";
		return md;
	}
	,getMarkdown: function(obj) {
		var md = "# " + this.toString() + "\n\n- Generated on: " + Std.string(new Date()) + "\n- total images: " + obj.imageStringArray.length + "\n- calculated time: " + obj.imageStringArray.length / 60 + " sec\n- file name: `_" + obj.filename + "_" + obj.timestamp + ".zip`\n- delay: " + obj.delay + " frames (" + obj.delay / 60 + " sec)\n- record: " + obj.record + " frames (" + obj.record / 60 + " sec)\n\n## Instagram\n\n```\nsketch." + obj.filename + " :: " + obj.description + "\n\n#codeart #coding #creativecode #generative #generativeArt\n#minimalism #minimalist #minimal\n#haxe #javascript #js #nodejs\n#illustration #graphicdesign #graphic\n#animation #motion #motiondesign #motiongraphics\n```\n\n## convert\n\nopen terminal\n\n```\nsh convert.sh\n```\n\n## Folder structure\n\n```\n+ _" + obj.filename + "_" + obj.timestamp + ".zip\n+ _" + obj.filename + "\n\t- convert.sh\n\t- README.MD\n\t+ sequence\n\t\t- image_" + StringTools.lpad("0","0",4) + ".png\n\t\t- image_" + StringTools.lpad("1","0",4) + ".png\n\t\t- ...\n```\n";
		return md;
	}
	,getBashConvert: function(obj) {
		var bash = "#!/bin/bash\n\necho 'Start convertions png sequence to mp4'\n\nffmpeg -y -r 30 -i sequence/image_%04d.png -c:v libx264 -strict -2 -pix_fmt yuv420p -shortest -filter:v \"setpts=0.5*PTS\"  " + obj.filename + "_output_30fps.mp4\n\n# convert a short sequence to a mp4, one frame per second\n# ffmpeg -y -r 1 -i sequence/image_%04d.png -c:v libx264 -strict -2 -pix_fmt yuv420p -shortest -filter:v \"setpts=0.5*PTS\"  " + obj.filename + "_output_1fps.mp4\n\n# rendercan fix\n# ffmpeg -y -r 30 -i framescemage_%09d.png -c:v libx264 -strict -2 -pix_fmt yuv420p -shortest -filter:v \"setpts=0.5*PTS\"  sequence/_output_30fps.mp4\n\necho 'End convertions png sequence to mp4'\n\n";
		return bash;
	}
	,getBashConvertPng: function(obj) {
		var bash2 = "\n#!/bin/bash\n\necho 'Start remove transparancy from images sequence'\n\ncd sequence\nmkdir output\nfor i in *.png; do\n   convert \"$" + "i\" -background white -alpha remove output/\"$" + "i\"\n   echo \"$" + "i\"\ndone\n\necho 'End remove transparancy from images sequence'\necho 'Start convertions png sequence to mp4'\n\nffmpeg -y -r 30 -i output/image_%04d.png -c:v libx264 -strict -2 -pix_fmt yuv420p -shortest -filter:v \"setpts=0.5*PTS\"  ../" + obj.filename + "_white_output_30fps.mp4\n\necho 'End convertions png sequence to mp4'\n\n";
		return bash2;
	}
	,debug: function(isDebug) {
		this._isDebug = isDebug;
	}
	,toString: function() {
		return "[ExportTypeBase]";
	}
	,__class__: cc_tool_export_ExportWrapperBase
};
var cc_tool_export_IExport = function() { };
$hxClasses["cc.tool.export.IExport"] = cc_tool_export_IExport;
cc_tool_export_IExport.__name__ = ["cc","tool","export","IExport"];
cc_tool_export_IExport.prototype = {
	__class__: cc_tool_export_IExport
};
var cc_tool_export_ExportNodeServer = function() {
	this._isEmbeded = false;
	this._folder = "sequence";
	this._name = "image";
	this._exportCounter = 0;
	this._isRecording = false;
	this._isClear = false;
	this._isTimer = false;
	this._isSocketReady = false;
	this._isExportServerReady = false;
	haxe_Log.trace("constructor " + this.toString(),{ fileName : "ExportNodeServer.hx", lineNumber : 31, className : "cc.tool.export.ExportNodeServer", methodName : "new"});
	cc_tool_export_ExportWrapperBase.call(this);
	this.embedScripts($bind(this,this.onEmbedComplete));
};
$hxClasses["cc.tool.export.ExportNodeServer"] = cc_tool_export_ExportNodeServer;
cc_tool_export_ExportNodeServer.__name__ = ["cc","tool","export","ExportNodeServer"];
cc_tool_export_ExportNodeServer.__interfaces__ = [cc_tool_export_IExport];
cc_tool_export_ExportNodeServer.__super__ = cc_tool_export_ExportWrapperBase;
cc_tool_export_ExportNodeServer.prototype = $extend(cc_tool_export_ExportWrapperBase.prototype,{
	'export': function(obj) {
		if(this._isDebug) {
			haxe_Log.trace("" + this.toString() + " - export",{ fileName : "ExportNodeServer.hx", lineNumber : 41, className : "cc.tool.export.ExportNodeServer", methodName : "export"});
		}
		this._exportObj = obj;
		this._folder = obj.filename;
		this._exportArray = obj.imageStringArray;
		this._exportCounter = 0;
		this.deleteFolder();
	}
	,exportLite: function(fileName,imageStringArray) {
	}
	,startExport: function() {
		if(this._isDebug) {
			haxe_Log.trace("startExport: " + this._exportCounter + " / " + this._exportArray.length,{ fileName : "ExportNodeServer.hx", lineNumber : 57, className : "cc.tool.export.ExportNodeServer", methodName : "startExport"});
		}
		if(Reflect.isFunction(this._onProgressHandler)) {
			this._onProgressHandler.apply(this._onProgressHandler,[this._exportCounter / this._exportArray.length * 100]);
		}
		if(this._exportCounter >= this._exportArray.length) {
			this._isRecording = false;
			if(Reflect.isFunction(this._onExportComplete)) {
				this._onExportComplete.apply(this._onExportComplete,[]);
			}
			if(this._isDebug) {
				haxe_Log.trace("" + this.toString() + " STOP recording base on total frames",{ fileName : "ExportNodeServer.hx", lineNumber : 68, className : "cc.tool.export.ExportNodeServer", methodName : "startExport"});
			}
			this.convertExport();
			return;
		}
		var id = Std.string(new Date().getTime());
		var data = { _id : id, file : this._exportArray[this._exportCounter], name : "" + this._name + "_" + StringTools.lpad(Std.string(this._exportCounter),"0",4), folder : "" + this._folder};
		if(this._isDebug) {
			haxe_Log.trace("" + this.toString() + " renderSequence : " + data._id,{ fileName : "ExportNodeServer.hx", lineNumber : 81, className : "cc.tool.export.ExportNodeServer", methodName : "startExport"});
		}
		this._socket.emit(cc_tool_export_ExportNames.SEQUENCE,data);
		if(this._exportCounter % 60 == 1) {
			if(this._isDebug) {
				haxe_Log.trace("current frame render: " + this._exportCounter + "/" + this._exportArray.length,{ fileName : "ExportNodeServer.hx", lineNumber : 88, className : "cc.tool.export.ExportNodeServer", methodName : "startExport"});
			}
		}
	}
	,convertExport: function() {
		var data = { name : "" + this._name, folder : "" + this._folder, clear : this._isClear, description : "export this file "};
		this._socket.emit(cc_tool_export_ExportNames.COMBINE,data);
		var data1 = { name : "" + this._name, folder : "" + this._folder, content : this.getMarkdown(this._exportObj)};
		data1["name"] = "README.MD";
		data1["content"] = this.getMarkdown(this._exportObj);
		this._socket.emit("export.file",data1);
		data1["name"] = "convert.sh";
		data1["content"] = this.getBashConvert(this._exportObj);
		this._socket.emit("export.file",data1);
		data1["name"] = "png.sh";
		data1["content"] = this.getBashConvertPng(this._exportObj);
		this._socket.emit("export.file",data1);
	}
	,deleteFolder: function() {
		var data = { name : "" + this._name, clear : this._isClear, folder : "" + this._folder};
		this._socket.emit(cc_tool_export_ExportNames.RENDER_CLEAR,data);
	}
	,initSocket: function() {
		var _gthis = this;
		haxe_Log.trace("" + this.toString() + " Init Socket",{ fileName : "ExportNodeServer.hx", lineNumber : 131, className : "cc.tool.export.ExportNodeServer", methodName : "initSocket"});
		if(!this._isEmbeded) {
			haxe_Log.trace("_isEmbeded : " + Std.string(this._isEmbeded),{ fileName : "ExportNodeServer.hx", lineNumber : 134, className : "cc.tool.export.ExportNodeServer", methodName : "initSocket"});
			return;
		}
		haxe_Log.trace(this._host,{ fileName : "ExportNodeServer.hx", lineNumber : 138, className : "cc.tool.export.ExportNodeServer", methodName : "initSocket", customParams : [this._port]});
		this._socket = io("http://localhost:5000");
		this._socket.on("connect_error",function(err) {
			window.console.group("Connection error export server");
			window.console.warn("" + _gthis.toString() + " Error connecting to server \"" + err + "\", closing connection");
			window.console.info("this probably means that cc-export project isn't running");
			window.console.groupEnd();
			_gthis._socket.close();
			_gthis._isRecording = false;
			_gthis._isExportServerReady = false;
		});
		this._socket.on("connect",function(err1) {
			if(err1 == "undefined") {
				haxe_Log.trace("" + _gthis.toString() + " connect: " + err1,{ fileName : "ExportNodeServer.hx", lineNumber : 159, className : "cc.tool.export.ExportNodeServer", methodName : "initSocket"});
			} else {
				haxe_Log.trace("" + _gthis.toString() + " connect",{ fileName : "ExportNodeServer.hx", lineNumber : 161, className : "cc.tool.export.ExportNodeServer", methodName : "initSocket"});
			}
			if(err1 == null) {
				_gthis._isSocketReady = true;
			}
		});
		this._socket.on("disconnect",function(err2) {
			haxe_Log.trace("" + _gthis.toString() + " disconnect: " + err2,{ fileName : "ExportNodeServer.hx", lineNumber : 168, className : "cc.tool.export.ExportNodeServer", methodName : "initSocket"});
		});
		this._socket.on("connect_failed",function(err3) {
			haxe_Log.trace("" + _gthis.toString() + " connect_failed: " + err3,{ fileName : "ExportNodeServer.hx", lineNumber : 173, className : "cc.tool.export.ExportNodeServer", methodName : "initSocket"});
		});
		this._socket.on("error",function(err4) {
			haxe_Log.trace("" + _gthis.toString() + " error: " + err4,{ fileName : "ExportNodeServer.hx", lineNumber : 176, className : "cc.tool.export.ExportNodeServer", methodName : "initSocket"});
		});
		this._socket.on("message",function(data) {
			if(data.message != null) {
				window.console.log("" + _gthis.toString() + " message: " + data.message);
			} else {
				window.console.log("" + _gthis.toString() + " There is a problem: " + Std.string(data));
			}
		});
		this._socket.emit(cc_tool_export_ExportNames.CHECKIN);
		this._socket.on(cc_tool_export_ExportNames.SERVER_CHECKIN,function(data1) {
			if(data1.checkin != null && data1.checkin == true) {
				_gthis._isExportServerReady = true;
				window.console.log("" + _gthis.toString() + " data:  + " + Std.string(data1) + ", & _isExportServerReady: " + (_gthis._isExportServerReady == null ? "null" : "" + _gthis._isExportServerReady));
			} else {
				window.console.log("" + _gthis.toString() + " There is a problem: " + Std.string(data1));
			}
		});
		this._socket.on(cc_tool_export_ExportNames.RENDER_DONE,function(data2) {
			window.console.log(data2);
		});
		this._socket.on(cc_tool_export_ExportNames.RENDER_CLEAR_DONE,function(data3) {
			if(_gthis._isDebug) {
				window.console.log(data3.message);
			}
			_gthis.startExport();
		});
		this._socket.on(cc_tool_export_ExportNames.SEQUENCE_NEXT,function(data4) {
			if(_gthis._isDebug) {
				window.console.log("SEQUENCE_NEXT: " + data4.message);
			}
			_gthis._exportCounter++;
			_gthis.startExport();
		});
	}
	,onEmbedComplete: function(value) {
		var _gthis = this;
		if(this._isDebug) {
			window.console.log("" + this.toString() + " " + value);
		}
		this._isEmbeded = true;
		haxe_Timer.delay(function() {
			_gthis.initSocket();
		},1);
	}
	,embedScripts: function(callback,callbackArray) {
		var id = "embedSocketIO";
		haxe_Log.trace("Check if \"" + id + "\" is embedded",{ fileName : "ExportNodeServer.hx", lineNumber : 234, className : "cc.tool.export.ExportNodeServer", methodName : "embedScripts"});
		if(!cc_tool_Embed.check(id)) {
			window.console.warn("" + id + " = not Embedded");
			this._isEmbeded = false;
			cc_tool_Embed.script(id,"https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js",$bind(this,this.onEmbedComplete),["socket.io is embedded and loaded"]);
		} else {
			window.console.warn("" + id + " = already embeded");
		}
	}
	,toString: function() {
		return "[Export via Node]";
	}
	,__class__: cc_tool_export_ExportNodeServer
});
var cc_tool_export_ExportNone = function() {
	cc_tool_export_ExportWrapperBase.call(this);
};
$hxClasses["cc.tool.export.ExportNone"] = cc_tool_export_ExportNone;
cc_tool_export_ExportNone.__name__ = ["cc","tool","export","ExportNone"];
cc_tool_export_ExportNone.__interfaces__ = [cc_tool_export_IExport];
cc_tool_export_ExportNone.__super__ = cc_tool_export_ExportWrapperBase;
cc_tool_export_ExportNone.prototype = $extend(cc_tool_export_ExportWrapperBase.prototype,{
	'export': function(obj) {
		var _gthis = this;
		haxe_Timer.delay(function() {
			_gthis._progress(25);
		},250);
		haxe_Timer.delay(function() {
			_gthis._progress(50);
		},500);
		haxe_Timer.delay(function() {
			_gthis._progress(75);
		},750);
		haxe_Timer.delay(function() {
			_gthis._progress(100);
		},1000);
		haxe_Timer.delay(function() {
			_gthis._complete(100);
		},1000);
	}
	,exportLite: function(fileName,imageStringArray) {
	}
	,_progress: function(value) {
		if(Reflect.isFunction(this._onProgressHandler)) {
			haxe_Log.trace("onProgressHandler (" + value + ")",{ fileName : "ExportNone.hx", lineNumber : 34, className : "cc.tool.export.ExportNone", methodName : "_progress"});
			this._onProgressHandler.apply(this._onProgressHandler,[value]);
		}
	}
	,_complete: function(value) {
		if(Reflect.isFunction(this._onExportComplete)) {
			haxe_Log.trace("onExportComplete (" + value + ")",{ fileName : "ExportNone.hx", lineNumber : 41, className : "cc.tool.export.ExportNone", methodName : "_complete"});
			this._onExportComplete.apply(this._onExportComplete,[]);
		}
	}
	,toString: function() {
		return "[Export via TEST/NONE]";
	}
	,__class__: cc_tool_export_ExportNone
});
var cc_tool_export_IExportWrapper = function() { };
$hxClasses["cc.tool.export.IExportWrapper"] = cc_tool_export_IExportWrapper;
cc_tool_export_IExportWrapper.__name__ = ["cc","tool","export","IExportWrapper"];
cc_tool_export_IExportWrapper.prototype = {
	__class__: cc_tool_export_IExportWrapper
	,__properties__: {set__isDebug:"set__isDebug",get__isDebug:"get__isDebug"}
};
var cc_tool_export_ExportWrapper = function(ctx,fileName) {
	this.imageStringArray = [];
	this._type = cc_tool_export_ExportType.NONE;
	this._isMenu = true;
	this._record = 600;
	this._delay = 120;
	this.description = "";
	this._progressBarHeight = 3;
	this._recordCounter = 0;
	this._delayCounter = 0;
	this.isExportActive = false;
	this.fps = 60;
	haxe_Log.trace("constructor " + this.toString(),{ fileName : "ExportWrapper.hx", lineNumber : 60, className : "cc.tool.export.ExportWrapper", methodName : "new"});
	this.createQuicktoExportObj();
	this.create_ProgressBar();
	if(ctx == null) {
		window.console.warn("This is not acceptable, I need a context!");
		return;
	}
	this._filename = fileName == null ? this.toString() : fileName;
	this.set__ctx(ctx);
	this.out("ExportWrapper ready");
};
$hxClasses["cc.tool.export.ExportWrapper"] = cc_tool_export_ExportWrapper;
cc_tool_export_ExportWrapper.__name__ = ["cc","tool","export","ExportWrapper"];
cc_tool_export_ExportWrapper.__interfaces__ = [cc_tool_export_IExportWrapper];
cc_tool_export_ExportWrapper.prototype = {
	startExport: function() {
		this._startT = new Date().getTime();
		this.isExportActive = true;
		this.imageStringArray = [];
		this._delayCounter = 0;
		this._recordCounter = 0;
		this.type(this.get__type());
		this.out("" + this.toString() + " - start export - 0ms");
		if(this.get__isDebug()) {
			haxe_Log.trace(this.toString() + " - start export - 0ms",{ fileName : "ExportWrapper.hx", lineNumber : 86, className : "cc.tool.export.ExportWrapper", methodName : "startExport"});
			haxe_Log.trace(this.toExportObj(),{ fileName : "ExportWrapper.hx", lineNumber : 87, className : "cc.tool.export.ExportWrapper", methodName : "startExport"});
		}
	}
	,stopExport: function() {
		this._endT = new Date().getTime();
		this.record(this.imageStringArray.length);
		this.isExportActive = false;
		this.out(this.toString() + (" - stop export - " + (this._endT - this._startT) / 1000 + "sec"));
		if(this.get__isDebug()) {
			haxe_Log.trace(this.toString() + (" - stop export - " + (this._endT - this._startT) / 1000 + "sec"),{ fileName : "ExportWrapper.hx", lineNumber : 98, className : "cc.tool.export.ExportWrapper", methodName : "stopExport"});
			haxe_Log.trace(this.toExportObj(),{ fileName : "ExportWrapper.hx", lineNumber : 99, className : "cc.tool.export.ExportWrapper", methodName : "stopExport"});
		}
		if(Reflect.isFunction(this._onComplete)) {
			var arr = this._onCompleteParams != null ? this._onCompleteParams : [];
			this._onComplete.apply(this._onComplete,arr);
		}
		if(Reflect.isFunction(this._onRecordComplete)) {
			var arr1 = this._onRecordCompleteParams != null ? this._onRecordCompleteParams : [];
			this._onRecordComplete.apply(this._onRecordComplete,arr1);
		}
		var timeStamp = this._endT;
		haxe_Log.trace(this.exportType.toString(),{ fileName : "ExportWrapper.hx", lineNumber : 115, className : "cc.tool.export.ExportWrapper", methodName : "stopExport"});
		this.exportType.progress($bind(this,this.progressGeneration));
		this.exportType.complete(this._onExportComplete);
		this.exportType.debug(this.get__isDebug());
		this.exportType["export"](this.toExportObj());
	}
	,init: function() {
		haxe_Log.trace("" + this.toString() + ".init : " + Std.string(this.toExportObj()),{ fileName : "ExportWrapper.hx", lineNumber : 129, className : "cc.tool.export.ExportWrapper", methodName : "init"});
		if($bind(this,this.pulse) == null) {
			window.console.warn("no pulse detected, hook into the animation");
			return;
		}
	}
	,start: function() {
		this.startExport();
	}
	,startNow: function() {
		this.startRecording();
	}
	,startRecording: function() {
		this.delay(0);
		this.recordInSeconds(60);
		this.init();
		this.startExport();
	}
	,stop: function() {
		this.stopExport();
	}
	,debug: function(isDebug) {
		if(isDebug == null) {
			isDebug = true;
		}
		this.set__isDebug(isDebug);
	}
	,onComplete: function(func,arr) {
		this._onComplete = func;
		this._onCompleteParams = arr;
	}
	,onRecordStart: function(func,arr) {
		this._onRecordStart = func;
		this._onRecordStartParams = arr;
	}
	,onRecordComplete: function(func,arr) {
		this._onRecordComplete = func;
		this._onRecordCompleteParams = arr;
	}
	,onExportComplete: function(func,arr) {
		this._onExportComplete = func;
		this._onExportCompleteParams = arr;
	}
	,menu: function(isVisible) {
		if(isVisible == null) {
			isVisible = false;
		}
		this.set__isMenu(isVisible);
		if(!this.get__isMenu()) {
			this.panel1.hide();
		}
	}
	,type: function(type) {
		if(this.get__type() == type) {
			haxe_Log.trace("" + Std.string(this.get__type()) + " == " + Std.string(type),{ fileName : "ExportWrapper.hx", lineNumber : 239, className : "cc.tool.export.ExportWrapper", methodName : "type"});
			return;
		}
		this.set__type(type);
		var _g = this.get__type();
		switch(_g[1]) {
		case 0:
			this.exportType = new cc_tool_export_ExportZip();
			break;
		case 1:
			this.exportType = new cc_tool_export_ExportNodeServer();
			break;
		case 2:case 3:
			this.exportType = new cc_tool_export_ExportNone();
			break;
		}
		haxe_Log.trace("ExportWrapper.type: " + Std.string(Type["typeof"](this.exportType)),{ fileName : "ExportWrapper.hx", lineNumber : 253, className : "cc.tool.export.ExportWrapper", methodName : "type"});
		haxe_Log.trace("ExportWrapper.obj: " + Std.string(this.toExportObj()),{ fileName : "ExportWrapper.hx", lineNumber : 254, className : "cc.tool.export.ExportWrapper", methodName : "type"});
	}
	,exporttype: function(type) {
		this.type(type);
	}
	,delay: function(frames) {
		this.set__delay(frames);
	}
	,delayInSeconds: function(sec) {
		this.set__delay(Math.round(sec * this.fps));
		this.panel1.setValue("delay in seconds",sec);
	}
	,record: function(frames) {
		this.set__record(frames);
	}
	,recordInSeconds: function(sec) {
		this.set__record(Math.round(sec * this.fps));
		this.panel1.setValue("record in seconds",sec);
	}
	,setting: function(obj) {
		haxe_Log.trace("settings: " + Std.string(obj),{ fileName : "ExportWrapper.hx", lineNumber : 311, className : "cc.tool.export.ExportWrapper", methodName : "setting"});
		this.set__type(null);
		this.exportType = null;
		this.set__record(obj.record);
		this.set__delay(obj.delay == null ? 0 : obj.delay);
		this.set__isDebug(obj.isDebug == null ? false : obj.isDebug);
		this.type(obj.type);
		this.init();
	}
	,toExportObj: function() {
		var obj = { filename : this._filename, export_type : this.get__type(), delay : this.get__delay(), record : this.get__record(), delay_in_seconds : this.get__delay() / 60, record_in_seconds : this.get__record() / 60, imageStringArray : this.imageStringArray, timestamp : new Date().getTime(), description : ""};
		return obj;
	}
	,isDebug: function(isDebug) {
		if(isDebug == null) {
			isDebug = true;
		}
		this.set__isDebug(isDebug);
	}
	,pulse: function() {
		if(this.isExportActive) {
			if(this._delayCounter < this.get__delay()) {
				if(this.get__isDebug()) {
					window.console.log("" + this.toString() + " delay: " + this._delayCounter + " < " + this.get__delay());
				}
			}
			if(this._delayCounter == this.get__delay()) {
				if(this.get__isDebug()) {
					window.console.log("" + this.toString() + " onRecordStart: " + this._delayCounter + " == " + this.get__delay());
				}
				if(Reflect.isFunction(this._onRecordStart)) {
					var arr = this._onRecordStartParams != null ? this._onRecordStartParams : [];
					this._onRecordStart.apply(this._onRecordStart,arr);
				}
			}
			if(this._delayCounter >= this.get__delay()) {
				if(this._recordCounter < this.get__record()) {
					if(this.get__isDebug()) {
						window.console.log("" + this.toString() + " recording: " + this._recordCounter + " < " + this.get__record());
					}
					this.imageStringArray.push(this.get__ctx().canvas.toDataURL("image/png").split("base64,")[1]);
					this.progressRecording(this._recordCounter / this.get__record() * 100);
					this._recordCounter++;
				} else {
					this.stopExport();
				}
			}
		}
		this._delayCounter++;
	}
	,createQuicktoExportObj: function() {
		var _gthis = this;
		this.panel1 = QuickSettings.create(10,10,"ExportWrapper settings").addRange("delay in seconds",0.0,5.0,2.0,0.5,function(e) {
			_gthis.setDelay(e);
		}).addRange("record in seconds",0.0,60.0,2.0,0.5,function(e1) {
			_gthis.setRecord(e1);
		}).addButton("recording",function(e2) {
			_gthis.onClickHandler(e2);
		}).addText("feedback","x",function(e3) {
		});
	}
	,out: function(str) {
		if(this.panel1 == null) {
			return;
		}
		this.panel1.setValue("feedback",str);
	}
	,setDelay: function(e) {
		this.out("delay in seconds: " + (e == null ? "null" : "" + e));
		this.set__delay(Math.round(this.fps * e));
	}
	,setRecord: function(e) {
		this.out("recording in seconds: " + (e == null ? "null" : "" + e));
		this.set__record(Math.round(this.fps * e));
	}
	,onClickHandler: function(e) {
		var input = e;
		var _g = input.value;
		switch(_g) {
		case "init recording":
			haxe_Log.trace("init recording",{ fileName : "ExportWrapper.hx", lineNumber : 419, className : "cc.tool.export.ExportWrapper", methodName : "onClickHandler"});
			this.setDelay(this.panel1.getValue("delay in seconds"));
			this.setRecord(this.panel1.getValue("record in seconds"));
			this.start();
			haxe_Log.trace(JSON.parse(JSON.stringify(this)),{ fileName : "ExportWrapper.hx", lineNumber : 423, className : "cc.tool.export.ExportWrapper", methodName : "onClickHandler"});
			break;
		case "recording":
			break;
		case "start recording":
			break;
		case "stop recording":
			haxe_Log.trace("stop recording",{ fileName : "ExportWrapper.hx", lineNumber : 425, className : "cc.tool.export.ExportWrapper", methodName : "onClickHandler"});
			this.stop();
			break;
		default:
			haxe_Log.trace("case '" + input.value + "': trace ('" + input.value + "');",{ fileName : "ExportWrapper.hx", lineNumber : 428, className : "cc.tool.export.ExportWrapper", methodName : "onClickHandler"});
		}
	}
	,create_ProgressBar: function(percentage) {
		if(percentage == null) {
			percentage = 10;
		}
		var body = window.document.querySelector("body");
		var div = window.document.createElement("div");
		div.setAttribute("id","zip-progress");
		div.innerHTML = "<span style=\"display:none\">" + percentage + "%</span>";
		div.style.position = "absolute";
		div.style.left = "0px";
		div.style.top = "0px";
		div.style.width = "100%";
		div.style.height = "" + this._progressBarHeight + "px";
		div.style.backgroundColor = "silver";
		body.appendChild(div);
		this._progressBar = div;
	}
	,progressGeneration: function(percent) {
		this._progressBar.style.width = "" + percent + "%";
		this._progressBar.style.backgroundColor = "navy";
	}
	,progressRecording: function(percent) {
		this._progressBar.style.width = "" + percent + "%";
		this._progressBar.style.backgroundColor = "red";
	}
	,get__isDebug: function() {
		return this._isDebug;
	}
	,set__isDebug: function(value) {
		return this._isDebug = value;
	}
	,get__ctx: function() {
		return this._ctx;
	}
	,set__ctx: function(value) {
		return this._ctx = value;
	}
	,get__delay: function() {
		return this._delay;
	}
	,set__delay: function(value) {
		return this._delay = value;
	}
	,get__record: function() {
		return this._record;
	}
	,set__record: function(value) {
		return this._record = value;
	}
	,get_description: function() {
		return this.description;
	}
	,set_description: function(value) {
		return this.description = value;
	}
	,get__isMenu: function() {
		return this._isMenu;
	}
	,set__isMenu: function(value) {
		return this._isMenu = value;
	}
	,get__type: function() {
		return this._type;
	}
	,set__type: function(value) {
		return this._type = value;
	}
	,toString: function() {
		return "[ExportWrapper]";
	}
	,__class__: cc_tool_export_ExportWrapper
	,__properties__: {set__type:"set__type",get__type:"get__type",set__isDebug:"set__isDebug",get__isDebug:"get__isDebug",set__isMenu:"set__isMenu",get__isMenu:"get__isMenu",set__ctx:"set__ctx",get__ctx:"get__ctx",set__record:"set__record",get__record:"get__record",set__delay:"set__delay",get__delay:"get__delay",set_description:"set_description",get_description:"get_description"}
};
var cc_tool_export_ExportType = { __ename__ : true, __constructs__ : ["ZIP","NODE","NONE","TEST"] };
cc_tool_export_ExportType.ZIP = ["ZIP",0];
cc_tool_export_ExportType.ZIP.toString = $estr;
cc_tool_export_ExportType.ZIP.__enum__ = cc_tool_export_ExportType;
cc_tool_export_ExportType.NODE = ["NODE",1];
cc_tool_export_ExportType.NODE.toString = $estr;
cc_tool_export_ExportType.NODE.__enum__ = cc_tool_export_ExportType;
cc_tool_export_ExportType.NONE = ["NONE",2];
cc_tool_export_ExportType.NONE.toString = $estr;
cc_tool_export_ExportType.NONE.__enum__ = cc_tool_export_ExportType;
cc_tool_export_ExportType.TEST = ["TEST",3];
cc_tool_export_ExportType.TEST.toString = $estr;
cc_tool_export_ExportType.TEST.__enum__ = cc_tool_export_ExportType;
var cc_tool_export_ExportZip = function() {
	cc_tool_export_ExportWrapperBase.call(this);
	this.embedScripts($bind(this,this.onEmbedComplete));
};
$hxClasses["cc.tool.export.ExportZip"] = cc_tool_export_ExportZip;
cc_tool_export_ExportZip.__name__ = ["cc","tool","export","ExportZip"];
cc_tool_export_ExportZip.__interfaces__ = [cc_tool_export_IExport];
cc_tool_export_ExportZip.__super__ = cc_tool_export_ExportWrapperBase;
cc_tool_export_ExportZip.prototype = $extend(cc_tool_export_ExportWrapperBase.prototype,{
	'export': function(obj) {
		var _gthis = this;
		var startT = new Date().getTime();
		if(obj.imageStringArray.length == 0) {
			haxe_Log.trace("NO images created / use start() - " + (new Date().getTime() - startT) / 1000 + "sec",{ fileName : "ExportZip.hx", lineNumber : 28, className : "cc.tool.export.ExportZip", methodName : "export"});
			return;
		}
		haxe_Log.trace("Start creation zip file - " + (new Date().getTime() - startT) / 1000 + "sec",{ fileName : "ExportZip.hx", lineNumber : 32, className : "cc.tool.export.ExportZip", methodName : "export"});
		var zip = new JSZip();
		zip.file("_" + obj.filename + "/README.MD",this.getMarkdown(obj));
		zip.file("_" + obj.filename + "/convert.sh",this.getBashConvert(obj));
		zip.file("_" + obj.filename + "/png.sh",this.getBashConvertPng(obj));
		var _g1 = 0;
		var _g = obj.imageStringArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this._isDebug) {
				haxe_Log.trace("/" + obj.imageStringArray.length + ". add image to file",{ fileName : "ExportZip.hx", lineNumber : 39, className : "cc.tool.export.ExportZip", methodName : "export"});
			}
			var img = obj.imageStringArray[i];
			zip.file("_" + obj.filename + "/sequence/image_" + StringTools.lpad(i == null ? "null" : "" + i,"0",4) + ".png",img,{ base64 : true});
		}
		haxe_Log.trace("Generate zip file - " + (new Date().getTime() - startT) / 1000 + "sec",{ fileName : "ExportZip.hx", lineNumber : 43, className : "cc.tool.export.ExportZip", methodName : "export"});
		var updateCallback = function(metadata) {
			if(_gthis._isDebug) {
				window.console.log("progression: " + metadata.percent.toFixed(2) + " %");
			}
			if(Reflect.isFunction(_gthis._onProgressHandler)) {
				var o = _gthis._onProgressHandler;
				var func = _gthis._onProgressHandler;
				var args = [parseFloat(metadata.percent.toFixed(2))];
				func.apply(o,args);
			}
		};
		zip.generateAsync({ type : "blob"},updateCallback).then(function(blob) {
			window.console.log("Save zip file complete - " + (new Date().getTime() - startT) / 1000 + "sec");
			saveAs(blob,"_" + obj.filename + "_" + obj.timestamp + ".zip");
			if(Reflect.isFunction(_gthis._onExportComplete)) {
				_gthis._onExportComplete.apply(_gthis._onExportComplete,[]);
			}
		},function(err) {
			window.console.log(err);
		});
	}
	,exportLite: function(filename,imageStringArray) {
		var _gthis = this;
		var startT = new Date().getTime();
		var obj = { imageStringArray : imageStringArray, filename : filename, timestamp : startT, delay : 0, record : 0, description : "", record_in_seconds : 0, export_type : cc_tool_export_ExportType.ZIP, delay_in_seconds : 0};
		if(imageStringArray.length == 0) {
			haxe_Log.trace("NO images created / use start() - " + (new Date().getTime() - startT) / 1000 + "sec",{ fileName : "ExportZip.hx", lineNumber : 89, className : "cc.tool.export.ExportZip", methodName : "exportLite"});
			return;
		}
		haxe_Log.trace("Start creation zip file - " + (new Date().getTime() - startT) / 1000 + "sec",{ fileName : "ExportZip.hx", lineNumber : 93, className : "cc.tool.export.ExportZip", methodName : "exportLite"});
		var zip = new JSZip();
		zip.file("_" + filename + "/README.MD",this.getMarkdownLite());
		zip.file("_" + filename + "/convert.sh",this.getBashConvert(obj));
		zip.file("_" + filename + "/png.sh",this.getBashConvertPng(obj));
		var _g1 = 0;
		var _g = imageStringArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this._isDebug) {
				haxe_Log.trace("/" + imageStringArray.length + ". add image to file",{ fileName : "ExportZip.hx", lineNumber : 101, className : "cc.tool.export.ExportZip", methodName : "exportLite"});
			}
			var img = imageStringArray[i];
			zip.file("_" + filename + "/sequence/image_" + StringTools.lpad(i == null ? "null" : "" + i,"0",4) + ".png",img,{ base64 : true});
		}
		haxe_Log.trace("Generate zip file - " + (new Date().getTime() - startT) / 1000 + "sec",{ fileName : "ExportZip.hx", lineNumber : 105, className : "cc.tool.export.ExportZip", methodName : "exportLite"});
		var updateCallback = function(metadata) {
			if(_gthis._isDebug) {
				window.console.log("progression: " + metadata.percent.toFixed(2) + " %");
			}
			if(Reflect.isFunction(_gthis._onProgressHandler)) {
				var o = _gthis._onProgressHandler;
				var func = _gthis._onProgressHandler;
				var args = [parseFloat(metadata.percent.toFixed(2))];
				func.apply(o,args);
			}
		};
		zip.generateAsync({ type : "blob"},updateCallback).then(function(blob) {
			window.console.log("Save zip file complete - " + (new Date().getTime() - startT) / 1000 + "sec");
			saveAs(blob,"_" + filename + "_" + startT + ".zip");
			if(Reflect.isFunction(_gthis._onExportComplete)) {
				_gthis._onExportComplete.apply(_gthis._onExportComplete,[]);
			}
		},function(err) {
			window.console.log(err);
		});
	}
	,embedScripts: function(callback,callbackArray) {
		if(!cc_tool_Embed.check("jszip")) {
			cc_tool_Embed.script("jszip","https://cdnjs.cloudflare.com/ajax/libs/jszip/3.2.0/jszip.min.js",$bind(this,this.onLoadComplete),["jszip",callback,callbackArray]);
		}
		if(!cc_tool_Embed.check("jsfilesaver")) {
			cc_tool_Embed.script("jsfilesaver","https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/1.3.8/FileSaver.min.js",$bind(this,this.onLoadComplete),["jsfilesaver",callback,callbackArray]);
		}
	}
	,onLoadComplete: function(str,callback,callbackArray) {
		switch(str) {
		case "jsfilesaver":
			cc_tool_export_ExportZip.isFileLoaded = true;
			break;
		case "jszip":
			cc_tool_export_ExportZip.isZipLoaded = true;
			break;
		default:
			haxe_Log.trace("case '" + str + "': trace ('" + str + "');",{ fileName : "ExportZip.hx", lineNumber : 157, className : "cc.tool.export.ExportZip", methodName : "onLoadComplete"});
		}
		if(cc_tool_export_ExportZip.isFileLoaded && cc_tool_export_ExportZip.isZipLoaded) {
			callback.apply(callback,["JsZip and jsFilesaver are embedded and loaded"]);
		}
	}
	,onEmbedComplete: function(value) {
		window.console.log("" + this.toString() + " - " + value);
	}
	,toString: function() {
		return "[Export via Zip]";
	}
	,__class__: cc_tool_export_ExportZip
});
var cc_util_AnimateUtil = function() {
};
$hxClasses["cc.util.AnimateUtil"] = cc_util_AnimateUtil;
cc_util_AnimateUtil.__name__ = ["cc","util","AnimateUtil"];
cc_util_AnimateUtil.tween = function(pos,target,speed) {
	if(speed == null) {
		speed = 20;
	}
	pos += (target - pos) / speed;
	return pos;
};
cc_util_AnimateUtil.bounce = function(num,min,max,sz) {
	if(sz == null) {
		sz = 0;
	}
	if(num >= max - sz / 2 || num - sz / 2 <= min) {
		return true;
	} else {
		return false;
	}
};
cc_util_AnimateUtil.prototype = {
	__class__: cc_util_AnimateUtil
};
var cc_util_ColorUtil = function() {
};
$hxClasses["cc.util.ColorUtil"] = cc_util_ColorUtil;
cc_util_ColorUtil.__name__ = ["cc","util","ColorUtil"];
cc_util_ColorUtil.getColour = function(r,g,b,a) {
	var c;
	if(g == null) {
		c = cc_util_ColorUtil.rgb(r,r,r);
	} else if(b == null && a == null) {
		c = cc_util_ColorUtil.rgba(r,r,r,g);
	} else if(a == null) {
		c = cc_util_ColorUtil.rgb(r,g,b);
	} else {
		c = cc_util_ColorUtil.rgba(r,g,b,a);
	}
	return c;
};
cc_util_ColorUtil.getColourObj = function(rgb,a) {
	return cc_util_ColorUtil.getColour(rgb.r,rgb.g,rgb.b,a);
};
cc_util_ColorUtil.rgb = function(r,g,b) {
	if(g == null) {
		g = r;
	}
	if(b == null) {
		b = r;
	}
	return "rgb(" + cc_util_MathUtil.clamp(Math.round(r),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(g),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(b),0,255) + ")";
};
cc_util_ColorUtil.rgba = function(r,g,b,a) {
	if(g == null) {
		return "rgb(" + cc_util_MathUtil.clamp(Math.round(r),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(r),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(r),0,255) + ")";
	} else if(b == null) {
		return "rgba(" + cc_util_MathUtil.clamp(Math.round(r),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(r),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(r),0,255) + ", " + cc_util_MathUtil.clamp(g,0,1) + ")";
	} else if(a == null) {
		return "rgba(" + cc_util_MathUtil.clamp(Math.round(r),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(g),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(b),0,255) + ", 1)";
	} else {
		return "rgba(" + cc_util_MathUtil.clamp(Math.round(r),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(g),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(b),0,255) + ", " + cc_util_MathUtil.clamp(a,0,1) + ")";
	}
};
cc_util_ColorUtil.rgbToHex = function(r,g,b) {
	return StringTools.hex(r,2) + StringTools.hex(g,2) + StringTools.hex(b,2);
};
cc_util_ColorUtil.rgb2hex = function(r,g,b,a) {
	if(a == null) {
		a = 255;
	}
	return a << 24 | r << 16 | g << 8 | b;
};
cc_util_ColorUtil.randomColour = function() {
	var r = cc_util_MathUtil.randomInt(255);
	var g = cc_util_MathUtil.randomInt(255);
	var b = cc_util_MathUtil.randomInt(255);
	return cc_util_ColorUtil.rgb(r,g,b);
};
cc_util_ColorUtil.randomColourObject = function() {
	var r = cc_util_MathUtil.randomInt(255);
	var g = cc_util_MathUtil.randomInt(255);
	var b = cc_util_MathUtil.randomInt(255);
	return { r : r, g : g, b : b};
};
cc_util_ColorUtil.toRGB = function($int) {
	return { r : Math.round($int >> 16 & 255), g : Math.round($int >> 8 & 255), b : Math.round($int & 255)};
};
cc_util_ColorUtil.ttoRGB = function($int) {
	return { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
};
cc_util_ColorUtil.hex2RGB = function(hex) {
	var $int = Std.parseInt(StringTools.replace(hex,"#","0x"));
	return { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
};
cc_util_ColorUtil.prototype = {
	__class__: cc_util_ColorUtil
};
var cc_util_GridUtil = function(ctx) {
	this._isDebug = false;
	this._isPosition = false;
	this._isDimension = false;
	this._isNumbered = false;
	this._isCellSize = false;
	this.numVer = null;
	this.numHor = null;
	this.cellHeight = null;
	this.cellWidth = null;
	this.isFullscreen = false;
	this.isCentered = false;
	this.gridY = 0;
	this.gridX = 0;
	this.height = null;
	this.width = null;
	this.y = null;
	this.x = null;
	this.total = null;
	this.array = [];
	if(ctx != null) {
		this._ctx = ctx;
	}
};
$hxClasses["cc.util.GridUtil"] = cc_util_GridUtil;
cc_util_GridUtil.__name__ = ["cc","util","GridUtil"];
cc_util_GridUtil.create = function(ctx) {
	var GridUtil = new cc_util_GridUtil(ctx);
	return GridUtil;
};
cc_util_GridUtil.createGrid = function(x,y,width,height,numHor,numVer) {
	if(numVer == null) {
		numVer = 1;
	}
	if(numHor == null) {
		numHor = 1;
	}
	var gridW = width / (numHor - 1);
	var gridH = height / (numVer - 1);
	var total = numHor * numVer;
	var xpos = 0;
	var ypos = 0;
	var arr = [];
	var _g1 = 0;
	var _g = total;
	while(_g1 < _g) {
		var i = _g1++;
		var point = { x : x + xpos * gridW, y : y + ypos * gridH};
		arr.push(point);
		++xpos;
		if(xpos >= numHor) {
			xpos = 0;
			++ypos;
		}
	}
	return arr;
};
cc_util_GridUtil.calcGrid = function(x,y,width,height,gridX,gridY,numHor,numVer) {
	if(numVer == null) {
		numVer = 1;
	}
	if(numHor == null) {
		numHor = 1;
	}
	if(gridY == null) {
		gridY = 1;
	}
	if(gridX == null) {
		gridX = 1;
	}
	if(height == null) {
		height = -1;
	}
	if(width == null) {
		width = -1;
	}
	if(y == null) {
		y = -1;
	}
	if(x == null) {
		x = -1;
	}
	var grid = new cc_util_GridUtil();
	grid.array = [];
	grid.x = 0;
	grid.y = 0;
	grid.width = 0;
	grid.height = 0;
	grid.gridX = 0;
	grid.gridY = 0;
	return grid;
};
cc_util_GridUtil.prototype = {
	xpos: function(x) {
		this._x = x;
		return this;
	}
	,ypos: function(y) {
		this._y = y;
		return this;
	}
	,pos: function(x,y) {
		this._x = x;
		this._y = y;
		return this;
	}
	,dimension: function(w,h) {
		this._w = w;
		this._h = h;
		return this;
	}
	,grid: function(hor,ver) {
		this._hor = hor;
		this._ver = ver;
		return this;
	}
	,size: function(w,h) {
		this._cellw = w;
		this._cellh = h;
		return this;
	}
	,centered: function() {
		this._center = true;
		return this;
	}
	,debug: function() {
		this._debug = true;
		return this;
	}
	,fullscreen: function() {
		this._fullscreen = true;
		return this;
	}
	,color: function(value) {
		this._color = value;
		return this;
	}
	,calc: function() {
		haxe_Log.trace("WIP",{ fileName : "GridUtil.hx", lineNumber : 176, className : "cc.util.GridUtil", methodName : "calc"});
		return this;
	}
	,draw: function(isDebug) {
		if(isDebug == null) {
			isDebug = false;
		}
		var isDebug1 = isDebug;
		return this;
	}
	,setPosition: function(x,y) {
		if(this._isDebug) {
			window.console.log("" + this.toString() + " setPostion");
		}
		this.x = x;
		this.y = y;
		this._isPosition = true;
		this.calculate();
	}
	,setIsCenterPoint: function(isCentered) {
		if(isCentered == null) {
			isCentered = true;
		}
		if(this._isDebug) {
			window.console.log("" + this.toString() + " setCenterPoint");
		}
		this.isCentered = isCentered;
		this.calculate();
	}
	,setDebug: function(isDebug) {
		if(isDebug == null) {
			isDebug = true;
		}
		this._isDebug = isDebug;
		if(this._isDebug) {
			window.console.log("" + this.toString() + " setDebug");
		}
	}
	,setIsFullscreen: function(isFullscreen) {
		if(isFullscreen == null) {
			isFullscreen = true;
		}
		if(this._isDebug) {
			window.console.log("" + this.toString() + " setIsFullscreen");
		}
		this.isFullscreen = isFullscreen;
		this.calculate();
	}
	,setDimension: function(width,height) {
		if(this._isDebug) {
			window.console.log("" + this.toString() + " setDimension (width: " + width + ", height: " + height + ")");
		}
		this.width = width;
		this.height = height;
		this._isDimension = true;
		this.calculate();
	}
	,setNumbered: function(numHor,numVer) {
		if(this._isDebug) {
			window.console.log("" + this.toString() + " setNumbers (numHor: " + numHor + ", numVer: " + numVer + ")");
		}
		this.numHor = numHor;
		this.numVer = numVer;
		this._isNumbered = true;
		this.calculate();
	}
	,setCellSize: function(cellWidth,cellHeight) {
		if(cellHeight == null) {
			cellHeight = cellWidth;
		}
		if(this._isDebug) {
			window.console.log("" + this.toString() + " setCellSize (cellWidth: " + cellWidth + ", cellHeight: " + cellHeight + ")");
		}
		this.cellWidth = cellWidth;
		this.cellHeight = cellHeight;
		this._isCellSize = true;
		this.calculate();
	}
	,reset: function() {
		this.array = [];
	}
	,calculate: function() {
		if(this._isDebug) {
			window.console.log("" + this.toString() + " calculate()");
		}
		if(this._isCellSize && !this._isDimension) {
			if(this._isDebug) {
				window.console.info("" + this.toString() + " solution #1: cellSize is set");
			}
			this.numHor = Math.floor(Global.w / this.cellWidth);
			this.numVer = Math.floor(Global.h / this.cellHeight);
			this.width = this.numHor * this.cellWidth;
			this.height = this.numVer * this.cellHeight;
			this.x = (Global.w - this.width) / 2;
			this.y = (Global.h - this.height) / 2;
		}
		if(this._isNumbered && !this._isDimension) {
			if(this._isDebug) {
				window.console.info("" + this.toString() + " solution #2: numbered cells set");
			}
			var _w = this.width != null ? this.width : Global.w;
			var _h = this.height != null ? this.height : Global.h;
			this.cellWidth = _w / this.numHor;
			this.cellHeight = _h / this.numVer;
			this.width = this.numHor * this.cellWidth;
			this.height = this.numVer * this.cellHeight;
			this.x = (Global.w - this.width) / 2;
			this.y = (Global.h - this.height) / 2;
			window.console.info("cellWidth: " + this.cellWidth + ", cellHeight: " + this.cellHeight + ", width: " + this.width + ", height: " + this.height + ", x: " + this.x + ", y: " + this.y);
		}
		if(this._isDimension && !this._isNumbered && !this._isCellSize) {
			if(this._isDebug) {
				window.console.info("" + this.toString() + " solution #3: width/height set (" + this.width + ", " + this.height + ")");
			}
			var _cellWidth = this.cellWidth != null ? this.cellWidth : 50;
			var _cellHeight = this.cellHeight != null ? this.cellHeight : 50;
			this.numHor = Math.floor(this.width / _cellWidth);
			this.numVer = Math.floor(this.height / _cellHeight);
			this.width = this.numHor * _cellWidth;
			this.height = this.numVer * _cellHeight;
			this.cellWidth = this.width / this.numHor;
			this.cellHeight = this.height / this.numVer;
			this.x = (Global.w - this.width) / 2;
			this.y = (Global.h - this.height) / 2;
		}
		if(this._isDimension && !this._isCellSize) {
			if(this._isDebug) {
				window.console.info("" + this.toString() + " solution #3a: width/height set (" + this.width + ", " + this.height + ") AND number row/cols (" + this.numHor + ", " + this.numVer + ")");
			}
			this.cellWidth = Math.floor(this.width / this.numHor);
			this.cellHeight = Math.floor(this.height / this.numVer);
			this.width = this.numHor * this.cellWidth;
			this.height = this.numVer * this.cellHeight;
			if(!this._isPosition) {
				this.x = (Global.w - this.width) / 2;
				this.y = (Global.h - this.height) / 2;
			}
		}
		if(this._isDimension && this._isNumbered && !this._isCellSize) {
			if(this._isDebug) {
				window.console.info("" + this.toString() + " solution #3b: w/h set (" + this.width + ", " + this.height + ") AND number row/cols (" + this.numHor + ", " + this.numVer + ")");
				window.console.info("" + this.toString() + "  (" + Global.w + ", " + Global.h + ")");
			}
			this.cellWidth = Math.floor(this.width / this.numHor);
			this.cellHeight = Math.floor(this.height / this.numVer);
			this.width = this.numHor * this.cellWidth;
			this.height = this.numVer * this.cellHeight;
		}
		if(this._isCellSize && this._isDimension) {
			if(this._isDebug) {
				window.console.info("" + this.toString() + " solution #4: cellSize is set and width/height");
			}
			this.numHor = Math.floor(this.width / this.cellWidth);
			this.numVer = Math.floor(this.height / this.cellHeight);
			this.width = this.numHor * this.cellWidth;
			this.height = this.numVer * this.cellHeight;
			if(!this._isPosition) {
				this.x = (Global.w - this.width) / 2;
				this.y = (Global.h - this.height) / 2;
			}
		}
		if(this.isFullscreen && this._isCellSize) {
			if(this._isDebug) {
				window.console.info("" + this.toString() + " solution #5: fullscreen and cellSize is set");
			}
			this.width = Global.w;
			this.height = Global.h;
			this.numHor = Math.ceil(this.width / this.cellWidth);
			this.numVer = Math.ceil(this.height / this.cellHeight);
			this.width = this.numHor * this.cellWidth;
			this.height = this.numVer * this.cellHeight;
			this.x = (Global.w - this.width) / 2;
			this.y = (Global.h - this.height) / 2;
		}
		var cx = 0.0;
		var cy = 0.0;
		if(this.isCentered) {
			cx = this.cellWidth / 2;
			cy = this.cellHeight / 2;
		}
		this.array = [];
		var total = Math.round(this.numHor * this.numVer);
		var xpos = 0;
		var ypos = 0;
		var _g1 = 0;
		var _g = total;
		while(_g1 < _g) {
			var i = _g1++;
			var point = { x : Math.round(this.x + xpos * this.cellWidth + cx), y : Math.round(this.y + ypos * this.cellHeight + cy)};
			this.array.push(point);
			++xpos;
			if(xpos >= this.numHor) {
				xpos = 0;
				++ypos;
			}
		}
		total = this.array.length;
		if(this._isDebug) {
			window.console.groupCollapsed("" + this.toString() + " Sata");
			window.console.log("x: " + this.x + ", y: " + this.y + ", width: " + this.width + ", height: " + this.height + ", cellWidth: " + this.cellWidth + ", cellHeight: " + this.cellHeight + ", numHor: " + this.numHor + ", numVer: " + this.numVer + ", array: " + this.array.length);
			window.console.table(this.array);
			window.console.groupEnd();
		}
	}
	,toString: function() {
		return "[GridUtil]";
	}
	,__class__: cc_util_GridUtil
};
var cc_util_MathUtil = function() { };
$hxClasses["cc.util.MathUtil"] = cc_util_MathUtil;
cc_util_MathUtil.__name__ = ["cc","util","MathUtil"];
cc_util_MathUtil.radians = function(deg) {
	return deg * Math.PI / 180;
};
cc_util_MathUtil.degrees = function(rad) {
	return rad * 180 / Math.PI;
};
cc_util_MathUtil.degreesToPoint = function(deg,diameter) {
	var rad = Math.PI * deg / 180;
	var r = diameter / 2;
	return { x : r * Math.cos(rad), y : r * Math.sin(rad)};
};
cc_util_MathUtil.distributeAngles = function(me,total) {
	return me / total * 360;
};
cc_util_MathUtil.distance = function(x1,y1,x2,y2) {
	return cc_util_MathUtil.dist(x1,y1,x2,y2);
};
cc_util_MathUtil.dist = function(x1,y1,x2,y2) {
	x2 -= x1;
	y2 -= y1;
	return Math.sqrt(x2 * x2 + y2 * y2);
};
cc_util_MathUtil.pythagoreanTheorem = function(a,b,c) {
	if(a == null && b == null && c == null) {
		haxe_Log.trace("Really? Perhaps you should use some data",{ fileName : "MathUtil.hx", lineNumber : 77, className : "cc.util.MathUtil", methodName : "pythagoreanTheorem"});
		return 0;
	}
	var value = 0.0;
	if(c == null || c == 0) {
		value = Math.sqrt(a * a + b * b);
	}
	if(a == null || a == 0) {
		value = Math.sqrt(c * c - b * b);
	}
	if(b == null || b == 0) {
		value = Math.sqrt(c * c - a * a);
	}
	return value;
};
cc_util_MathUtil.circumferenceCircle = function(radius) {
	return Math.PI * radius * 2;
};
cc_util_MathUtil.areaCircle = function(radius) {
	return Math.PI * Math.sqrt(radius);
};
cc_util_MathUtil.randomInteger = function(min,max) {
	if(max == null) {
		max = min;
		min = 0;
	}
	return Math.floor(Math.random() * (max + 1 - min)) + min;
};
cc_util_MathUtil.randomInt = function(min,max) {
	return cc_util_MathUtil.randomInteger(min,max);
};
cc_util_MathUtil.random = function(min,max) {
	if(min == null) {
		min = 0;
		max = 1;
	} else if(max == null) {
		max = min;
		min = 0;
	}
	return Math.random() * (max - min) + min;
};
cc_util_MathUtil.randomP = function(min,max) {
	if(min == null) {
		min = 0.1;
		max = 1;
	} else if(max == null) {
		max = min;
		min = 0.1;
	}
	return Math.random() * (max - min) + min;
};
cc_util_MathUtil.chance = function(value) {
	return cc_util_MathUtil.random(value) > value - 1;
};
cc_util_MathUtil.posNeg = function() {
	return cc_util_MathUtil.randomInt(0,1) * 2 - 1;
};
cc_util_MathUtil.angle = function(cx,cy,ex,ey) {
	var dy = ey - cy;
	var dx = ex - cx;
	var theta = Math.atan2(dy,dx);
	theta *= 180 / Math.PI;
	if(theta < 0) {
		theta = 360 + theta;
	}
	if(theta == 360) {
		theta = 0;
	}
	return theta;
};
cc_util_MathUtil.map = function(value,min1,max1,min2,max2,clampResult) {
	var returnvalue = (value - min1) / (max1 - min1) * (max2 - min2) + min2;
	if(clampResult) {
		return cc_util_MathUtil.clamp(returnvalue,min2,max2);
	} else {
		return returnvalue;
	}
};
cc_util_MathUtil.orbit = function(xpos,ypos,angle,radius) {
	var _xpos = xpos + Math.cos(cc_util_MathUtil.radians(angle)) * radius;
	var _ypos = ypos + Math.sin(cc_util_MathUtil.radians(angle)) * radius;
	return { x : _xpos, y : _ypos};
};
cc_util_MathUtil.shuffle = function(array) {
	var currentIndex = array.length;
	var temporaryValue;
	var randomIndex;
	while(0 != currentIndex) {
		randomIndex = Math.floor(Math.random() * currentIndex);
		--currentIndex;
		temporaryValue = array[currentIndex];
		array[currentIndex] = array[randomIndex];
		array[randomIndex] = temporaryValue;
	}
	return array;
};
cc_util_MathUtil.clamp = function(value,min,max) {
	return Math.min(Math.max(value,Math.min(min,max)),Math.max(min,max));
};
var cc_util_ShapeUtil = function() { };
$hxClasses["cc.util.ShapeUtil"] = cc_util_ShapeUtil;
cc_util_ShapeUtil.__name__ = ["cc","util","ShapeUtil"];
cc_util_ShapeUtil.cross = function(ctx,x,y,width,height) {
	if(height == null) {
		height = 60;
	}
	if(width == null) {
		width = 20;
	}
	cc_CanvasTools.colour(ctx,cc_util_ColorUtil.PINK.r,cc_util_ColorUtil.PINK.g,cc_util_ColorUtil.PINK.b,1);
	ctx.fillRect(x - width / 2,y - height / 2,width,height);
	ctx.fillRect(x - height / 2,y - width / 2,height,width);
};
cc_util_ShapeUtil.registerPoint = function(ctx,x,y) {
	var _w = 10;
	var _h = 10;
	var _d = 2;
	cc_CanvasTools.colour(ctx,cc_util_ColorUtil.PINK.r,cc_util_ColorUtil.PINK.g,cc_util_ColorUtil.PINK.b,1);
	ctx.fillRect(x - _w / 2,y - _d / 2,_w,_d);
	ctx.fillRect(x - _d / 2,y - _h / 2,_d,_h);
};
cc_util_ShapeUtil.colorRegisterPoint = function(ctx,x,y,rgb) {
	if(rgb == null) {
		rgb = cc_util_ColorUtil.PINK;
	}
	var _w = 10;
	var _h = 10;
	var _d = 2;
	cc_CanvasTools.colourRGB(ctx,rgb,1);
	ctx.fillRect(x - _w / 2,y - _d / 2,_w,_d);
	ctx.fillRect(x - _d / 2,y - _h / 2,_d,_h);
};
cc_util_ShapeUtil.xcross = function(ctx,x,y,size,weight) {
	if(weight == null) {
		weight = 100;
	}
	if(size == null) {
		size = 200;
	}
	cc_CanvasTools.strokeWeight(ctx,weight);
	cc_CanvasTools.line(ctx,x - size / 2,y - size / 2,x - size / 2 + size,y - size / 2 + size);
	cc_CanvasTools.line(ctx,x + size - size / 2,y - size / 2,x - size / 2,y + size - size / 2);
};
cc_util_ShapeUtil.gridRegister = function(ctx,arr) {
	var _g1 = 0;
	var _g = arr.length;
	while(_g1 < _g) {
		var i = _g1++;
		var point = arr[i];
		cc_util_ShapeUtil.registerPoint(ctx,point.x,point.y);
	}
};
cc_util_ShapeUtil.gridRegisters = function(ctx,grid) {
	var _g1 = 0;
	var _g = grid.array.length;
	while(_g1 < _g) {
		var i = _g1++;
		var point = grid.array[i];
		cc_util_ShapeUtil.cross(ctx,point.x,point.y,5,20);
	}
};
cc_util_ShapeUtil.gridField = function(ctx,grid) {
	var _g1 = 0;
	var _g = grid.array.length;
	while(_g1 < _g) {
		var i = _g1++;
		var point = grid.array[i];
		cc_util_ShapeUtil.registerPoint(ctx,point.x,point.y);
	}
	ctx.lineWidth = 1;
	cc_CanvasTools.lineColour(ctx,cc_util_ColorUtil.GRAY.r,cc_util_ColorUtil.GRAY.g,cc_util_ColorUtil.GRAY.b,0.5);
	ctx.strokeRect(grid.x,grid.y,grid.width,grid.height);
};
cc_util_ShapeUtil.gridDots = function(ctx,grid) {
	var _g1 = 0;
	var _g = grid.array.length;
	while(_g1 < _g) {
		var i = _g1++;
		var point = grid.array[i];
		cc_CanvasTools.colour(ctx,cc_util_ColorUtil.PINK.r,cc_util_ColorUtil.PINK.g,cc_util_ColorUtil.PINK.b,1);
		cc_CanvasTools.circle(ctx,point.x,point.y,1);
	}
	ctx.lineWidth = 1;
	cc_CanvasTools.lineColour(ctx,cc_util_ColorUtil.GRAY.r,cc_util_ColorUtil.GRAY.g,cc_util_ColorUtil.GRAY.b,0.5);
	ctx.strokeRect(grid.x,grid.y,grid.width,grid.height);
};
var cc_util_TextUtil = function() {
};
$hxClasses["cc.util.TextUtil"] = cc_util_TextUtil;
cc_util_TextUtil.__name__ = ["cc","util","TextUtil"];
cc_util_TextUtil.getLines = function(ctx,text,maxWidth) {
	var words = text.split(" ");
	var lines = [];
	var currentLine = words[0];
	var _g1 = 1;
	var _g = words.length;
	while(_g1 < _g) {
		var i = _g1++;
		var word = words[i];
		var width = ctx.measureText(currentLine + " " + word).width;
		if(width < maxWidth) {
			currentLine += " " + word;
		} else {
			lines.push(currentLine);
			currentLine = word;
		}
	}
	lines.push(currentLine);
	return lines;
};
cc_util_TextUtil.drawTextAlongArc = function(ctx,str,centerX,centerY,radius,angle) {
	var charArr = str.split("");
	ctx.save();
	ctx.translate(centerX,centerY);
	ctx.rotate(-1 * angle / 2);
	ctx.rotate(-1 * (angle / charArr.length) / 2);
	var _g1 = 0;
	var _g = charArr.length;
	while(_g1 < _g) {
		var i = _g1++;
		var _char = charArr[i];
		ctx.rotate(angle / charArr.length);
		ctx.save();
		ctx.translate(0,-1 * radius);
		ctx.fillText(_char,0,0);
		ctx.restore();
	}
	ctx.restore();
};
cc_util_TextUtil.drawTextAlongArc4 = function(ctx,str,centerX,centerY,radius,startDegree) {
	if(startDegree == null) {
		startDegree = -90;
	}
	var monoW = ctx.measureText(" ").width;
	var charArr = str.split("");
	ctx.save();
	var angle = 0.0;
	var _g1 = 0;
	var _g = charArr.length;
	while(_g1 < _g) {
		var i = _g1++;
		radius -= 0.15 + i * 0.0005;
		var a = monoW;
		var b = radius;
		var c = radius;
		var cosa = (Math.pow(b,2) + Math.pow(c,2) - Math.pow(a,2)) / (2 * b * c);
		var pAngle = cc_util_MathUtil.degrees(Math.acos(cosa));
		var _char = charArr[i];
		angle = startDegree + i * pAngle;
		var xpos = centerX + Math.cos(cc_util_MathUtil.radians(angle)) * radius;
		var ypos = centerY + Math.sin(cc_util_MathUtil.radians(angle)) * radius;
		ctx.save();
		ctx.translate(xpos,ypos);
		ctx.rotate(cc_util_MathUtil.radians(angle + 90));
		ctx.fillText(_char,0,0);
		ctx.restore();
	}
	ctx.restore();
};
cc_util_TextUtil.drawTextAlongArc3 = function(ctx,str,centerX,centerY,radius) {
	var charArr = str.split("");
	ctx.save();
	var angle = 0;
	var _g1 = 0;
	var _g = charArr.length;
	while(_g1 < _g) {
		var i = _g1++;
		var _char = charArr[i];
		angle = i;
		var xpos = centerX + Math.cos(cc_util_MathUtil.radians(angle)) * radius;
		var ypos = centerY + Math.sin(cc_util_MathUtil.radians(angle)) * radius;
		haxe_Log.trace(_char,{ fileName : "TextUtil.hx", lineNumber : 133, className : "cc.util.TextUtil", methodName : "drawTextAlongArc3", customParams : [i,xpos,ypos]});
		ctx.translate(xpos,ypos);
		ctx.rotate(angle / charArr.length);
		ctx.fillText(_char,0,0);
		ctx.restore();
	}
	ctx.restore();
};
cc_util_TextUtil.drawTextAlongArc2 = function(ctx,str,centerX,centerY,radius) {
	var charArr = str.split("");
	var width = ctx.measureText(" ").width;
	ctx.save();
	ctx.translate(centerX,centerY);
	var _angle = 1.0;
	var _g1 = 0;
	var _g = charArr.length;
	while(_g1 < _g) {
		var i = _g1++;
		var _char = charArr[i];
		var _rotation = cc_util_MathUtil.radians(_angle);
		ctx.rotate(_angle * Math.PI / 360);
		haxe_Log.trace("" + i + " // _char = " + _char + " : _angle: " + _angle + " - _rotation: " + _rotation,{ fileName : "TextUtil.hx", lineNumber : 173, className : "cc.util.TextUtil", methodName : "drawTextAlongArc2"});
		ctx.save();
		ctx.translate(0,-1 * radius);
		ctx.fillText(_char,0,0);
		ctx.restore();
		_angle += 0.5;
	}
	ctx.restore();
};
cc_util_TextUtil.prototype = {
	__class__: cc_util_TextUtil
};
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = ["haxe","IMap"];
haxe_IMap.prototype = {
	__class__: haxe_IMap
};
var haxe_Http = function(url) {
	this.url = url;
	this.headers = new List();
	this.params = new List();
	this.async = true;
	this.withCredentials = false;
};
$hxClasses["haxe.Http"] = haxe_Http;
haxe_Http.__name__ = ["haxe","Http"];
haxe_Http.prototype = {
	request: function(post) {
		var me = this;
		me.responseData = null;
		var r = this.req = js_Browser.createXMLHttpRequest();
		var onreadystatechange = function(_) {
			if(r.readyState != 4) {
				return;
			}
			var s;
			try {
				s = r.status;
			} catch( e ) {
				s = null;
			}
			if(s != null && "undefined" !== typeof window) {
				var protocol = window.location.protocol.toLowerCase();
				var rlocalProtocol = new EReg("^(?:about|app|app-storage|.+-extension|file|res|widget):$","");
				var isLocal = rlocalProtocol.match(protocol);
				if(isLocal) {
					if(r.responseText != null) {
						s = 200;
					} else {
						s = 404;
					}
				}
			}
			if(s == undefined) {
				s = null;
			}
			if(s != null) {
				me.onStatus(s);
			}
			if(s != null && s >= 200 && s < 400) {
				me.req = null;
				me.onData(me.responseData = r.responseText);
			} else if(s == null) {
				me.req = null;
				me.onError("Failed to connect or resolve host");
			} else {
				switch(s) {
				case 12007:
					me.req = null;
					me.onError("Unknown host");
					break;
				case 12029:
					me.req = null;
					me.onError("Failed to connect to host");
					break;
				default:
					me.req = null;
					me.responseData = r.responseText;
					me.onError("Http Error #" + r.status);
				}
			}
		};
		if(this.async) {
			r.onreadystatechange = onreadystatechange;
		}
		var uri = this.postData;
		if(uri != null) {
			post = true;
		} else {
			var _g_head = this.params.h;
			while(_g_head != null) {
				var val = _g_head.item;
				_g_head = _g_head.next;
				var p = val;
				if(uri == null) {
					uri = "";
				} else {
					uri += "&";
				}
				var s1 = p.param;
				var uri1 = encodeURIComponent(s1) + "=";
				var s2 = p.value;
				uri += uri1 + encodeURIComponent(s2);
			}
		}
		try {
			if(post) {
				r.open("POST",this.url,this.async);
			} else if(uri != null) {
				var question = this.url.split("?").length <= 1;
				r.open("GET",this.url + (question ? "?" : "&") + uri,this.async);
				uri = null;
			} else {
				r.open("GET",this.url,this.async);
			}
		} catch( e1 ) {
			if (e1 instanceof js__$Boot_HaxeError) e1 = e1.val;
			me.req = null;
			this.onError(e1.toString());
			return;
		}
		r.withCredentials = this.withCredentials;
		if(!Lambda.exists(this.headers,function(h) {
			return h.header == "Content-Type";
		}) && post && this.postData == null) {
			r.setRequestHeader("Content-Type","application/x-www-form-urlencoded");
		}
		var _g_head1 = this.headers.h;
		while(_g_head1 != null) {
			var val1 = _g_head1.item;
			_g_head1 = _g_head1.next;
			var h1 = val1;
			r.setRequestHeader(h1.header,h1.value);
		}
		r.send(uri);
		if(!this.async) {
			onreadystatechange(null);
		}
	}
	,onData: function(data) {
	}
	,onError: function(msg) {
	}
	,onStatus: function(status) {
	}
	,__class__: haxe_Http
};
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = ["haxe","Log"];
haxe_Log.trace = function(v,infos) {
	js_Boot.__trace(v,infos);
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
$hxClasses["haxe.Timer"] = haxe_Timer;
haxe_Timer.__name__ = ["haxe","Timer"];
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = ["haxe","ds","StringMap"];
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	set: function(key,value) {
		if(__map_reserved[key] != null) {
			this.setReserved(key,value);
		} else {
			this.h[key] = value;
		}
	}
	,setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,__class__: haxe_ds_StringMap
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = ["js","Boot"];
js_Boot.__unhtml = function(s) {
	return s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
};
js_Boot.__trace = function(v,i) {
	var msg = i != null ? i.fileName + ":" + i.lineNumber + ": " : "";
	msg += js_Boot.__string_rec(v,"");
	if(i != null && i.customParams != null) {
		var _g = 0;
		var _g1 = i.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			msg += "," + js_Boot.__string_rec(v1,"");
		}
	}
	var d;
	var tmp;
	if(typeof(document) != "undefined") {
		d = document.getElementById("haxe:trace");
		tmp = d != null;
	} else {
		tmp = false;
	}
	if(tmp) {
		d.innerHTML += js_Boot.__unhtml(msg) + "<br/>";
	} else if(typeof console != "undefined" && console.log != null) {
		console.log(msg);
	}
};
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_Browser = function() { };
$hxClasses["js.Browser"] = js_Browser;
js_Browser.__name__ = ["js","Browser"];
js_Browser.createXMLHttpRequest = function() {
	if(typeof XMLHttpRequest != "undefined") {
		return new XMLHttpRequest();
	}
	if(typeof ActiveXObject != "undefined") {
		return new ActiveXObject("Microsoft.XMLHTTP");
	}
	throw new js__$Boot_HaxeError("Unable to create XMLHttpRequest object.");
};
var js_html_compat_ArrayBuffer = function(a) {
	if((a instanceof Array) && a.__enum__ == null) {
		this.a = a;
		this.byteLength = a.length;
	} else {
		var len = a;
		this.a = [];
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) {
			var i = _g1++;
			this.a[i] = 0;
		}
		this.byteLength = len;
	}
};
$hxClasses["js.html.compat.ArrayBuffer"] = js_html_compat_ArrayBuffer;
js_html_compat_ArrayBuffer.__name__ = ["js","html","compat","ArrayBuffer"];
js_html_compat_ArrayBuffer.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null ? null : end - begin);
	var result = new ArrayBuffer(u.byteLength);
	var resultArray = new Uint8Array(result);
	resultArray.set(u);
	return result;
};
js_html_compat_ArrayBuffer.prototype = {
	slice: function(begin,end) {
		return new js_html_compat_ArrayBuffer(this.a.slice(begin,end));
	}
	,__class__: js_html_compat_ArrayBuffer
};
var js_html_compat_Uint8Array = function() { };
$hxClasses["js.html.compat.Uint8Array"] = js_html_compat_Uint8Array;
js_html_compat_Uint8Array.__name__ = ["js","html","compat","Uint8Array"];
js_html_compat_Uint8Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset;
		}
		if(offset == 0) {
			arr = buffer.a;
		} else {
			arr = buffer.a.slice(offset,offset + length);
		}
		arr.byteLength = arr.length;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Uint8Array._subarray;
	arr.set = js_html_compat_Uint8Array._set;
	return arr;
};
js_html_compat_Uint8Array._set = function(arg,offset) {
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Uint8Array._subarray = function(start,end) {
	var a = js_html_compat_Uint8Array._new(this.slice(start,end));
	a.byteOffset = start;
	return a;
};
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
$hxClasses["Math"] = Math;
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = ["String"];
$hxClasses["Array"] = Array;
Array.__name__ = ["Array"];
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = ["Date"];
var Int = $hxClasses["Int"] = { __name__ : ["Int"]};
var Dynamic = $hxClasses["Dynamic"] = { __name__ : ["Dynamic"]};
var Float = $hxClasses["Float"] = Number;
Float.__name__ = ["Float"];
var Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = $hxClasses["Class"] = { __name__ : ["Class"]};
var Enum = { };
var __map_reserved = {};
var ArrayBuffer = $global.ArrayBuffer || js_html_compat_ArrayBuffer;
if(ArrayBuffer.prototype.slice == null) {
	ArrayBuffer.prototype.slice = js_html_compat_ArrayBuffer.sliceImpl;
}
var Uint8Array = $global.Uint8Array || js_html_compat_Uint8Array._new;
Sketch.option = new SketchOption();
Global.MOUSE_DOWN = "mousedown";
Global.MOUSE_UP = "mouseup";
Global.MOUSE_MOVE = "mousemove";
Global.KEY_DOWN = "keydown";
Global.KEY_UP = "keyup";
Global.RESIZE = "resize";
Global.mousePressed = 0;
Global.mouseReleased = 0;
Global.isFullscreen = false;
Global.TWO_PI = Math.PI * 2;
cc_lets_Go._tweens = [];
cc_model_constants_App.NAME = "[cc-sketch]";
cc_model_constants_App.PORT = "5000";
cc_model_constants_App.BUILD = "2019-07-09 00:10:28";
cc_tool_export_ExportNames.SEND = "send";
cc_tool_export_ExportNames.MESSAGE = "message";
cc_tool_export_ExportNames.IMAGE = "image";
cc_tool_export_ExportNames.SEQUENCE = "sequence";
cc_tool_export_ExportNames.SEQUENCE_NEXT = "sequence_next";
cc_tool_export_ExportNames.COMBINE = "combine";
cc_tool_export_ExportNames.MARKDOWN = "md";
cc_tool_export_ExportNames.CHECKIN = "checkin";
cc_tool_export_ExportNames.SERVER_CHECKIN = "server-checkin";
cc_tool_export_ExportNames.RENDER_CLEAR = "render-clear";
cc_tool_export_ExportNames.RENDER_CLEAR_DONE = "render-clear-done";
cc_tool_export_ExportNames.RENDER_FRAME = "render-frame";
cc_tool_export_ExportNames.RENDER_DONE = "render-done";
cc_tool_export_ExportNames.TEST = "test";
cc_tool_export_ExportZip.isZipLoaded = false;
cc_tool_export_ExportZip.isFileLoaded = false;
cc_util_ColorUtil.NAVY = { r : Math.round(0), g : Math.round(31), b : Math.round(63)};
cc_util_ColorUtil.BLUE = { r : Math.round(0), g : Math.round(116), b : Math.round(217)};
cc_util_ColorUtil.AQUA = { r : Math.round(127), g : Math.round(219), b : Math.round(255)};
cc_util_ColorUtil.TEAL = { r : Math.round(57), g : Math.round(204), b : Math.round(204)};
cc_util_ColorUtil.OLIVE = { r : Math.round(61), g : Math.round(153), b : Math.round(112)};
cc_util_ColorUtil.GREEN = { r : Math.round(46), g : Math.round(204), b : Math.round(64)};
cc_util_ColorUtil.LIME = { r : Math.round(1), g : Math.round(255), b : Math.round(112)};
cc_util_ColorUtil.YELLOW = { r : Math.round(255), g : Math.round(220), b : Math.round(0)};
cc_util_ColorUtil.ORANGE = { r : Math.round(255), g : Math.round(133), b : Math.round(27)};
cc_util_ColorUtil.RED = { r : Math.round(255), g : Math.round(65), b : Math.round(54)};
cc_util_ColorUtil.MAROON = { r : Math.round(133), g : Math.round(20), b : Math.round(75)};
cc_util_ColorUtil.FUCHSIA = { r : Math.round(240), g : Math.round(18), b : Math.round(190)};
cc_util_ColorUtil.PURPLE = { r : Math.round(177), g : Math.round(13), b : Math.round(201)};
cc_util_ColorUtil.BLACK = { r : Math.round(17), g : Math.round(17), b : Math.round(17)};
cc_util_ColorUtil.GRAY = { r : Math.round(170), g : Math.round(170), b : Math.round(170)};
cc_util_ColorUtil.SILVER = { r : Math.round(221), g : Math.round(221), b : Math.round(221)};
cc_util_ColorUtil.WHITE = { r : Math.round(255), g : Math.round(255), b : Math.round(255)};
cc_util_ColorUtil.PINK = { r : Math.round(255), g : Math.round(20), b : Math.round(147)};
cc_util_ColorUtil.PINK_DEEP = { r : Math.round(255), g : Math.round(20), b : Math.round(147)};
cc_util_ColorUtil.PINK_HOT = { r : Math.round(255), g : Math.round(105), b : Math.round(180)};
cc_util_ColorUtil.niceColor100 = [["#69d2e7","#a7dbd8","#e0e4cc","#f38630","#fa6900"],["#fe4365","#fc9d9a","#f9cdad","#c8c8a9","#83af9b"],["#ecd078","#d95b43","#c02942","#542437","#53777a"],["#556270","#4ecdc4","#c7f464","#ff6b6b","#c44d58"],["#774f38","#e08e79","#f1d4af","#ece5ce","#c5e0dc"],["#e8ddcb","#cdb380","#036564","#033649","#031634"],["#490a3d","#bd1550","#e97f02","#f8ca00","#8a9b0f"],["#594f4f","#547980","#45ada8","#9de0ad","#e5fcc2"],["#00a0b0","#6a4a3c","#cc333f","#eb6841","#edc951"],["#e94e77","#d68189","#c6a49a","#c6e5d9","#f4ead5"],["#3fb8af","#7fc7af","#dad8a7","#ff9e9d","#ff3d7f"],["#d9ceb2","#948c75","#d5ded9","#7a6a53","#99b2b7"],["#ffffff","#cbe86b","#f2e9e1","#1c140d","#cbe86b"],["#efffcd","#dce9be","#555152","#2e2633","#99173c"],["#343838","#005f6b","#008c9e","#00b4cc","#00dffc"],["#413e4a","#73626e","#b38184","#f0b49e","#f7e4be"],["#ff4e50","#fc913a","#f9d423","#ede574","#e1f5c4"],["#99b898","#fecea8","#ff847c","#e84a5f","#2a363b"],["#655643","#80bca3","#f6f7bd","#e6ac27","#bf4d28"],["#00a8c6","#40c0cb","#f9f2e7","#aee239","#8fbe00"],["#351330","#424254","#64908a","#e8caa4","#cc2a41"],["#554236","#f77825","#d3ce3d","#f1efa5","#60b99a"],["#ff9900","#424242","#e9e9e9","#bcbcbc","#3299bb"],["#5d4157","#838689","#a8caba","#cad7b2","#ebe3aa"],["#8c2318","#5e8c6a","#88a65e","#bfb35a","#f2c45a"],["#fad089","#ff9c5b","#f5634a","#ed303c","#3b8183"],["#ff4242","#f4fad2","#d4ee5e","#e1edb9","#f0f2eb"],["#d1e751","#ffffff","#000000","#4dbce9","#26ade4"],["#f8b195","#f67280","#c06c84","#6c5b7b","#355c7d"],["#1b676b","#519548","#88c425","#bef202","#eafde6"],["#bcbdac","#cfbe27","#f27435","#f02475","#3b2d38"],["#5e412f","#fcebb6","#78c0a8","#f07818","#f0a830"],["#452632","#91204d","#e4844a","#e8bf56","#e2f7ce"],["#eee6ab","#c5bc8e","#696758","#45484b","#36393b"],["#f0d8a8","#3d1c00","#86b8b1","#f2d694","#fa2a00"],["#f04155","#ff823a","#f2f26f","#fff7bd","#95cfb7"],["#2a044a","#0b2e59","#0d6759","#7ab317","#a0c55f"],["#bbbb88","#ccc68d","#eedd99","#eec290","#eeaa88"],["#b9d7d9","#668284","#2a2829","#493736","#7b3b3b"],["#b3cc57","#ecf081","#ffbe40","#ef746f","#ab3e5b"],["#a3a948","#edb92e","#f85931","#ce1836","#009989"],["#67917a","#170409","#b8af03","#ccbf82","#e33258"],["#e8d5b7","#0e2430","#fc3a51","#f5b349","#e8d5b9"],["#aab3ab","#c4cbb7","#ebefc9","#eee0b7","#e8caaf"],["#300030","#480048","#601848","#c04848","#f07241"],["#ab526b","#bca297","#c5ceae","#f0e2a4","#f4ebc3"],["#607848","#789048","#c0d860","#f0f0d8","#604848"],["#a8e6ce","#dcedc2","#ffd3b5","#ffaaa6","#ff8c94"],["#3e4147","#fffedf","#dfba69","#5a2e2e","#2a2c31"],["#b6d8c0","#c8d9bf","#dadabd","#ecdbbc","#fedcba"],["#fc354c","#29221f","#13747d","#0abfbc","#fcf7c5"],["#1c2130","#028f76","#b3e099","#ffeaad","#d14334"],["#edebe6","#d6e1c7","#94c7b6","#403b33","#d3643b"],["#cc0c39","#e6781e","#c8cf02","#f8fcc1","#1693a7"],["#dad6ca","#1bb0ce","#4f8699","#6a5e72","#563444"],["#a7c5bd","#e5ddcb","#eb7b59","#cf4647","#524656"],["#fdf1cc","#c6d6b8","#987f69","#e3ad40","#fcd036"],["#5c323e","#a82743","#e15e32","#c0d23e","#e5f04c"],["#230f2b","#f21d41","#ebebbc","#bce3c5","#82b3ae"],["#b9d3b0","#81bda4","#b28774","#f88f79","#f6aa93"],["#3a111c","#574951","#83988e","#bcdea5","#e6f9bc"],["#5e3929","#cd8c52","#b7d1a3","#dee8be","#fcf7d3"],["#1c0113","#6b0103","#a30006","#c21a01","#f03c02"],["#382f32","#ffeaf2","#fcd9e5","#fbc5d8","#f1396d"],["#e3dfba","#c8d6bf","#93ccc6","#6cbdb5","#1a1f1e"],["#000000","#9f111b","#b11623","#292c37","#cccccc"],["#c1b398","#605951","#fbeec2","#61a6ab","#accec0"],["#8dccad","#988864","#fea6a2","#f9d6ac","#ffe9af"],["#f6f6f6","#e8e8e8","#333333","#990100","#b90504"],["#1b325f","#9cc4e4","#e9f2f9","#3a89c9","#f26c4f"],["#5e9fa3","#dcd1b4","#fab87f","#f87e7b","#b05574"],["#951f2b","#f5f4d7","#e0dfb1","#a5a36c","#535233"],["#413d3d","#040004","#c8ff00","#fa023c","#4b000f"],["#eff3cd","#b2d5ba","#61ada0","#248f8d","#605063"],["#2d2d29","#215a6d","#3ca2a2","#92c7a3","#dfece6"],["#cfffdd","#b4dec1","#5c5863","#a85163","#ff1f4c"],["#4e395d","#827085","#8ebe94","#ccfc8e","#dc5b3e"],["#9dc9ac","#fffec7","#f56218","#ff9d2e","#919167"],["#a1dbb2","#fee5ad","#faca66","#f7a541","#f45d4c"],["#ffefd3","#fffee4","#d0ecea","#9fd6d2","#8b7a5e"],["#a8a7a7","#cc527a","#e8175d","#474747","#363636"],["#ffedbf","#f7803c","#f54828","#2e0d23","#f8e4c1"],["#f8edd1","#d88a8a","#474843","#9d9d93","#c5cfc6"],["#f38a8a","#55443d","#a0cab5","#cde9ca","#f1edd0"],["#4e4d4a","#353432","#94ba65","#2790b0","#2b4e72"],["#0ca5b0","#4e3f30","#fefeeb","#f8f4e4","#a5b3aa"],["#a70267","#f10c49","#fb6b41","#f6d86b","#339194"],["#9d7e79","#ccac95","#9a947c","#748b83","#5b756c"],["#edf6ee","#d1c089","#b3204d","#412e28","#151101"],["#046d8b","#309292","#2fb8ac","#93a42a","#ecbe13"],["#4d3b3b","#de6262","#ffb88c","#ffd0b3","#f5e0d3"],["#fffbb7","#a6f6af","#66b6ab","#5b7c8d","#4f2958"],["#ff003c","#ff8a00","#fabe28","#88c100","#00c176"],["#fcfef5","#e9ffe1","#cdcfb7","#d6e6c3","#fafbe3"],["#9cddc8","#bfd8ad","#ddd9ab","#f7af63","#633d2e"],["#30261c","#403831","#36544f","#1f5f61","#0b8185"],["#d1313d","#e5625c","#f9bf76","#8eb2c5","#615375"],["#ffe181","#eee9e5","#fad3b2","#ffba7f","#ff9c97"],["#aaff00","#ffaa00","#ff00aa","#aa00ff","#00aaff"],["#c2412d","#d1aa34","#a7a844","#a46583","#5a1e4a"]];
cc_util_ColorUtil.niceColor100SortedString = [["#E0E4CC","#A7DBD8","#69D2E7","#F38630","#FA6900"],["#F9CDAD","#C8C8A9","#FC9D9A","#83AF9B","#FE4365"],["#ECD078","#D95B43","#53777A","#C02942","#542437"],["#C7F464","#4ECDC4","#FF6B6B","#C44D58","#556270"],["#ECE5CE","#F1D4AF","#C5E0DC","#E08E79","#774F38"],["#E8DDCB","#CDB380","#036564","#033649","#031634"],["#F8CA00","#E97F02","#8A9B0F","#BD1550","#490A3D"],["#E5FCC2","#9DE0AD","#45ADA8","#547980","#594F4F"],["#EDC951","#EB6841","#00A0B0","#CC333F","#6A4A3C"],["#F4EAD5","#C6E5D9","#C6A49A","#D68189","#E94E77"],["#DAD8A7","#FF9E9D","#7FC7AF","#3FB8AF","#FF3D7F"],["#D5DED9","#D9CEB2","#99B2B7","#948C75","#7A6A53"],["#FFFFFF","#F2E9E1","#CBE86B","#CBE86B","#1C140D"],["#EFFFCD","#DCE9BE","#555152","#99173C","#2E2633"],["#00DFFC","#00B4CC","#008C9E","#005F6B","#343838"],["#F7E4BE","#F0B49E","#B38184","#73626E","#413E4A"],["#E1F5C4","#EDE574","#F9D423","#FC913A","#FF4E50"],["#FECEA8","#99B898","#FF847C","#E84A5F","#2A363B"],["#F6F7BD","#E6AC27","#80BCA3","#BF4D28","#655643"],["#F9F2E7","#AEE239","#40C0CB","#8FBE00","#00A8C6"],["#E8CAA4","#64908A","#CC2A41","#424254","#351330"],["#F1EFA5","#D3CE3D","#60B99A","#F77825","#554236"],["#E9E9E9","#BCBCBC","#FF9900","#3299BB","#424242"],["#EBE3AA","#CAD7B2","#A8CABA","#838689","#5D4157"],["#F2C45A","#BFB35A","#88A65E","#5E8C6A","#8C2318"],["#FAD089","#FF9C5B","#F5634A","#3B8183","#ED303C"],["#F4FAD2","#F0F2EB","#E1EDB9","#D4EE5E","#FF4242"],["#FFFFFF","#D1E751","#4DBCE9","#26ADE4","#000000"],["#F8B195","#F67280","#C06C84","#6C5B7B","#355C7D"],["#EAFDE6","#BEF202","#88C425","#519548","#1B676B"],["#BCBDAC","#CFBE27","#F27435","#F02475","#3B2D38"],["#FCEBB6","#F0A830","#78C0A8","#F07818","#5E412F"],["#E2F7CE","#E8BF56","#E4844A","#91204D","#452632"],["#EEE6AB","#C5BC8E","#696758","#45484B","#36393B"],["#F0D8A8","#F2D694","#86B8B1","#FA2A00","#3D1C00"],["#FFF7BD","#F2F26F","#95CFB7","#FF823A","#F04155"],["#A0C55F","#7AB317","#0D6759","#0B2E59","#2A044A"],["#EEDD99","#EEC290","#CCC68D","#EEAA88","#BBBB88"],["#B9D7D9","#668284","#7B3B3B","#493736","#2A2829"],["#ECF081","#FFBE40","#B3CC57","#EF746F","#AB3E5B"],["#EDB92E","#A3A948","#F85931","#009989","#CE1836"],["#CCBF82","#B8AF03","#67917A","#E33258","#170409"],["#E8D5B9","#E8D5B7","#F5B349","#FC3A51","#0E2430"],["#EBEFC9","#EEE0B7","#E8CAAF","#C4CBB7","#AAB3AB"],["#F07241","#C04848","#601848","#480048","#300030"],["#F4EBC3","#F0E2A4","#C5CEAE","#BCA297","#AB526B"],["#F0F0D8","#C0D860","#789048","#607848","#604848"],["#DCEDC2","#FFD3B5","#A8E6CE","#FFAAA6","#FF8C94"],["#FFFEDF","#DFBA69","#3E4147","#5A2E2E","#2A2C31"],["#FEDCBA","#ECDBBC","#DADABD","#C8D9BF","#B6D8C0"],["#FCF7C5","#0ABFBC","#FC354C","#13747D","#29221F"],["#FFEAAD","#B3E099","#D14334","#028F76","#1C2130"],["#EDEBE6","#D6E1C7","#94C7B6","#D3643B","#403B33"],["#F8FCC1","#C8CF02","#E6781E","#1693A7","#CC0C39"],["#DAD6CA","#1BB0CE","#4F8699","#6A5E72","#563444"],["#E5DDCB","#A7C5BD","#EB7B59","#CF4647","#524656"],["#FDF1CC","#C6D6B8","#FCD036","#E3AD40","#987F69"],["#E5F04C","#C0D23E","#E15E32","#A82743","#5C323E"],["#EBEBBC","#BCE3C5","#82B3AE","#F21D41","#230F2B"],["#B9D3B0","#F6AA93","#F88F79","#81BDA4","#B28774"],["#E6F9BC","#BCDEA5","#83988E","#574951","#3A111C"],["#FCF7D3","#DEE8BE","#B7D1A3","#CD8C52","#5E3929"],["#F03C02","#C21A01","#A30006","#6B0103","#1C0113"],["#FFEAF2","#FCD9E5","#FBC5D8","#F1396D","#382F32"],["#E3DFBA","#C8D6BF","#93CCC6","#6CBDB5","#1A1F1E"],["#CCCCCC","#B11623","#9F111B","#292C37","#000000"],["#FBEEC2","#ACCEC0","#C1B398","#61A6AB","#605951"],["#FFE9AF","#F9D6AC","#FEA6A2","#8DCCAD","#988864"],["#F6F6F6","#E8E8E8","#B90504","#333333","#990100"],["#E9F2F9","#9CC4E4","#F26C4F","#3A89C9","#1B325F"],["#DCD1B4","#FAB87F","#F87E7B","#5E9FA3","#B05574"],["#F5F4D7","#E0DFB1","#A5A36C","#535233","#951F2B"],["#C8FF00","#FA023C","#413D3D","#4B000F","#040004"],["#EFF3CD","#B2D5BA","#61ADA0","#248F8D","#605063"],["#DFECE6","#92C7A3","#3CA2A2","#215A6D","#2D2D29"],["#CFFFDD","#B4DEC1","#A85163","#FF1F4C","#5C5863"],["#CCFC8E","#8EBE94","#DC5B3E","#827085","#4E395D"],["#FFFEC7","#9DC9AC","#FF9D2E","#919167","#F56218"],["#FEE5AD","#FACA66","#A1DBB2","#F7A541","#F45D4C"],["#FFFEE4","#FFEFD3","#D0ECEA","#9FD6D2","#8B7A5E"],["#A8A7A7","#CC527A","#E8175D","#474747","#363636"],["#FFEDBF","#F8E4C1","#F7803C","#F54828","#2E0D23"],["#F8EDD1","#C5CFC6","#D88A8A","#9D9D93","#474843"],["#F1EDD0","#CDE9CA","#A0CAB5","#F38A8A","#55443D"],["#94BA65","#2790B0","#4E4D4A","#2B4E72","#353432"],["#FEFEEB","#F8F4E4","#A5B3AA","#0CA5B0","#4E3F30"],["#F6D86B","#FB6B41","#339194","#F10C49","#A70267"],["#CCAC95","#9A947C","#9D7E79","#748B83","#5B756C"],["#EDF6EE","#D1C089","#B3204D","#412E28","#151101"],["#ECBE13","#93A42A","#2FB8AC","#309292","#046D8B"],["#F5E0D3","#FFD0B3","#FFB88C","#DE6262","#4D3B3B"],["#FFFBB7","#A6F6AF","#66B6AB","#5B7C8D","#4F2958"],["#FABE28","#FF8A00","#88C100","#00C176","#FF003C"],["#FCFEF5","#FAFBE3","#E9FFE1","#D6E6C3","#CDCFB7"],["#DDD9AB","#BFD8AD","#9CDDC8","#F7AF63","#633D2E"],["#0B8185","#1F5F61","#36544F","#403831","#30261C"],["#F9BF76","#8EB2C5","#E5625C","#D1313D","#615375"],["#EEE9E5","#FFE181","#FAD3B2","#FFBA7F","#FF9C97"],["#AAFF00","#FFAA00","#00AAFF","#FF00AA","#AA00FF"],["#D1AA34","#A7A844","#A46583","#C2412D","#5A1E4A"],["#F8F3BF","#DCE4F7","#BFCFF7","#75616B","#D34017"]];
cc_util_ColorUtil.niceColor100SortedInt = [[14738636,11000792,6935271,15959600,16410880],[16371117,13158569,16555418,8630171,16663397],[15519864,14244675,5470074,12593474,5514295],[13104228,5164484,16739179,12864856,5595760],[15525326,15848623,12968156,14716537,7819064],[15261131,13480832,222564,210505,202292],[16304640,15302402,9083663,12391760,4786749],[15072450,10346669,4566440,5536128,5853007],[15583569,15427649,41136,13382463,6965820],[16050901,13034969,13018266,14057865,15289975],[14342311,16752285,8374191,4176047,16727423],[14016217,14274226,10072759,9735285,8022611],[16777215,15919585,13363307,13363307,1840141],[15728589,14477758,5591378,10032956,3024435],[57340,46284,35998,24427,3422264],[16245950,15774878,11764100,7561838,4275786],[14808516,15590772,16372771,16552250,16731728],[16699048,10074264,16745596,15223391,2766395],[16185277,15117351,8436899,12537128,6641219],[16380647,11461177,4243659,9420288,43206],[15256228,6590602,13380161,4342356,3478320],[15855525,13880893,6338970,16218149,5587510],[15329769,12369084,16750848,3316155,4342338],[15459242,13293490,11061946,8619657,6111575],[15909978,12563290,8955486,6196330,9184024],[16437385,16751707,16081738,3899779,15544380],[16054994,15790827,14806457,13954654,16728642],[16777215,13756241,5094633,2534884,0],[16298389,16151168,12610692,7101307,3497085],[15400422,12513794,8963109,5346632,1795947],[12369324,13614631,15889461,15737973,3878200],[16575414,15771696,7913640,15759384,6177071],[14874574,15253334,14976074,9510989,4531762],[15656619,12958862,6907736,4540491,3553595],[15784104,15914644,8829105,16394752,4004864],[16775101,15921775,9818039,16745018,15745365],[10536287,8041239,878425,732761,2753610],[15654297,15647376,13420173,15641224,12303240],[12179417,6718084,8076091,4798262,2762793],[15528065,16760384,11783255,15692911,11222619],[15579438,10725704,16275761,39305,13506614],[13418370,12103427,6787450,14889560,1508361],[15259065,15259063,16102217,16530001,926768],[15462345,15655095,15256239,12897207,11187115],[15757889,12601416,6297672,4718664,3145776],[16051139,15786660,12963502,12362391,11227755],[15790296,12638304,7901256,6322248,6309960],[14478786,16765877,11069134,16755366,16747668],[16776927,14662249,4079943,5910062,2763825],[16702650,15522748,14342845,13162943,11983040],[16578501,704444,16528716,1275005,2695711],[16771757,11788441,13714228,167798,1843504],[15592422,14082503,9750454,13853755,4209459],[16317633,13160194,15104030,1479591,13372473],[14341834,1814734,5211801,6970994,5649476],[15064523,10995133,15432537,13583943,5391958],[16642508,13031096,16568374,14921024,9994089],[15069260,12636734,14769714,11020099,6042174],[15461308,12379077,8565678,15867201,2297643],[12178352,16165523,16289657,8502692,11700084],[15137212,12377765,8624270,5720401,3805468],[16578515,14608574,12046755,13470802,6175017],[15744002,12720641,10682374,7012611,1835283],[16771826,16570853,16500184,15808877,3682098],[14933946,13162175,9686214,7126453,1711902],[13421772,11605539,10424603,2698295,0],[16510658,11325120,12694424,6399659,6314321],[16771503,16373420,16688802,9292973,9996388],[16185078,15263976,12125444,3355443,10027264],[15332089,10274020,15887439,3836361,1782367],[14471604,16431231,16285307,6201251,11556212],[16118999,14737329,10855276,5460531,9772843],[13172480,16384572,4275517,4915215,262148],[15725517,11720122,6401440,2396045,6312035],[14675174,9619363,3973794,2185837,2960681],[13631453,11853505,11030883,16719692,6051939],[13433998,9354900,14441278,8548485,5126493],[16776903,10340780,16751918,9539943,16081432],[16704941,16435814,10607538,16229697,16014668],[16776932,16773075,13692138,10475218,9140830],[11052967,13390458,15210333,4671303,3552822],[16772543,16311489,16220220,16074792,3018019],[16313809,12963782,14191242,10329491,4671555],[15855056,13494730,10537653,15960714,5588029],[9747045,2592944,5131594,2838130,3486770],[16711403,16315620,10859434,828848,5127984],[16177259,16476993,3379604,15797321,10945127],[13413525,10130556,10321529,7637891,5993836],[15595246,13746313,11739213,4271656,1380609],[15515155,9675818,3127468,3183250,290187],[16113875,16765107,16758924,14574178,5061435],[16776119,10942127,6731435,5995661,5187928],[16432680,16747008,8962304,49526,16711740],[16580341,16448483,15335393,14083779,13488055],[14539179,12572845,10280392,16232291,6503726],[754053,2056033,3560527,4208689,3155484],[16367478,9351877,15032924,13709629,6378357],[15657445,16769409,16438194,16759423,16751767],[11206400,16755200,43775,16711850,11141375],[13740596,10987588,10773891,12730669,5905994],[16315327,14476535,12570615,7692651,13844503]];
js_Boot.__toStr = ({ }).toString;
js_html_compat_Uint8Array.BYTES_PER_ELEMENT = 1;
Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);

//# sourceMappingURL=cc_example.js.map